apiVersion: batch/v1
kind: CronJob
metadata:
  name: kyverno-cleanup-reports
spec:
  schedule: "0 * * * *"
  concurrencyPolicy: Forbid
  suspend: false
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      parallelism: 1
      completions: 1
      ttlSecondsAfterFinished: 120
      template:
        spec:
          serviceAccountName: kyverno-cleanup-job
          automountServiceAccountToken: false
          terminationGracePeriodSeconds: 1
          hostNetwork: false
          hostPID: false
          hostIPC: false
          restartPolicy: OnFailure
          containers:
          - name: cleanup
            image: docker.io/bitnami/kubectl:latest
            command:
            - /bin/sh
            - -c
            - |
              COUNT=$(kubectl get admissionreports.kyverno.io -A | wc -l)
              if [ "$COUNT" -gt $(MAX_REPORTS_COUNT) ]; then
                echo "too many reports found ($COUNT), cleaning up..."
                kubectl delete admissionreports.kyverno.io -A -l='!audit.kyverno.io/report.aggregate'
              else
                echo "($COUNT) reports found, no clean up needed"
              fi
              COUNT=$(kubectl get clusteradmissionreports.kyverno.io -A | wc -l)
              if [ "$COUNT" -gt $(MAX_REPORTS_COUNT) ]; then
                echo "too many cluster reports found ($COUNT), cleaning up..."
                kubectl delete clusteradmissionreports.kyverno.io -A -l='!audit.kyverno.io/report.aggregate'
              else
                echo "($COUNT) cluster reports found, no clean up needed"
              fi
            env:
            - name: MAX_REPORTS_COUNT
              value: "10000"
            volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: serviceaccount-token
              readOnly: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              privileged: false
              seccompProfile:
                type: RuntimeDefault
              capabilities:
                drop:
                - ALL
          volumes:
          - name: serviceaccount-token
            projected:
              defaultMode: 0444
              sources:
              - serviceAccountToken:
                  expirationSeconds: 3600
                  path: token
              - configMap:
                  items:
                  - key: ca.crt
                    path: ca.crt
                  name: kube-root-ca.crt
              - downwardAPI:
                  items:
                  - fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                    path: namespace
          securityContext:
            runAsNonRoot: true
            runAsUser: 48014
            runAsGroup: 48014
            fsGroup: 48014

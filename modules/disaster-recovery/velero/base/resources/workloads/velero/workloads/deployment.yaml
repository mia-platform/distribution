apiVersion: apps/v1
kind: Deployment
metadata:
  name: velero
spec:
  revisionHistoryLimit: 5
  selector:
    matchLabels: {}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
  minReadySeconds: 0
  template:
    spec:
      serviceAccountName: velero
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 60
      hostNetwork: false
      hostPID: false
      hostIPC: false
      containers:
      - name: velero
        image: docker.io/velero/velero:latest
        resources: {}
        command:
        - /velero
        args:
        - server
        - --log-level=warning
        - --log-format=json
        - --uploader-type=kopia
        - --metrics-address=$(POD_IP):$(METRICS_PORT)
        - --profiler-address=localhost:$(PROFILER_PORT)
        env:
        - name: VELERO_SCRATCH_DIR
          value: /scratch
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: VELERO_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: LD_LIBRARY_PATH
          value: /plugins
        - name: METRICS_PORT
          value: PORT
        - name: PROFILER_PORT
          value: PORT
        ports:
        - name: metrics
          containerPort: 11270
          protocol: TCP
        - name: profiler
          containerPort: 11271
          protocol: TCP
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /metrics
            port: metrics
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /metrics
            port: metrics
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          privileged: false
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: plugins
          mountPath: /plugins
        - name: scratch
          mountPath: /scratch
        - name: tmpdir
          mountPath: /tmp
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: serviceaccount-token
          readOnly: true
      volumes:
      - name: plugins
        emptyDir:
          medium: Memory
      - name: scratch
        emptyDir:
          medium: Memory
      - name: tmpdir
        emptyDir:
          medium: Memory
      - name: serviceaccount-token
        projected:
          defaultMode: 0444
          sources:
          - serviceAccountToken:
              expirationSeconds: 3600
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        runAsUser: 48070
        runAsGroup: 48070
        fsGroup: 48070

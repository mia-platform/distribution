apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
spec:
  revisionHistoryLimit: 5
  selector:
    matchLabels: {}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 25%
  minReadySeconds: 0
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: unconfined
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
    spec:
      serviceAccountName: cilium
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      hostPID: false
      hostIPC: false
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: serviceaccount-token
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          privileged: false
          seccompProfile:
            type: RuntimeDefault
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
            - ALL
      - name: mount-cgroup
        image: quay.io/cilium/cilium:latest
        resources: {}
        command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" ${CGROUP_ROOT};
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
          readOnly: true
        - name: cni-path
          mountPath: /hostbin
          readOnly: false
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: true
          privileged: true
          seccompProfile:
            type: RuntimeDefault
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
            - ALL
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
      - name: apply-sysctl-overwrites
        image: quay.io/cilium/cilium:latest
        resources: {}
        command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
          readOnly: true
        - name: cni-path
          mountPath: /hostbin
          readOnly: false
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: true
          privileged: true
          seccompProfile:
            type: RuntimeDefault
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
            - ALL
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
      - name: mount-bpf-fs
        image: quay.io/cilium/cilium:latest
        resources: {}
        command:
        - /bin/bash
        - -c
        - --
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: true
          privileged: true
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
            add:
            - SYS_ADMIN
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          readOnly: false
      - name: wait-for-node-init
        image: quay.io/cilium/cilium:latest
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - |
          until test -s "/tmp/cilium-bootstrap.d/cilium-bootstrap-time"; do
            echo "Waiting on node-init to run...";
            sleep 1;
          done
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: true
          privileged: true
          seccompProfile:
            type: RuntimeDefault
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: cilium-bootstrap-file-dir
          mountPath: /tmp/cilium-bootstrap.d
          readOnly: true
      - name: clean-cilium-state
        image: quay.io/cilium/cilium:latest
        resources: {}
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: false
          privileged: true
          seccompProfile:
            type: RuntimeDefault
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
            - ALL
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
        volumeMounts:
        - name: cilium-run
          mountPath: /var/run/cilium
          readOnly: false
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          readOnly: false
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          readOnly: false
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.12.8@sha256:b6c3c48b380334b8f08dba6e0c28d906c0d722b8c2beb0d506b3cea27f66f78d"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: false
          privileged: true
          seccompProfile:
            type: RuntimeDefault
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
            - ALL
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin
      containers:
      - name: cilium-agent
        image: quay.io/cilium/cilium:latest
        resources: {}
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: prometheus
          containerPort: 9962
          hostPort: 9962
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9964
          hostPort: 9964
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9965
          hostPort: 9965
          protocol: TCP
        startupProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: brief
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: brief
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: brief
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: false
          privileged: true
          seccompProfile:
            type: RuntimeDefault
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
            - ALL
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: cilium-run
          mountPath: /var/run/cilium
          readOnly: false
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          readOnly: false
        - name: host-proc-sys-net
          mountPath: /host/proc/sys/net
          readOnly: false
        - name: host-proc-sys-kernel
          mountPath: /host/proc/sys/kernel
          readOnly: false
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
          readOnly: false
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
          readOnly: false
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: serviceaccount-token
          readOnly: true
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      - name: cilium-bootstrap-file-dir
        hostPath:
          path: /tmp/cilium-bootstrap.d
          type: DirectoryOrCreate
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          defaultMode: 0400
          optional: true
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
      - name: hubble-tls
        projected:
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
      - name: serviceaccount-token
        projected:
          defaultMode: 0444
          sources:
          - serviceAccountToken:
              expirationSeconds: 3600
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      tolerations:
      - operator: Exists

{
	"paths": {
		"/apis/gateway.networking.k8s.io/v1/gatewayclasses": {
			"get": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "list objects of kind GatewayClass",
				"operationId": "listGatewayNetworkingV1GatewayClass",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClassList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClassList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GatewayClass"
				}
			},
			"post": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "create a GatewayClass",
				"operationId": "createGatewayNetworkingV1GatewayClass",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "post",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GatewayClass"
				}
			},
			"delete": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "delete collection of GatewayClass",
				"operationId": "deleteGatewayNetworkingV1CollectionGatewayClass",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "deletecollection",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GatewayClass"
				}
			},
			"parameters": [
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/gateway.networking.k8s.io/v1/gatewayclasses/{name}": {
			"get": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "read the specified GatewayClass",
				"operationId": "readGatewayNetworkingV1GatewayClass",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GatewayClass"
				}
			},
			"put": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "replace the specified GatewayClass",
				"operationId": "replaceGatewayNetworkingV1GatewayClass",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GatewayClass"
				}
			},
			"delete": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "delete a GatewayClass",
				"operationId": "deleteGatewayNetworkingV1GatewayClass",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "gracePeriodSeconds",
						"in": "query",
						"description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "orphanDependents",
						"in": "query",
						"description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "propagationPolicy",
						"in": "query",
						"description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "delete",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GatewayClass"
				}
			},
			"patch": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "partially update the specified GatewayClass",
				"operationId": "patchGatewayNetworkingV1GatewayClass",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GatewayClass"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the GatewayClass",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/gateway.networking.k8s.io/v1/gatewayclasses/{name}/status": {
			"get": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "read status of the specified GatewayClass",
				"operationId": "readGatewayNetworkingV1GatewayClassStatus",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GatewayClass"
				}
			},
			"put": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "replace status of the specified GatewayClass",
				"operationId": "replaceGatewayNetworkingV1GatewayClassStatus",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GatewayClass"
				}
			},
			"patch": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "partially update status of the specified GatewayClass",
				"operationId": "patchGatewayNetworkingV1GatewayClassStatus",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GatewayClass"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the GatewayClass",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/gateway.networking.k8s.io/v1/gateways": {
			"get": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "list objects of kind Gateway",
				"operationId": "listGatewayNetworkingV1GatewayForAllNamespaces",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "Gateway"
				}
			},
			"parameters": [
				{
					"name": "allowWatchBookmarks",
					"in": "query",
					"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "continue",
					"in": "query",
					"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "fieldSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "labelSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "limit",
					"in": "query",
					"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersion",
					"in": "query",
					"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersionMatch",
					"in": "query",
					"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "sendInitialEvents",
					"in": "query",
					"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "timeoutSeconds",
					"in": "query",
					"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "watch",
					"in": "query",
					"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/gateway.networking.k8s.io/v1/grpcroutes": {
			"get": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "list objects of kind GRPCRoute",
				"operationId": "listGatewayNetworkingV1GRPCRouteForAllNamespaces",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRouteList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRouteList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GRPCRoute"
				}
			},
			"parameters": [
				{
					"name": "allowWatchBookmarks",
					"in": "query",
					"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "continue",
					"in": "query",
					"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "fieldSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "labelSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "limit",
					"in": "query",
					"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersion",
					"in": "query",
					"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersionMatch",
					"in": "query",
					"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "sendInitialEvents",
					"in": "query",
					"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "timeoutSeconds",
					"in": "query",
					"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "watch",
					"in": "query",
					"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/gateway.networking.k8s.io/v1/httproutes": {
			"get": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "list objects of kind HTTPRoute",
				"operationId": "listGatewayNetworkingV1HTTPRouteForAllNamespaces",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRouteList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRouteList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "HTTPRoute"
				}
			},
			"parameters": [
				{
					"name": "allowWatchBookmarks",
					"in": "query",
					"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "continue",
					"in": "query",
					"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "fieldSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "labelSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "limit",
					"in": "query",
					"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersion",
					"in": "query",
					"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersionMatch",
					"in": "query",
					"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "sendInitialEvents",
					"in": "query",
					"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "timeoutSeconds",
					"in": "query",
					"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "watch",
					"in": "query",
					"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/gateway.networking.k8s.io/v1/namespaces/{namespace}/gateways": {
			"get": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "list objects of kind Gateway",
				"operationId": "listGatewayNetworkingV1NamespacedGateway",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "Gateway"
				}
			},
			"post": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "create a Gateway",
				"operationId": "createGatewayNetworkingV1NamespacedGateway",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "post",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "Gateway"
				}
			},
			"delete": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "delete collection of Gateway",
				"operationId": "deleteGatewayNetworkingV1CollectionNamespacedGateway",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "deletecollection",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "Gateway"
				}
			},
			"parameters": [
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/gateway.networking.k8s.io/v1/namespaces/{namespace}/gateways/{name}": {
			"get": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "read the specified Gateway",
				"operationId": "readGatewayNetworkingV1NamespacedGateway",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "Gateway"
				}
			},
			"put": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "replace the specified Gateway",
				"operationId": "replaceGatewayNetworkingV1NamespacedGateway",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "Gateway"
				}
			},
			"delete": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "delete a Gateway",
				"operationId": "deleteGatewayNetworkingV1NamespacedGateway",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "gracePeriodSeconds",
						"in": "query",
						"description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "orphanDependents",
						"in": "query",
						"description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "propagationPolicy",
						"in": "query",
						"description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "delete",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "Gateway"
				}
			},
			"patch": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "partially update the specified Gateway",
				"operationId": "patchGatewayNetworkingV1NamespacedGateway",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "Gateway"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the Gateway",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/gateway.networking.k8s.io/v1/namespaces/{namespace}/gateways/{name}/status": {
			"get": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "read status of the specified Gateway",
				"operationId": "readGatewayNetworkingV1NamespacedGatewayStatus",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "Gateway"
				}
			},
			"put": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "replace status of the specified Gateway",
				"operationId": "replaceGatewayNetworkingV1NamespacedGatewayStatus",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "Gateway"
				}
			},
			"patch": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "partially update status of the specified Gateway",
				"operationId": "patchGatewayNetworkingV1NamespacedGatewayStatus",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "Gateway"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the Gateway",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/gateway.networking.k8s.io/v1/namespaces/{namespace}/grpcroutes": {
			"get": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "list objects of kind GRPCRoute",
				"operationId": "listGatewayNetworkingV1NamespacedGRPCRoute",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRouteList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRouteList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GRPCRoute"
				}
			},
			"post": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "create a GRPCRoute",
				"operationId": "createGatewayNetworkingV1NamespacedGRPCRoute",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "post",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GRPCRoute"
				}
			},
			"delete": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "delete collection of GRPCRoute",
				"operationId": "deleteGatewayNetworkingV1CollectionNamespacedGRPCRoute",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "deletecollection",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GRPCRoute"
				}
			},
			"parameters": [
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/gateway.networking.k8s.io/v1/namespaces/{namespace}/grpcroutes/{name}": {
			"get": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "read the specified GRPCRoute",
				"operationId": "readGatewayNetworkingV1NamespacedGRPCRoute",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GRPCRoute"
				}
			},
			"put": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "replace the specified GRPCRoute",
				"operationId": "replaceGatewayNetworkingV1NamespacedGRPCRoute",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GRPCRoute"
				}
			},
			"delete": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "delete a GRPCRoute",
				"operationId": "deleteGatewayNetworkingV1NamespacedGRPCRoute",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "gracePeriodSeconds",
						"in": "query",
						"description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "orphanDependents",
						"in": "query",
						"description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "propagationPolicy",
						"in": "query",
						"description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "delete",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GRPCRoute"
				}
			},
			"patch": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "partially update the specified GRPCRoute",
				"operationId": "patchGatewayNetworkingV1NamespacedGRPCRoute",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GRPCRoute"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the GRPCRoute",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/gateway.networking.k8s.io/v1/namespaces/{namespace}/grpcroutes/{name}/status": {
			"get": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "read status of the specified GRPCRoute",
				"operationId": "readGatewayNetworkingV1NamespacedGRPCRouteStatus",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GRPCRoute"
				}
			},
			"put": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "replace status of the specified GRPCRoute",
				"operationId": "replaceGatewayNetworkingV1NamespacedGRPCRouteStatus",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GRPCRoute"
				}
			},
			"patch": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "partially update status of the specified GRPCRoute",
				"operationId": "patchGatewayNetworkingV1NamespacedGRPCRouteStatus",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "GRPCRoute"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the GRPCRoute",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/gateway.networking.k8s.io/v1/namespaces/{namespace}/httproutes": {
			"get": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "list objects of kind HTTPRoute",
				"operationId": "listGatewayNetworkingV1NamespacedHTTPRoute",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRouteList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRouteList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "HTTPRoute"
				}
			},
			"post": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "create a HTTPRoute",
				"operationId": "createGatewayNetworkingV1NamespacedHTTPRoute",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "post",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "HTTPRoute"
				}
			},
			"delete": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "delete collection of HTTPRoute",
				"operationId": "deleteGatewayNetworkingV1CollectionNamespacedHTTPRoute",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "deletecollection",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "HTTPRoute"
				}
			},
			"parameters": [
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/gateway.networking.k8s.io/v1/namespaces/{namespace}/httproutes/{name}": {
			"get": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "read the specified HTTPRoute",
				"operationId": "readGatewayNetworkingV1NamespacedHTTPRoute",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "HTTPRoute"
				}
			},
			"put": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "replace the specified HTTPRoute",
				"operationId": "replaceGatewayNetworkingV1NamespacedHTTPRoute",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "HTTPRoute"
				}
			},
			"delete": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "delete a HTTPRoute",
				"operationId": "deleteGatewayNetworkingV1NamespacedHTTPRoute",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "gracePeriodSeconds",
						"in": "query",
						"description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "orphanDependents",
						"in": "query",
						"description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "propagationPolicy",
						"in": "query",
						"description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "delete",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "HTTPRoute"
				}
			},
			"patch": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "partially update the specified HTTPRoute",
				"operationId": "patchGatewayNetworkingV1NamespacedHTTPRoute",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "HTTPRoute"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the HTTPRoute",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/gateway.networking.k8s.io/v1/namespaces/{namespace}/httproutes/{name}/status": {
			"get": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "read status of the specified HTTPRoute",
				"operationId": "readGatewayNetworkingV1NamespacedHTTPRouteStatus",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "HTTPRoute"
				}
			},
			"put": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "replace status of the specified HTTPRoute",
				"operationId": "replaceGatewayNetworkingV1NamespacedHTTPRouteStatus",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "HTTPRoute"
				}
			},
			"patch": {
				"tags": [
					"gatewayNetworking_v1"
				],
				"description": "partially update status of the specified HTTPRoute",
				"operationId": "patchGatewayNetworkingV1NamespacedHTTPRouteStatus",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "gateway.networking.k8s.io",
					"version": "v1",
					"kind": "HTTPRoute"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the HTTPRoute",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/ingressroutes": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind IngressRoute",
				"operationId": "listTraefikIoV1alpha1IngressRouteForAllNamespaces",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRoute"
				}
			},
			"parameters": [
				{
					"name": "allowWatchBookmarks",
					"in": "query",
					"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "continue",
					"in": "query",
					"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "fieldSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "labelSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "limit",
					"in": "query",
					"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersion",
					"in": "query",
					"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersionMatch",
					"in": "query",
					"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "sendInitialEvents",
					"in": "query",
					"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "timeoutSeconds",
					"in": "query",
					"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "watch",
					"in": "query",
					"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/ingressroutetcps": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind IngressRouteTCP",
				"operationId": "listTraefikIoV1alpha1IngressRouteTCPForAllNamespaces",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCPList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCPList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteTCP"
				}
			},
			"parameters": [
				{
					"name": "allowWatchBookmarks",
					"in": "query",
					"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "continue",
					"in": "query",
					"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "fieldSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "labelSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "limit",
					"in": "query",
					"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersion",
					"in": "query",
					"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersionMatch",
					"in": "query",
					"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "sendInitialEvents",
					"in": "query",
					"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "timeoutSeconds",
					"in": "query",
					"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "watch",
					"in": "query",
					"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/ingressrouteudps": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind IngressRouteUDP",
				"operationId": "listTraefikIoV1alpha1IngressRouteUDPForAllNamespaces",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDPList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDPList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteUDP"
				}
			},
			"parameters": [
				{
					"name": "allowWatchBookmarks",
					"in": "query",
					"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "continue",
					"in": "query",
					"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "fieldSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "labelSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "limit",
					"in": "query",
					"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersion",
					"in": "query",
					"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersionMatch",
					"in": "query",
					"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "sendInitialEvents",
					"in": "query",
					"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "timeoutSeconds",
					"in": "query",
					"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "watch",
					"in": "query",
					"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/middlewares": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind Middleware",
				"operationId": "listTraefikIoV1alpha1MiddlewareForAllNamespaces",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "Middleware"
				}
			},
			"parameters": [
				{
					"name": "allowWatchBookmarks",
					"in": "query",
					"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "continue",
					"in": "query",
					"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "fieldSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "labelSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "limit",
					"in": "query",
					"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersion",
					"in": "query",
					"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersionMatch",
					"in": "query",
					"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "sendInitialEvents",
					"in": "query",
					"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "timeoutSeconds",
					"in": "query",
					"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "watch",
					"in": "query",
					"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/middlewaretcps": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind MiddlewareTCP",
				"operationId": "listTraefikIoV1alpha1MiddlewareTCPForAllNamespaces",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCPList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCPList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "MiddlewareTCP"
				}
			},
			"parameters": [
				{
					"name": "allowWatchBookmarks",
					"in": "query",
					"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "continue",
					"in": "query",
					"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "fieldSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "labelSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "limit",
					"in": "query",
					"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersion",
					"in": "query",
					"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersionMatch",
					"in": "query",
					"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "sendInitialEvents",
					"in": "query",
					"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "timeoutSeconds",
					"in": "query",
					"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "watch",
					"in": "query",
					"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/ingressroutes": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind IngressRoute",
				"operationId": "listTraefikIoV1alpha1NamespacedIngressRoute",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRoute"
				}
			},
			"post": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "create an IngressRoute",
				"operationId": "createTraefikIoV1alpha1NamespacedIngressRoute",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "post",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRoute"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete collection of IngressRoute",
				"operationId": "deleteTraefikIoV1alpha1CollectionNamespacedIngressRoute",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "deletecollection",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRoute"
				}
			},
			"parameters": [
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/ingressroutes/{name}": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "read the specified IngressRoute",
				"operationId": "readTraefikIoV1alpha1NamespacedIngressRoute",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRoute"
				}
			},
			"put": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "replace the specified IngressRoute",
				"operationId": "replaceTraefikIoV1alpha1NamespacedIngressRoute",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRoute"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete an IngressRoute",
				"operationId": "deleteTraefikIoV1alpha1NamespacedIngressRoute",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "gracePeriodSeconds",
						"in": "query",
						"description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "orphanDependents",
						"in": "query",
						"description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "propagationPolicy",
						"in": "query",
						"description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "delete",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRoute"
				}
			},
			"patch": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "partially update the specified IngressRoute",
				"operationId": "patchTraefikIoV1alpha1NamespacedIngressRoute",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRoute"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the IngressRoute",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/ingressroutetcps": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind IngressRouteTCP",
				"operationId": "listTraefikIoV1alpha1NamespacedIngressRouteTCP",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCPList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCPList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteTCP"
				}
			},
			"post": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "create an IngressRouteTCP",
				"operationId": "createTraefikIoV1alpha1NamespacedIngressRouteTCP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "post",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteTCP"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete collection of IngressRouteTCP",
				"operationId": "deleteTraefikIoV1alpha1CollectionNamespacedIngressRouteTCP",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "deletecollection",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteTCP"
				}
			},
			"parameters": [
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/ingressroutetcps/{name}": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "read the specified IngressRouteTCP",
				"operationId": "readTraefikIoV1alpha1NamespacedIngressRouteTCP",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteTCP"
				}
			},
			"put": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "replace the specified IngressRouteTCP",
				"operationId": "replaceTraefikIoV1alpha1NamespacedIngressRouteTCP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteTCP"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete an IngressRouteTCP",
				"operationId": "deleteTraefikIoV1alpha1NamespacedIngressRouteTCP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "gracePeriodSeconds",
						"in": "query",
						"description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "orphanDependents",
						"in": "query",
						"description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "propagationPolicy",
						"in": "query",
						"description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "delete",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteTCP"
				}
			},
			"patch": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "partially update the specified IngressRouteTCP",
				"operationId": "patchTraefikIoV1alpha1NamespacedIngressRouteTCP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteTCP"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the IngressRouteTCP",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/ingressrouteudps": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind IngressRouteUDP",
				"operationId": "listTraefikIoV1alpha1NamespacedIngressRouteUDP",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDPList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDPList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteUDP"
				}
			},
			"post": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "create an IngressRouteUDP",
				"operationId": "createTraefikIoV1alpha1NamespacedIngressRouteUDP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "post",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteUDP"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete collection of IngressRouteUDP",
				"operationId": "deleteTraefikIoV1alpha1CollectionNamespacedIngressRouteUDP",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "deletecollection",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteUDP"
				}
			},
			"parameters": [
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/ingressrouteudps/{name}": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "read the specified IngressRouteUDP",
				"operationId": "readTraefikIoV1alpha1NamespacedIngressRouteUDP",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteUDP"
				}
			},
			"put": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "replace the specified IngressRouteUDP",
				"operationId": "replaceTraefikIoV1alpha1NamespacedIngressRouteUDP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteUDP"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete an IngressRouteUDP",
				"operationId": "deleteTraefikIoV1alpha1NamespacedIngressRouteUDP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "gracePeriodSeconds",
						"in": "query",
						"description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "orphanDependents",
						"in": "query",
						"description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "propagationPolicy",
						"in": "query",
						"description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "delete",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteUDP"
				}
			},
			"patch": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "partially update the specified IngressRouteUDP",
				"operationId": "patchTraefikIoV1alpha1NamespacedIngressRouteUDP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "IngressRouteUDP"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the IngressRouteUDP",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/middlewares": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind Middleware",
				"operationId": "listTraefikIoV1alpha1NamespacedMiddleware",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "Middleware"
				}
			},
			"post": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "create a Middleware",
				"operationId": "createTraefikIoV1alpha1NamespacedMiddleware",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "post",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "Middleware"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete collection of Middleware",
				"operationId": "deleteTraefikIoV1alpha1CollectionNamespacedMiddleware",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "deletecollection",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "Middleware"
				}
			},
			"parameters": [
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/middlewares/{name}": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "read the specified Middleware",
				"operationId": "readTraefikIoV1alpha1NamespacedMiddleware",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "Middleware"
				}
			},
			"put": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "replace the specified Middleware",
				"operationId": "replaceTraefikIoV1alpha1NamespacedMiddleware",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "Middleware"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete a Middleware",
				"operationId": "deleteTraefikIoV1alpha1NamespacedMiddleware",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "gracePeriodSeconds",
						"in": "query",
						"description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "orphanDependents",
						"in": "query",
						"description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "propagationPolicy",
						"in": "query",
						"description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "delete",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "Middleware"
				}
			},
			"patch": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "partially update the specified Middleware",
				"operationId": "patchTraefikIoV1alpha1NamespacedMiddleware",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "Middleware"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the Middleware",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/middlewaretcps": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind MiddlewareTCP",
				"operationId": "listTraefikIoV1alpha1NamespacedMiddlewareTCP",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCPList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCPList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "MiddlewareTCP"
				}
			},
			"post": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "create a MiddlewareTCP",
				"operationId": "createTraefikIoV1alpha1NamespacedMiddlewareTCP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "post",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "MiddlewareTCP"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete collection of MiddlewareTCP",
				"operationId": "deleteTraefikIoV1alpha1CollectionNamespacedMiddlewareTCP",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "deletecollection",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "MiddlewareTCP"
				}
			},
			"parameters": [
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/middlewaretcps/{name}": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "read the specified MiddlewareTCP",
				"operationId": "readTraefikIoV1alpha1NamespacedMiddlewareTCP",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "MiddlewareTCP"
				}
			},
			"put": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "replace the specified MiddlewareTCP",
				"operationId": "replaceTraefikIoV1alpha1NamespacedMiddlewareTCP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "MiddlewareTCP"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete a MiddlewareTCP",
				"operationId": "deleteTraefikIoV1alpha1NamespacedMiddlewareTCP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "gracePeriodSeconds",
						"in": "query",
						"description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "orphanDependents",
						"in": "query",
						"description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "propagationPolicy",
						"in": "query",
						"description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "delete",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "MiddlewareTCP"
				}
			},
			"patch": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "partially update the specified MiddlewareTCP",
				"operationId": "patchTraefikIoV1alpha1NamespacedMiddlewareTCP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "MiddlewareTCP"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the MiddlewareTCP",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/serverstransports": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind ServersTransport",
				"operationId": "listTraefikIoV1alpha1NamespacedServersTransport",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransport"
				}
			},
			"post": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "create a ServersTransport",
				"operationId": "createTraefikIoV1alpha1NamespacedServersTransport",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "post",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransport"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete collection of ServersTransport",
				"operationId": "deleteTraefikIoV1alpha1CollectionNamespacedServersTransport",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "deletecollection",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransport"
				}
			},
			"parameters": [
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/serverstransports/{name}": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "read the specified ServersTransport",
				"operationId": "readTraefikIoV1alpha1NamespacedServersTransport",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransport"
				}
			},
			"put": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "replace the specified ServersTransport",
				"operationId": "replaceTraefikIoV1alpha1NamespacedServersTransport",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransport"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete a ServersTransport",
				"operationId": "deleteTraefikIoV1alpha1NamespacedServersTransport",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "gracePeriodSeconds",
						"in": "query",
						"description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "orphanDependents",
						"in": "query",
						"description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "propagationPolicy",
						"in": "query",
						"description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "delete",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransport"
				}
			},
			"patch": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "partially update the specified ServersTransport",
				"operationId": "patchTraefikIoV1alpha1NamespacedServersTransport",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransport"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the ServersTransport",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/serverstransporttcps": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind ServersTransportTCP",
				"operationId": "listTraefikIoV1alpha1NamespacedServersTransportTCP",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCPList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCPList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransportTCP"
				}
			},
			"post": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "create a ServersTransportTCP",
				"operationId": "createTraefikIoV1alpha1NamespacedServersTransportTCP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "post",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransportTCP"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete collection of ServersTransportTCP",
				"operationId": "deleteTraefikIoV1alpha1CollectionNamespacedServersTransportTCP",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "deletecollection",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransportTCP"
				}
			},
			"parameters": [
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/serverstransporttcps/{name}": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "read the specified ServersTransportTCP",
				"operationId": "readTraefikIoV1alpha1NamespacedServersTransportTCP",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransportTCP"
				}
			},
			"put": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "replace the specified ServersTransportTCP",
				"operationId": "replaceTraefikIoV1alpha1NamespacedServersTransportTCP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransportTCP"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete a ServersTransportTCP",
				"operationId": "deleteTraefikIoV1alpha1NamespacedServersTransportTCP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "gracePeriodSeconds",
						"in": "query",
						"description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "orphanDependents",
						"in": "query",
						"description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "propagationPolicy",
						"in": "query",
						"description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "delete",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransportTCP"
				}
			},
			"patch": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "partially update the specified ServersTransportTCP",
				"operationId": "patchTraefikIoV1alpha1NamespacedServersTransportTCP",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransportTCP"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the ServersTransportTCP",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/tlsoptions": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind TLSOption",
				"operationId": "listTraefikIoV1alpha1NamespacedTLSOption",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOptionList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOptionList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSOption"
				}
			},
			"post": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "create a TLSOption",
				"operationId": "createTraefikIoV1alpha1NamespacedTLSOption",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "post",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSOption"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete collection of TLSOption",
				"operationId": "deleteTraefikIoV1alpha1CollectionNamespacedTLSOption",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "deletecollection",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSOption"
				}
			},
			"parameters": [
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/tlsoptions/{name}": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "read the specified TLSOption",
				"operationId": "readTraefikIoV1alpha1NamespacedTLSOption",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSOption"
				}
			},
			"put": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "replace the specified TLSOption",
				"operationId": "replaceTraefikIoV1alpha1NamespacedTLSOption",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSOption"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete a TLSOption",
				"operationId": "deleteTraefikIoV1alpha1NamespacedTLSOption",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "gracePeriodSeconds",
						"in": "query",
						"description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "orphanDependents",
						"in": "query",
						"description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "propagationPolicy",
						"in": "query",
						"description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "delete",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSOption"
				}
			},
			"patch": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "partially update the specified TLSOption",
				"operationId": "patchTraefikIoV1alpha1NamespacedTLSOption",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSOption"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the TLSOption",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/tlsstores": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind TLSStore",
				"operationId": "listTraefikIoV1alpha1NamespacedTLSStore",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStoreList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStoreList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSStore"
				}
			},
			"post": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "create a TLSStore",
				"operationId": "createTraefikIoV1alpha1NamespacedTLSStore",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "post",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSStore"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete collection of TLSStore",
				"operationId": "deleteTraefikIoV1alpha1CollectionNamespacedTLSStore",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "deletecollection",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSStore"
				}
			},
			"parameters": [
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/tlsstores/{name}": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "read the specified TLSStore",
				"operationId": "readTraefikIoV1alpha1NamespacedTLSStore",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSStore"
				}
			},
			"put": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "replace the specified TLSStore",
				"operationId": "replaceTraefikIoV1alpha1NamespacedTLSStore",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSStore"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete a TLSStore",
				"operationId": "deleteTraefikIoV1alpha1NamespacedTLSStore",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "gracePeriodSeconds",
						"in": "query",
						"description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "orphanDependents",
						"in": "query",
						"description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "propagationPolicy",
						"in": "query",
						"description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "delete",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSStore"
				}
			},
			"patch": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "partially update the specified TLSStore",
				"operationId": "patchTraefikIoV1alpha1NamespacedTLSStore",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSStore"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the TLSStore",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/traefikservices": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind TraefikService",
				"operationId": "listTraefikIoV1alpha1NamespacedTraefikService",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikServiceList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikServiceList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TraefikService"
				}
			},
			"post": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "create a TraefikService",
				"operationId": "createTraefikIoV1alpha1NamespacedTraefikService",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "post",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TraefikService"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete collection of TraefikService",
				"operationId": "deleteTraefikIoV1alpha1CollectionNamespacedTraefikService",
				"parameters": [
					{
						"name": "allowWatchBookmarks",
						"in": "query",
						"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "continue",
						"in": "query",
						"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "labelSelector",
						"in": "query",
						"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "resourceVersionMatch",
						"in": "query",
						"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "sendInitialEvents",
						"in": "query",
						"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "timeoutSeconds",
						"in": "query",
						"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "watch",
						"in": "query",
						"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "deletecollection",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TraefikService"
				}
			},
			"parameters": [
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/namespaces/{namespace}/traefikservices/{name}": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "read the specified TraefikService",
				"operationId": "readTraefikIoV1alpha1NamespacedTraefikService",
				"parameters": [
					{
						"name": "resourceVersion",
						"in": "query",
						"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "get",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TraefikService"
				}
			},
			"put": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "replace the specified TraefikService",
				"operationId": "replaceTraefikIoV1alpha1NamespacedTraefikService",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "put",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TraefikService"
				}
			},
			"delete": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "delete a TraefikService",
				"operationId": "deleteTraefikIoV1alpha1NamespacedTraefikService",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "gracePeriodSeconds",
						"in": "query",
						"description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
						"schema": {
							"type": "integer",
							"uniqueItems": true
						}
					},
					{
						"name": "orphanDependents",
						"in": "query",
						"description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					},
					{
						"name": "propagationPolicy",
						"in": "query",
						"description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						},
						"application/yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"202": {
						"description": "Accepted",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "delete",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TraefikService"
				}
			},
			"patch": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "partially update the specified TraefikService",
				"operationId": "patchTraefikIoV1alpha1NamespacedTraefikService",
				"parameters": [
					{
						"name": "dryRun",
						"in": "query",
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldManager",
						"in": "query",
						"description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "fieldValidation",
						"in": "query",
						"description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
						"schema": {
							"type": "string",
							"uniqueItems": true
						}
					},
					{
						"name": "force",
						"in": "query",
						"description": "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.",
						"schema": {
							"type": "boolean",
							"uniqueItems": true
						}
					}
				],
				"requestBody": {
					"content": {
						"application/apply-patch+yaml": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/json-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						},
						"application/merge-patch+json": {
							"schema": {
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "patch",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TraefikService"
				}
			},
			"parameters": [
				{
					"name": "name",
					"in": "path",
					"description": "name of the TraefikService",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "namespace",
					"in": "path",
					"description": "object name and auth scope, such as for teams and projects",
					"required": true,
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/serverstransports": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind ServersTransport",
				"operationId": "listTraefikIoV1alpha1ServersTransportForAllNamespaces",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransport"
				}
			},
			"parameters": [
				{
					"name": "allowWatchBookmarks",
					"in": "query",
					"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "continue",
					"in": "query",
					"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "fieldSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "labelSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "limit",
					"in": "query",
					"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersion",
					"in": "query",
					"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersionMatch",
					"in": "query",
					"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "sendInitialEvents",
					"in": "query",
					"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "timeoutSeconds",
					"in": "query",
					"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "watch",
					"in": "query",
					"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/serverstransporttcps": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind ServersTransportTCP",
				"operationId": "listTraefikIoV1alpha1ServersTransportTCPForAllNamespaces",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCPList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCPList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "ServersTransportTCP"
				}
			},
			"parameters": [
				{
					"name": "allowWatchBookmarks",
					"in": "query",
					"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "continue",
					"in": "query",
					"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "fieldSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "labelSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "limit",
					"in": "query",
					"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersion",
					"in": "query",
					"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersionMatch",
					"in": "query",
					"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "sendInitialEvents",
					"in": "query",
					"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "timeoutSeconds",
					"in": "query",
					"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "watch",
					"in": "query",
					"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/tlsoptions": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind TLSOption",
				"operationId": "listTraefikIoV1alpha1TLSOptionForAllNamespaces",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOptionList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOptionList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSOption"
				}
			},
			"parameters": [
				{
					"name": "allowWatchBookmarks",
					"in": "query",
					"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "continue",
					"in": "query",
					"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "fieldSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "labelSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "limit",
					"in": "query",
					"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersion",
					"in": "query",
					"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersionMatch",
					"in": "query",
					"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "sendInitialEvents",
					"in": "query",
					"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "timeoutSeconds",
					"in": "query",
					"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "watch",
					"in": "query",
					"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/tlsstores": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind TLSStore",
				"operationId": "listTraefikIoV1alpha1TLSStoreForAllNamespaces",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStoreList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStoreList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TLSStore"
				}
			},
			"parameters": [
				{
					"name": "allowWatchBookmarks",
					"in": "query",
					"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "continue",
					"in": "query",
					"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "fieldSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "labelSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "limit",
					"in": "query",
					"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersion",
					"in": "query",
					"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersionMatch",
					"in": "query",
					"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "sendInitialEvents",
					"in": "query",
					"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "timeoutSeconds",
					"in": "query",
					"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "watch",
					"in": "query",
					"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				}
			]
		},
		"/apis/traefik.io/v1alpha1/traefikservices": {
			"get": {
				"tags": [
					"traefikIo_v1alpha1"
				],
				"description": "list objects of kind TraefikService",
				"operationId": "listTraefikIoV1alpha1TraefikServiceForAllNamespaces",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikServiceList"
								}
							},
							"application/yaml": {
								"schema": {
									"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikServiceList"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"x-kubernetes-action": "list",
				"x-kubernetes-group-version-kind": {
					"group": "traefik.io",
					"version": "v1alpha1",
					"kind": "TraefikService"
				}
			},
			"parameters": [
				{
					"name": "allowWatchBookmarks",
					"in": "query",
					"description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "continue",
					"in": "query",
					"description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "fieldSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "labelSelector",
					"in": "query",
					"description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "limit",
					"in": "query",
					"description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "pretty",
					"in": "query",
					"description": "If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersion",
					"in": "query",
					"description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "resourceVersionMatch",
					"in": "query",
					"description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
					"schema": {
						"type": "string",
						"uniqueItems": true
					}
				},
				{
					"name": "sendInitialEvents",
					"in": "query",
					"description": "`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				},
				{
					"name": "timeoutSeconds",
					"in": "query",
					"description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
					"schema": {
						"type": "integer",
						"uniqueItems": true
					}
				},
				{
					"name": "watch",
					"in": "query",
					"description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
					"schema": {
						"type": "boolean",
						"uniqueItems": true
					}
				}
			]
		}
	},
	"components": {
		"schemas": {
			"io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions": {
				"description": "DeleteOptions may be provided when deleting an API object.",
				"type": "object",
				"properties": {
					"apiVersion": {
						"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
						"type": "string"
					},
					"dryRun": {
						"description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
						"type": "array",
						"items": {
							"type": "string",
							"default": ""
						}
					},
					"gracePeriodSeconds": {
						"description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
						"type": "integer",
						"format": "int64"
					},
					"kind": {
						"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"type": "string"
					},
					"orphanDependents": {
						"description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
						"type": "boolean"
					},
					"preconditions": {
						"description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.",
						"allOf": [
							{
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions"
							}
						]
					},
					"propagationPolicy": {
						"description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
						"type": "string"
					}
				},
				"x-kubernetes-group-version-kind": [
					{
						"group": "",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "admissionregistration.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "admissionregistration.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1alpha1"
					},
					{
						"group": "admissionregistration.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "apps",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "apps",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "apps",
						"kind": "DeleteOptions",
						"version": "v1beta2"
					},
					{
						"group": "authentication.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "authentication.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1alpha1"
					},
					{
						"group": "authentication.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "authorization.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "authorization.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "autoscaling",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "autoscaling",
						"kind": "DeleteOptions",
						"version": "v2"
					},
					{
						"group": "autoscaling",
						"kind": "DeleteOptions",
						"version": "v2beta1"
					},
					{
						"group": "autoscaling",
						"kind": "DeleteOptions",
						"version": "v2beta2"
					},
					{
						"group": "batch",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "batch",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "certificates.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "certificates.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1alpha1"
					},
					{
						"group": "certificates.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "coordination.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "coordination.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "discovery.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "discovery.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "events.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "events.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "extensions",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "flowcontrol.apiserver.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "flowcontrol.apiserver.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "flowcontrol.apiserver.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1beta2"
					},
					{
						"group": "flowcontrol.apiserver.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1beta3"
					},
					{
						"group": "internal.apiserver.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1alpha1"
					},
					{
						"group": "networking.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "networking.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1alpha1"
					},
					{
						"group": "networking.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "node.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "node.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1alpha1"
					},
					{
						"group": "node.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "policy",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "policy",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "rbac.authorization.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "rbac.authorization.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1alpha1"
					},
					{
						"group": "rbac.authorization.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "resource.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1alpha2"
					},
					{
						"group": "scheduling.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "scheduling.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1alpha1"
					},
					{
						"group": "scheduling.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					},
					{
						"group": "storage.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1"
					},
					{
						"group": "storage.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1alpha1"
					},
					{
						"group": "storage.k8s.io",
						"kind": "DeleteOptions",
						"version": "v1beta1"
					}
				]
			},
			"io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1": {
				"description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
				"type": "object"
			},
			"io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta": {
				"description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
				"type": "object",
				"properties": {
					"continue": {
						"description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
						"type": "string"
					},
					"remainingItemCount": {
						"description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
						"type": "integer",
						"format": "int64"
					},
					"resourceVersion": {
						"description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
						"type": "string"
					},
					"selfLink": {
						"description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
						"type": "string"
					}
				}
			},
			"io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
				"description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
				"type": "object",
				"properties": {
					"apiVersion": {
						"description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
						"type": "string"
					},
					"fieldsType": {
						"description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
						"type": "string"
					},
					"fieldsV1": {
						"description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
						"allOf": [
							{
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"
							}
						]
					},
					"manager": {
						"description": "Manager is an identifier of the workflow managing these fields.",
						"type": "string"
					},
					"operation": {
						"description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
						"type": "string"
					},
					"subresource": {
						"description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
						"type": "string"
					},
					"time": {
						"description": "Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.",
						"allOf": [
							{
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
							}
						]
					}
				}
			},
			"io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
				"description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
				"type": "object",
				"properties": {
					"annotations": {
						"description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations",
						"type": "object",
						"additionalProperties": {
							"type": "string",
							"default": ""
						}
					},
					"creationTimestamp": {
						"description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
						"allOf": [
							{
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
							}
						]
					},
					"deletionGracePeriodSeconds": {
						"description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
						"type": "integer",
						"format": "int64"
					},
					"deletionTimestamp": {
						"description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
						"allOf": [
							{
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
							}
						]
					},
					"finalizers": {
						"description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
						"type": "array",
						"items": {
							"type": "string",
							"default": ""
						},
						"x-kubernetes-patch-strategy": "merge"
					},
					"generateName": {
						"description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
						"type": "string"
					},
					"generation": {
						"description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
						"type": "integer",
						"format": "int64"
					},
					"labels": {
						"description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels",
						"type": "object",
						"additionalProperties": {
							"type": "string",
							"default": ""
						}
					},
					"managedFields": {
						"description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
						"type": "array",
						"items": {
							"default": {},
							"allOf": [
								{
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
								}
							]
						}
					},
					"name": {
						"description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
						"type": "string"
					},
					"namespace": {
						"description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces",
						"type": "string"
					},
					"ownerReferences": {
						"description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
						"type": "array",
						"items": {
							"default": {},
							"allOf": [
								{
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
								}
							]
						},
						"x-kubernetes-patch-merge-key": "uid",
						"x-kubernetes-patch-strategy": "merge"
					},
					"resourceVersion": {
						"description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
						"type": "string"
					},
					"selfLink": {
						"description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
						"type": "string"
					},
					"uid": {
						"description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
						"type": "string"
					}
				}
			},
			"io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
				"description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
				"type": "object",
				"required": [
					"apiVersion",
					"kind",
					"name",
					"uid"
				],
				"properties": {
					"apiVersion": {
						"description": "API version of the referent.",
						"type": "string",
						"default": ""
					},
					"blockOwnerDeletion": {
						"description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
						"type": "boolean"
					},
					"controller": {
						"description": "If true, this reference points to the managing controller.",
						"type": "boolean"
					},
					"kind": {
						"description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"type": "string",
						"default": ""
					},
					"name": {
						"description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
						"type": "string",
						"default": ""
					},
					"uid": {
						"description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
						"type": "string",
						"default": ""
					}
				},
				"x-kubernetes-map-type": "atomic"
			},
			"io.k8s.apimachinery.pkg.apis.meta.v1.Patch": {
				"description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
				"type": "object"
			},
			"io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions": {
				"description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
				"type": "object",
				"properties": {
					"resourceVersion": {
						"description": "Specifies the target ResourceVersion",
						"type": "string"
					},
					"uid": {
						"description": "Specifies the target UID.",
						"type": "string"
					}
				}
			},
			"io.k8s.apimachinery.pkg.apis.meta.v1.Status": {
				"description": "Status is a return value for calls that don't return other objects.",
				"type": "object",
				"properties": {
					"apiVersion": {
						"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
						"type": "string"
					},
					"code": {
						"description": "Suggested HTTP return code for this status, 0 if not set.",
						"type": "integer",
						"format": "int32"
					},
					"details": {
						"description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
						"allOf": [
							{
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails"
							}
						]
					},
					"kind": {
						"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"type": "string"
					},
					"message": {
						"description": "A human-readable description of the status of this operation.",
						"type": "string"
					},
					"metadata": {
						"description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"default": {},
						"allOf": [
							{
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
							}
						]
					},
					"reason": {
						"description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
						"type": "string"
					},
					"status": {
						"description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
						"type": "string"
					}
				},
				"x-kubernetes-group-version-kind": [
					{
						"group": "",
						"kind": "Status",
						"version": "v1"
					},
					{
						"group": "resource.k8s.io",
						"kind": "Status",
						"version": "v1alpha2"
					}
				]
			},
			"io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause": {
				"description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
				"type": "object",
				"properties": {
					"field": {
						"description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
						"type": "string"
					},
					"message": {
						"description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
						"type": "string"
					},
					"reason": {
						"description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
						"type": "string"
					}
				}
			},
			"io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails": {
				"description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
				"type": "object",
				"properties": {
					"causes": {
						"description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
						"type": "array",
						"items": {
							"default": {},
							"allOf": [
								{
									"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
								}
							]
						}
					},
					"group": {
						"description": "The group attribute of the resource associated with the status StatusReason.",
						"type": "string"
					},
					"kind": {
						"description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"type": "string"
					},
					"name": {
						"description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
						"type": "string"
					},
					"retryAfterSeconds": {
						"description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
						"type": "integer",
						"format": "int32"
					},
					"uid": {
						"description": "UID of the resource. (when there is a single resource which can be described). More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
						"type": "string"
					}
				}
			},
			"io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
				"description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
				"type": "string",
				"format": "date-time"
			},
			"io.k8s.networking.gateway.v1.GRPCRoute": {
				"description": "GRPCRoute provides a way to route gRPC requests. This includes the capability\nto match requests by hostname, gRPC service, gRPC method, or HTTP/2 header.\nFilters can be used to specify additional processing steps. Backends specify\nwhere matching requests will be routed.\n\n\nGRPCRoute falls under extended support within the Gateway API. Within the\nfollowing specification, the word \"MUST\" indicates that an implementation\nsupporting GRPCRoute must conform to the indicated requirement, but an\nimplementation not supporting this route type need not follow the requirement\nunless explicitly indicated.\n\n\nImplementations supporting `GRPCRoute` with the `HTTPS` `ProtocolType` MUST\naccept HTTP/2 connections without an initial upgrade from HTTP/1.1, i.e. via\nALPN. If the implementation does not support this, then it MUST set the\n\"Accepted\" condition to \"False\" for the affected listener with a reason of\n\"UnsupportedProtocol\".  Implementations MAY also accept HTTP/2 connections\nwith an upgrade from HTTP/1.\n\n\nImplementations supporting `GRPCRoute` with the `HTTP` `ProtocolType` MUST\nsupport HTTP/2 over cleartext TCP (h2c,\nhttps://www.rfc-editor.org/rfc/rfc7540#section-3.1) without an initial\nupgrade from HTTP/1.1, i.e. with prior knowledge\n(https://www.rfc-editor.org/rfc/rfc7540#section-3.4). If the implementation\ndoes not support this, then it MUST set the \"Accepted\" condition to \"False\"\nfor the affected listener with a reason of \"UnsupportedProtocol\".\nImplementations MAY also accept HTTP/2 connections with an upgrade from\nHTTP/1, i.e. without prior knowledge.",
				"type": "object",
				"properties": {
					"apiVersion": {
						"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
						"type": "string"
					},
					"kind": {
						"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"type": "string"
					},
					"metadata": {
						"description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
						"allOf": [
							{
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
							}
						]
					},
					"spec": {
						"description": "Spec defines the desired state of GRPCRoute.",
						"type": "object",
						"properties": {
							"hostnames": {
								"description": "Hostnames defines a set of hostnames to match against the GRPC\nHost header to select a GRPCRoute to process the request. This matches\nthe RFC 1123 definition of a hostname with 2 notable exceptions:\n\n\n1. IPs are not allowed.\n2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard\n   label MUST appear by itself as the first label.\n\n\nIf a hostname is specified by both the Listener and GRPCRoute, there\nMUST be at least one intersecting hostname for the GRPCRoute to be\nattached to the Listener. For example:\n\n\n* A Listener with `test.example.com` as the hostname matches GRPCRoutes\n  that have either not specified any hostnames, or have specified at\n  least one of `test.example.com` or `*.example.com`.\n* A Listener with `*.example.com` as the hostname matches GRPCRoutes\n  that have either not specified any hostnames or have specified at least\n  one hostname that matches the Listener hostname. For example,\n  `test.example.com` and `*.example.com` would both match. On the other\n  hand, `example.com` and `test.example.net` would not match.\n\n\nHostnames that are prefixed with a wildcard label (`*.`) are interpreted\nas a suffix match. That means that a match for `*.example.com` would match\nboth `test.example.com`, and `foo.test.example.com`, but not `example.com`.\n\n\nIf both the Listener and GRPCRoute have specified hostnames, any\nGRPCRoute hostnames that do not match the Listener hostname MUST be\nignored. For example, if a Listener specified `*.example.com`, and the\nGRPCRoute specified `test.example.com` and `test.example.net`,\n`test.example.net` MUST NOT be considered for a match.\n\n\nIf both the Listener and GRPCRoute have specified hostnames, and none\nmatch with the criteria above, then the GRPCRoute MUST NOT be accepted by\nthe implementation. The implementation MUST raise an 'Accepted' Condition\nwith a status of `False` in the corresponding RouteParentStatus.\n\n\nIf a Route (A) of type HTTPRoute or GRPCRoute is attached to a\nListener and that listener already has another Route (B) of the other\ntype attached and the intersection of the hostnames of A and B is\nnon-empty, then the implementation MUST accept exactly one of these two\nroutes, determined by the following criteria, in order:\n\n\n* The oldest Route based on creation timestamp.\n* The Route appearing first in alphabetical order by\n  \"{namespace}/{name}\".\n\n\nThe rejected Route MUST raise an 'Accepted' condition with a status of\n'False' in the corresponding RouteParentStatus.\n\n\nSupport: Core",
								"type": "array",
								"maxItems": 16,
								"items": {
									"description": "Hostname is the fully qualified domain name of a network host. This matches\nthe RFC 1123 definition of a hostname with 2 notable exceptions:\n\n\n 1. IPs are not allowed.\n 2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard\n    label must appear by itself as the first label.\n\n\nHostname can be \"precise\" which is a domain name without the terminating\ndot of a network host (e.g. \"foo.example.com\") or \"wildcard\", which is a\ndomain name prefixed with a single wildcard label (e.g. `*.example.com`).\n\n\nNote that as per RFC1035 and RFC1123, a *label* must consist of lower case\nalphanumeric characters or '-', and must start and end with an alphanumeric\ncharacter. No other punctuation is allowed.",
									"type": "string",
									"maxLength": 253,
									"minLength": 1,
									"pattern": "^(\\*\\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
								}
							},
							"parentRefs": {
								"description": "ParentRefs references the resources (usually Gateways) that a Route wants\nto be attached to. Note that the referenced parent resource needs to\nallow this for the attachment to be complete. For Gateways, that means\nthe Gateway needs to allow attachment from Routes of this kind and\nnamespace. For Services, that means the Service must either be in the same\nnamespace for a \"producer\" route, or the mesh implementation must support\nand allow \"consumer\" routes for the referenced Service. ReferenceGrant is\nnot applicable for governing ParentRefs to Services - it is not possible to\ncreate a \"producer\" route for a Service in a different namespace from the\nRoute.\n\n\nThere are two kinds of parent resources with \"Core\" support:\n\n\n* Gateway (Gateway conformance profile)\n* Service (Mesh conformance profile, ClusterIP Services only)\n\n\nThis API may be extended in the future to support additional kinds of parent\nresources.\n\n\nParentRefs must be _distinct_. This means either that:\n\n\n* They select different objects.  If this is the case, then parentRef\n  entries are distinct. In terms of fields, this means that the\n  multi-part key defined by `group`, `kind`, `namespace`, and `name` must\n  be unique across all parentRef entries in the Route.\n* They do not select different objects, but for each optional field used,\n  each ParentRef that selects the same object must set the same set of\n  optional fields to different values. If one ParentRef sets a\n  combination of optional fields, all must set the same combination.\n\n\nSome examples:\n\n\n* If one ParentRef sets `sectionName`, all ParentRefs referencing the\n  same object must also set `sectionName`.\n* If one ParentRef sets `port`, all ParentRefs referencing the same\n  object must also set `port`.\n* If one ParentRef sets `sectionName` and `port`, all ParentRefs\n  referencing the same object must also set `sectionName` and `port`.\n\n\nIt is possible to separately reference multiple distinct objects that may\nbe collapsed by an implementation. For example, some implementations may\nchoose to merge compatible Gateway Listeners together. If that is the\ncase, the list of routes attached to those resources should also be\nmerged.\n\n\nNote that for ParentRefs that cross namespace boundaries, there are specific\nrules. Cross-namespace references are only valid if they are explicitly\nallowed by something in the namespace they are referring to. For example,\nGateway has the AllowedRoutes field, and ReferenceGrant provides a\ngeneric way to enable other kinds of cross-namespace reference.\n\n\n\n\n\n\n\n\n",
								"type": "array",
								"maxItems": 32,
								"items": {
									"description": "ParentReference identifies an API object (usually a Gateway) that can be considered\na parent of this resource (usually a route). There are two kinds of parent resources\nwith \"Core\" support:\n\n\n* Gateway (Gateway conformance profile)\n* Service (Mesh conformance profile, ClusterIP Services only)\n\n\nThis API may be extended in the future to support additional kinds of parent\nresources.\n\n\nThe API object must be valid in the cluster; the Group and Kind must\nbe registered in the cluster for this reference to be valid.",
									"type": "object",
									"required": [
										"name"
									],
									"properties": {
										"group": {
											"description": "Group is the group of the referent.\nWhen unspecified, \"gateway.networking.k8s.io\" is inferred.\nTo set the core API group (such as for a \"Service\" kind referent),\nGroup must be explicitly set to \"\" (empty string).\n\n\nSupport: Core",
											"type": "string",
											"default": "gateway.networking.k8s.io",
											"maxLength": 253,
											"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
										},
										"kind": {
											"description": "Kind is kind of the referent.\n\n\nThere are two kinds of parent resources with \"Core\" support:\n\n\n* Gateway (Gateway conformance profile)\n* Service (Mesh conformance profile, ClusterIP Services only)\n\n\nSupport for other resources is Implementation-Specific.",
											"type": "string",
											"default": "Gateway",
											"maxLength": 63,
											"minLength": 1,
											"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
										},
										"name": {
											"description": "Name is the name of the referent.\n\n\nSupport: Core",
											"type": "string",
											"maxLength": 253,
											"minLength": 1
										},
										"namespace": {
											"description": "Namespace is the namespace of the referent. When unspecified, this refers\nto the local namespace of the Route.\n\n\nNote that there are specific rules for ParentRefs which cross namespace\nboundaries. Cross-namespace references are only valid if they are explicitly\nallowed by something in the namespace they are referring to. For example:\nGateway has the AllowedRoutes field, and ReferenceGrant provides a\ngeneric way to enable any other kind of cross-namespace reference.\n\n\n\n\n\nSupport: Core",
											"type": "string",
											"maxLength": 63,
											"minLength": 1,
											"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
										},
										"port": {
											"description": "Port is the network port this Route targets. It can be interpreted\ndifferently based on the type of parent resource.\n\n\nWhen the parent resource is a Gateway, this targets all listeners\nlistening on the specified port that also support this kind of Route(and\nselect this Route). It's not recommended to set `Port` unless the\nnetworking behaviors specified in a Route must apply to a specific port\nas opposed to a listener(s) whose port(s) may be changed. When both Port\nand SectionName are specified, the name and port of the selected listener\nmust match both specified values.\n\n\n\n\n\nImplementations MAY choose to support other parent resources.\nImplementations supporting other types of parent resources MUST clearly\ndocument how/if Port is interpreted.\n\n\nFor the purpose of status, an attachment is considered successful as\nlong as the parent resource accepts it partially. For example, Gateway\nlisteners can restrict which Routes can attach to them by Route kind,\nnamespace, or hostname. If 1 of 2 Gateway listeners accept attachment\nfrom the referencing Route, the Route MUST be considered successfully\nattached. If no Gateway listeners accept attachment from this Route,\nthe Route MUST be considered detached from the Gateway.\n\n\nSupport: Extended",
											"type": "integer",
											"format": "int32",
											"maximum": 65535,
											"minimum": 1
										},
										"sectionName": {
											"description": "SectionName is the name of a section within the target resource. In the\nfollowing resources, SectionName is interpreted as the following:\n\n\n* Gateway: Listener name. When both Port (experimental) and SectionName\nare specified, the name and port of the selected listener must match\nboth specified values.\n* Service: Port name. When both Port (experimental) and SectionName\nare specified, the name and port of the selected listener must match\nboth specified values.\n\n\nImplementations MAY choose to support attaching Routes to other resources.\nIf that is the case, they MUST clearly document how SectionName is\ninterpreted.\n\n\nWhen unspecified (empty string), this will reference the entire resource.\nFor the purpose of status, an attachment is considered successful if at\nleast one section in the parent resource accepts it. For example, Gateway\nlisteners can restrict which Routes can attach to them by Route kind,\nnamespace, or hostname. If 1 of 2 Gateway listeners accept attachment from\nthe referencing Route, the Route MUST be considered successfully\nattached. If no Gateway listeners accept attachment from this Route, the\nRoute MUST be considered detached from the Gateway.\n\n\nSupport: Core",
											"type": "string",
											"maxLength": 253,
											"minLength": 1,
											"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
										}
									}
								},
								"x-kubernetes-validations": [
									{
										"rule": "self.all(p1, self.all(p2, p1.group == p2.group && p1.kind == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__) || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) && has(p2.__namespace__) && p1.__namespace__ == p2.__namespace__ )) ? ((!has(p1.sectionName) || p1.sectionName == '') == (!has(p2.sectionName) || p2.sectionName == '')) : true))",
										"message": "sectionName must be specified when parentRefs includes 2 or more references to the same parent"
									},
									{
										"rule": "self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__) || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) && has(p2.__namespace__) && p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName) || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName == '')) || (has(p1.sectionName) && has(p2.sectionName) && p1.sectionName == p2.sectionName))))",
										"message": "sectionName must be unique when parentRefs includes 2 or more references to the same parent"
									}
								]
							},
							"rules": {
								"description": "Rules are a list of GRPC matchers, filters and actions.",
								"type": "array",
								"maxItems": 16,
								"items": {
									"description": "GRPCRouteRule defines the semantics for matching a gRPC request based on\nconditions (matches), processing it (filters), and forwarding the request to\nan API object (backendRefs).",
									"type": "object",
									"properties": {
										"backendRefs": {
											"description": "BackendRefs defines the backend(s) where matching requests should be\nsent.\n\n\nFailure behavior here depends on how many BackendRefs are specified and\nhow many are invalid.\n\n\nIf *all* entries in BackendRefs are invalid, and there are also no filters\nspecified in this route rule, *all* traffic which matches this rule MUST\nreceive an `UNAVAILABLE` status.\n\n\nSee the GRPCBackendRef definition for the rules about what makes a single\nGRPCBackendRef invalid.\n\n\nWhen a GRPCBackendRef is invalid, `UNAVAILABLE` statuses MUST be returned for\nrequests that would have otherwise been routed to an invalid backend. If\nmultiple backends are specified, and some are invalid, the proportion of\nrequests that would otherwise have been routed to an invalid backend\nMUST receive an `UNAVAILABLE` status.\n\n\nFor example, if two backends are specified with equal weights, and one is\ninvalid, 50 percent of traffic MUST receive an `UNAVAILABLE` status.\nImplementations may choose how that 50 percent is determined.\n\n\nSupport: Core for Kubernetes Service\n\n\nSupport: Implementation-specific for any other resource\n\n\nSupport for weight: Core",
											"type": "array",
											"maxItems": 16,
											"items": {
												"description": "GRPCBackendRef defines how a GRPCRoute forwards a gRPC request.\n\n\nNote that when a namespace different than the local namespace is specified, a\nReferenceGrant object is required in the referent namespace to allow that\nnamespace's owner to accept the reference. See the ReferenceGrant\ndocumentation for details.\n\n\n<gateway:experimental:description>\n\n\nWhen the BackendRef points to a Kubernetes Service, implementations SHOULD\nhonor the appProtocol field if it is set for the target Service Port.\n\n\nImplementations supporting appProtocol SHOULD recognize the Kubernetes\nStandard Application Protocols defined in KEP-3726.\n\n\nIf a Service appProtocol isn't specified, an implementation MAY infer the\nbackend protocol through its own means. Implementations MAY infer the\nprotocol from the Route type referring to the backend Service.\n\n\nIf a Route is not able to send traffic to the backend using the specified\nprotocol then the backend is considered invalid. Implementations MUST set the\n\"ResolvedRefs\" condition to \"False\" with the \"UnsupportedProtocol\" reason.\n\n\n</gateway:experimental:description>",
												"type": "object",
												"required": [
													"name"
												],
												"properties": {
													"filters": {
														"description": "Filters defined at this level MUST be executed if and only if the\nrequest is being forwarded to the backend defined here.\n\n\nSupport: Implementation-specific (For broader support of filters, use the\nFilters field in GRPCRouteRule.)",
														"type": "array",
														"maxItems": 16,
														"items": {
															"description": "GRPCRouteFilter defines processing steps that must be completed during the\nrequest or response lifecycle. GRPCRouteFilters are meant as an extension\npoint to express processing that may be done in Gateway implementations. Some\nexamples include request or response modification, implementing\nauthentication strategies, rate-limiting, and traffic shaping. API\nguarantee/conformance is defined based on the type of the filter.",
															"type": "object",
															"required": [
																"type"
															],
															"properties": {
																"extensionRef": {
																	"description": "ExtensionRef is an optional, implementation-specific extension to the\n\"filter\" behavior.  For example, resource \"myroutefilter\" in group\n\"networking.example.net\"). ExtensionRef MUST NOT be used for core and\nextended filters.\n\n\nSupport: Implementation-specific\n\n\nThis filter can be used multiple times within the same rule.",
																	"type": "object",
																	"required": [
																		"group",
																		"kind",
																		"name"
																	],
																	"properties": {
																		"group": {
																			"description": "Group is the group of the referent. For example, \"gateway.networking.k8s.io\".\nWhen unspecified or empty string, core API group is inferred.",
																			"type": "string",
																			"maxLength": 253,
																			"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
																		},
																		"kind": {
																			"description": "Kind is kind of the referent. For example \"HTTPRoute\" or \"Service\".",
																			"type": "string",
																			"maxLength": 63,
																			"minLength": 1,
																			"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
																		},
																		"name": {
																			"description": "Name is the name of the referent.",
																			"type": "string",
																			"maxLength": 253,
																			"minLength": 1
																		}
																	}
																},
																"requestHeaderModifier": {
																	"description": "RequestHeaderModifier defines a schema for a filter that modifies request\nheaders.\n\n\nSupport: Core",
																	"type": "object",
																	"properties": {
																		"add": {
																			"description": "Add adds the given header(s) (name, value) to the request\nbefore the action. It appends to any existing values associated\nwith the header name.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  add:\n  - name: \"my-header\"\n    value: \"bar,baz\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: foo,bar,baz",
																			"type": "array",
																			"maxItems": 16,
																			"items": {
																				"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																				"type": "object",
																				"required": [
																					"name",
																					"value"
																				],
																				"properties": {
																					"name": {
																						"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																						"type": "string",
																						"maxLength": 256,
																						"minLength": 1,
																						"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																					},
																					"value": {
																						"description": "Value is the value of HTTP Header to be matched.",
																						"type": "string",
																						"maxLength": 4096,
																						"minLength": 1
																					}
																				}
																			},
																			"x-kubernetes-list-map-keys": [
																				"name"
																			],
																			"x-kubernetes-list-type": "map"
																		},
																		"remove": {
																			"description": "Remove the given header(s) from the HTTP request before the action. The\nvalue of Remove is a list of HTTP header names. Note that the header\nnames are case-insensitive (see\nhttps://datatracker.ietf.org/doc/html/rfc2616#section-4.2).\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header1: foo\n  my-header2: bar\n  my-header3: baz\n\n\nConfig:\n  remove: [\"my-header1\", \"my-header3\"]\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header2: bar",
																			"type": "array",
																			"maxItems": 16,
																			"items": {
																				"type": "string"
																			},
																			"x-kubernetes-list-type": "set"
																		},
																		"set": {
																			"description": "Set overwrites the request with the given header (name, value)\nbefore the action.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  set:\n  - name: \"my-header\"\n    value: \"bar\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: bar",
																			"type": "array",
																			"maxItems": 16,
																			"items": {
																				"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																				"type": "object",
																				"required": [
																					"name",
																					"value"
																				],
																				"properties": {
																					"name": {
																						"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																						"type": "string",
																						"maxLength": 256,
																						"minLength": 1,
																						"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																					},
																					"value": {
																						"description": "Value is the value of HTTP Header to be matched.",
																						"type": "string",
																						"maxLength": 4096,
																						"minLength": 1
																					}
																				}
																			},
																			"x-kubernetes-list-map-keys": [
																				"name"
																			],
																			"x-kubernetes-list-type": "map"
																		}
																	}
																},
																"requestMirror": {
																	"description": "RequestMirror defines a schema for a filter that mirrors requests.\nRequests are sent to the specified destination, but responses from\nthat destination are ignored.\n\n\nThis filter can be used multiple times within the same rule. Note that\nnot all implementations will be able to support mirroring to multiple\nbackends.\n\n\nSupport: Extended",
																	"type": "object",
																	"required": [
																		"backendRef"
																	],
																	"properties": {
																		"backendRef": {
																			"description": "BackendRef references a resource where mirrored requests are sent.\n\n\nMirrored requests must be sent only to a single destination endpoint\nwithin this BackendRef, irrespective of how many endpoints are present\nwithin this BackendRef.\n\n\nIf the referent cannot be found, this BackendRef is invalid and must be\ndropped from the Gateway. The controller must ensure the \"ResolvedRefs\"\ncondition on the Route status is set to `status: False` and not configure\nthis backend in the underlying implementation.\n\n\nIf there is a cross-namespace reference to an *existing* object\nthat is not allowed by a ReferenceGrant, the controller must ensure the\n\"ResolvedRefs\"  condition on the Route is set to `status: False`,\nwith the \"RefNotPermitted\" reason and not configure this backend in the\nunderlying implementation.\n\n\nIn either error case, the Message of the `ResolvedRefs` Condition\nshould be used to provide more detail about the problem.\n\n\nSupport: Extended for Kubernetes Service\n\n\nSupport: Implementation-specific for any other resource",
																			"type": "object",
																			"required": [
																				"name"
																			],
																			"properties": {
																				"group": {
																					"description": "Group is the group of the referent. For example, \"gateway.networking.k8s.io\".\nWhen unspecified or empty string, core API group is inferred.",
																					"type": "string",
																					"default": "",
																					"maxLength": 253,
																					"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
																				},
																				"kind": {
																					"description": "Kind is the Kubernetes resource kind of the referent. For example\n\"Service\".\n\n\nDefaults to \"Service\" when not specified.\n\n\nExternalName services can refer to CNAME DNS records that may live\noutside of the cluster and as such are difficult to reason about in\nterms of conformance. They also may not be safe to forward to (see\nCVE-2021-25740 for more information). Implementations SHOULD NOT\nsupport ExternalName Services.\n\n\nSupport: Core (Services with a type other than ExternalName)\n\n\nSupport: Implementation-specific (Services with type ExternalName)",
																					"type": "string",
																					"default": "Service",
																					"maxLength": 63,
																					"minLength": 1,
																					"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
																				},
																				"name": {
																					"description": "Name is the name of the referent.",
																					"type": "string",
																					"maxLength": 253,
																					"minLength": 1
																				},
																				"namespace": {
																					"description": "Namespace is the namespace of the backend. When unspecified, the local\nnamespace is inferred.\n\n\nNote that when a namespace different than the local namespace is specified,\na ReferenceGrant object is required in the referent namespace to allow that\nnamespace's owner to accept the reference. See the ReferenceGrant\ndocumentation for details.\n\n\nSupport: Core",
																					"type": "string",
																					"maxLength": 63,
																					"minLength": 1,
																					"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
																				},
																				"port": {
																					"description": "Port specifies the destination port number to use for this resource.\nPort is required when the referent is a Kubernetes Service. In this\ncase, the port number is the service port number, not the target port.\nFor other resources, destination port might be derived from the referent\nresource or this field.",
																					"type": "integer",
																					"format": "int32",
																					"maximum": 65535,
																					"minimum": 1
																				}
																			},
																			"x-kubernetes-validations": [
																				{
																					"rule": "(size(self.group) == 0 && self.kind == 'Service') ? has(self.port) : true",
																					"message": "Must have port for Service reference"
																				}
																			]
																		}
																	}
																},
																"responseHeaderModifier": {
																	"description": "ResponseHeaderModifier defines a schema for a filter that modifies response\nheaders.\n\n\nSupport: Extended",
																	"type": "object",
																	"properties": {
																		"add": {
																			"description": "Add adds the given header(s) (name, value) to the request\nbefore the action. It appends to any existing values associated\nwith the header name.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  add:\n  - name: \"my-header\"\n    value: \"bar,baz\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: foo,bar,baz",
																			"type": "array",
																			"maxItems": 16,
																			"items": {
																				"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																				"type": "object",
																				"required": [
																					"name",
																					"value"
																				],
																				"properties": {
																					"name": {
																						"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																						"type": "string",
																						"maxLength": 256,
																						"minLength": 1,
																						"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																					},
																					"value": {
																						"description": "Value is the value of HTTP Header to be matched.",
																						"type": "string",
																						"maxLength": 4096,
																						"minLength": 1
																					}
																				}
																			},
																			"x-kubernetes-list-map-keys": [
																				"name"
																			],
																			"x-kubernetes-list-type": "map"
																		},
																		"remove": {
																			"description": "Remove the given header(s) from the HTTP request before the action. The\nvalue of Remove is a list of HTTP header names. Note that the header\nnames are case-insensitive (see\nhttps://datatracker.ietf.org/doc/html/rfc2616#section-4.2).\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header1: foo\n  my-header2: bar\n  my-header3: baz\n\n\nConfig:\n  remove: [\"my-header1\", \"my-header3\"]\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header2: bar",
																			"type": "array",
																			"maxItems": 16,
																			"items": {
																				"type": "string"
																			},
																			"x-kubernetes-list-type": "set"
																		},
																		"set": {
																			"description": "Set overwrites the request with the given header (name, value)\nbefore the action.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  set:\n  - name: \"my-header\"\n    value: \"bar\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: bar",
																			"type": "array",
																			"maxItems": 16,
																			"items": {
																				"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																				"type": "object",
																				"required": [
																					"name",
																					"value"
																				],
																				"properties": {
																					"name": {
																						"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																						"type": "string",
																						"maxLength": 256,
																						"minLength": 1,
																						"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																					},
																					"value": {
																						"description": "Value is the value of HTTP Header to be matched.",
																						"type": "string",
																						"maxLength": 4096,
																						"minLength": 1
																					}
																				}
																			},
																			"x-kubernetes-list-map-keys": [
																				"name"
																			],
																			"x-kubernetes-list-type": "map"
																		}
																	}
																},
																"type": {
																	"description": "Type identifies the type of filter to apply. As with other API fields,\ntypes are classified into three conformance levels:\n\n\n- Core: Filter types and their corresponding configuration defined by\n  \"Support: Core\" in this package, e.g. \"RequestHeaderModifier\". All\n  implementations supporting GRPCRoute MUST support core filters.\n\n\n- Extended: Filter types and their corresponding configuration defined by\n  \"Support: Extended\" in this package, e.g. \"RequestMirror\". Implementers\n  are encouraged to support extended filters.\n\n\n- Implementation-specific: Filters that are defined and supported by specific vendors.\n  In the future, filters showing convergence in behavior across multiple\n  implementations will be considered for inclusion in extended or core\n  conformance levels. Filter-specific configuration for such filters\n  is specified using the ExtensionRef field. `Type` MUST be set to\n  \"ExtensionRef\" for custom filters.\n\n\nImplementers are encouraged to define custom implementation types to\nextend the core API with implementation-specific behavior.\n\n\nIf a reference to a custom filter type cannot be resolved, the filter\nMUST NOT be skipped. Instead, requests that would have been processed by\nthat filter MUST receive a HTTP error response.\n\n\n",
																	"type": "string",
																	"enum": [
																		"ResponseHeaderModifier",
																		"RequestHeaderModifier",
																		"RequestMirror",
																		"ExtensionRef"
																	]
																}
															},
															"x-kubernetes-validations": [
																{
																	"rule": "!(has(self.requestHeaderModifier) && self.type != 'RequestHeaderModifier')",
																	"message": "filter.requestHeaderModifier must be nil if the filter.type is not RequestHeaderModifier"
																},
																{
																	"rule": "!(!has(self.requestHeaderModifier) && self.type == 'RequestHeaderModifier')",
																	"message": "filter.requestHeaderModifier must be specified for RequestHeaderModifier filter.type"
																},
																{
																	"rule": "!(has(self.responseHeaderModifier) && self.type != 'ResponseHeaderModifier')",
																	"message": "filter.responseHeaderModifier must be nil if the filter.type is not ResponseHeaderModifier"
																},
																{
																	"rule": "!(!has(self.responseHeaderModifier) && self.type == 'ResponseHeaderModifier')",
																	"message": "filter.responseHeaderModifier must be specified for ResponseHeaderModifier filter.type"
																},
																{
																	"rule": "!(has(self.requestMirror) && self.type != 'RequestMirror')",
																	"message": "filter.requestMirror must be nil if the filter.type is not RequestMirror"
																},
																{
																	"rule": "!(!has(self.requestMirror) && self.type == 'RequestMirror')",
																	"message": "filter.requestMirror must be specified for RequestMirror filter.type"
																},
																{
																	"rule": "!(has(self.extensionRef) && self.type != 'ExtensionRef')",
																	"message": "filter.extensionRef must be nil if the filter.type is not ExtensionRef"
																},
																{
																	"rule": "!(!has(self.extensionRef) && self.type == 'ExtensionRef')",
																	"message": "filter.extensionRef must be specified for ExtensionRef filter.type"
																}
															]
														},
														"x-kubernetes-validations": [
															{
																"rule": "self.filter(f, f.type == 'RequestHeaderModifier').size() <= 1",
																"message": "RequestHeaderModifier filter cannot be repeated"
															},
															{
																"rule": "self.filter(f, f.type == 'ResponseHeaderModifier').size() <= 1",
																"message": "ResponseHeaderModifier filter cannot be repeated"
															}
														]
													},
													"group": {
														"description": "Group is the group of the referent. For example, \"gateway.networking.k8s.io\".\nWhen unspecified or empty string, core API group is inferred.",
														"type": "string",
														"default": "",
														"maxLength": 253,
														"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
													},
													"kind": {
														"description": "Kind is the Kubernetes resource kind of the referent. For example\n\"Service\".\n\n\nDefaults to \"Service\" when not specified.\n\n\nExternalName services can refer to CNAME DNS records that may live\noutside of the cluster and as such are difficult to reason about in\nterms of conformance. They also may not be safe to forward to (see\nCVE-2021-25740 for more information). Implementations SHOULD NOT\nsupport ExternalName Services.\n\n\nSupport: Core (Services with a type other than ExternalName)\n\n\nSupport: Implementation-specific (Services with type ExternalName)",
														"type": "string",
														"default": "Service",
														"maxLength": 63,
														"minLength": 1,
														"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
													},
													"name": {
														"description": "Name is the name of the referent.",
														"type": "string",
														"maxLength": 253,
														"minLength": 1
													},
													"namespace": {
														"description": "Namespace is the namespace of the backend. When unspecified, the local\nnamespace is inferred.\n\n\nNote that when a namespace different than the local namespace is specified,\na ReferenceGrant object is required in the referent namespace to allow that\nnamespace's owner to accept the reference. See the ReferenceGrant\ndocumentation for details.\n\n\nSupport: Core",
														"type": "string",
														"maxLength": 63,
														"minLength": 1,
														"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
													},
													"port": {
														"description": "Port specifies the destination port number to use for this resource.\nPort is required when the referent is a Kubernetes Service. In this\ncase, the port number is the service port number, not the target port.\nFor other resources, destination port might be derived from the referent\nresource or this field.",
														"type": "integer",
														"format": "int32",
														"maximum": 65535,
														"minimum": 1
													},
													"weight": {
														"description": "Weight specifies the proportion of requests forwarded to the referenced\nbackend. This is computed as weight/(sum of all weights in this\nBackendRefs list). For non-zero values, there may be some epsilon from\nthe exact proportion defined here depending on the precision an\nimplementation supports. Weight is not a percentage and the sum of\nweights does not need to equal 100.\n\n\nIf only one backend is specified and it has a weight greater than 0, 100%\nof the traffic is forwarded to that backend. If weight is set to 0, no\ntraffic should be forwarded for this entry. If unspecified, weight\ndefaults to 1.\n\n\nSupport for this field varies based on the context where used.",
														"type": "integer",
														"format": "int32",
														"default": 1,
														"maximum": 1000000,
														"minimum": 0
													}
												},
												"x-kubernetes-validations": [
													{
														"rule": "(size(self.group) == 0 && self.kind == 'Service') ? has(self.port) : true",
														"message": "Must have port for Service reference"
													}
												]
											}
										},
										"filters": {
											"description": "Filters define the filters that are applied to requests that match\nthis rule.\n\n\nThe effects of ordering of multiple behaviors are currently unspecified.\nThis can change in the future based on feedback during the alpha stage.\n\n\nConformance-levels at this level are defined based on the type of filter:\n\n\n- ALL core filters MUST be supported by all implementations that support\n  GRPCRoute.\n- Implementers are encouraged to support extended filters.\n- Implementation-specific custom filters have no API guarantees across\n  implementations.\n\n\nSpecifying the same filter multiple times is not supported unless explicitly\nindicated in the filter.\n\n\nIf an implementation can not support a combination of filters, it must clearly\ndocument that limitation. In cases where incompatible or unsupported\nfilters are specified and cause the `Accepted` condition to be set to status\n`False`, implementations may use the `IncompatibleFilters` reason to specify\nthis configuration error.\n\n\nSupport: Core",
											"type": "array",
											"maxItems": 16,
											"items": {
												"description": "GRPCRouteFilter defines processing steps that must be completed during the\nrequest or response lifecycle. GRPCRouteFilters are meant as an extension\npoint to express processing that may be done in Gateway implementations. Some\nexamples include request or response modification, implementing\nauthentication strategies, rate-limiting, and traffic shaping. API\nguarantee/conformance is defined based on the type of the filter.",
												"type": "object",
												"required": [
													"type"
												],
												"properties": {
													"extensionRef": {
														"description": "ExtensionRef is an optional, implementation-specific extension to the\n\"filter\" behavior.  For example, resource \"myroutefilter\" in group\n\"networking.example.net\"). ExtensionRef MUST NOT be used for core and\nextended filters.\n\n\nSupport: Implementation-specific\n\n\nThis filter can be used multiple times within the same rule.",
														"type": "object",
														"required": [
															"group",
															"kind",
															"name"
														],
														"properties": {
															"group": {
																"description": "Group is the group of the referent. For example, \"gateway.networking.k8s.io\".\nWhen unspecified or empty string, core API group is inferred.",
																"type": "string",
																"maxLength": 253,
																"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
															},
															"kind": {
																"description": "Kind is kind of the referent. For example \"HTTPRoute\" or \"Service\".",
																"type": "string",
																"maxLength": 63,
																"minLength": 1,
																"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
															},
															"name": {
																"description": "Name is the name of the referent.",
																"type": "string",
																"maxLength": 253,
																"minLength": 1
															}
														}
													},
													"requestHeaderModifier": {
														"description": "RequestHeaderModifier defines a schema for a filter that modifies request\nheaders.\n\n\nSupport: Core",
														"type": "object",
														"properties": {
															"add": {
																"description": "Add adds the given header(s) (name, value) to the request\nbefore the action. It appends to any existing values associated\nwith the header name.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  add:\n  - name: \"my-header\"\n    value: \"bar,baz\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: foo,bar,baz",
																"type": "array",
																"maxItems": 16,
																"items": {
																	"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																	"type": "object",
																	"required": [
																		"name",
																		"value"
																	],
																	"properties": {
																		"name": {
																			"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																			"type": "string",
																			"maxLength": 256,
																			"minLength": 1,
																			"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																		},
																		"value": {
																			"description": "Value is the value of HTTP Header to be matched.",
																			"type": "string",
																			"maxLength": 4096,
																			"minLength": 1
																		}
																	}
																},
																"x-kubernetes-list-map-keys": [
																	"name"
																],
																"x-kubernetes-list-type": "map"
															},
															"remove": {
																"description": "Remove the given header(s) from the HTTP request before the action. The\nvalue of Remove is a list of HTTP header names. Note that the header\nnames are case-insensitive (see\nhttps://datatracker.ietf.org/doc/html/rfc2616#section-4.2).\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header1: foo\n  my-header2: bar\n  my-header3: baz\n\n\nConfig:\n  remove: [\"my-header1\", \"my-header3\"]\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header2: bar",
																"type": "array",
																"maxItems": 16,
																"items": {
																	"type": "string"
																},
																"x-kubernetes-list-type": "set"
															},
															"set": {
																"description": "Set overwrites the request with the given header (name, value)\nbefore the action.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  set:\n  - name: \"my-header\"\n    value: \"bar\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: bar",
																"type": "array",
																"maxItems": 16,
																"items": {
																	"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																	"type": "object",
																	"required": [
																		"name",
																		"value"
																	],
																	"properties": {
																		"name": {
																			"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																			"type": "string",
																			"maxLength": 256,
																			"minLength": 1,
																			"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																		},
																		"value": {
																			"description": "Value is the value of HTTP Header to be matched.",
																			"type": "string",
																			"maxLength": 4096,
																			"minLength": 1
																		}
																	}
																},
																"x-kubernetes-list-map-keys": [
																	"name"
																],
																"x-kubernetes-list-type": "map"
															}
														}
													},
													"requestMirror": {
														"description": "RequestMirror defines a schema for a filter that mirrors requests.\nRequests are sent to the specified destination, but responses from\nthat destination are ignored.\n\n\nThis filter can be used multiple times within the same rule. Note that\nnot all implementations will be able to support mirroring to multiple\nbackends.\n\n\nSupport: Extended",
														"type": "object",
														"required": [
															"backendRef"
														],
														"properties": {
															"backendRef": {
																"description": "BackendRef references a resource where mirrored requests are sent.\n\n\nMirrored requests must be sent only to a single destination endpoint\nwithin this BackendRef, irrespective of how many endpoints are present\nwithin this BackendRef.\n\n\nIf the referent cannot be found, this BackendRef is invalid and must be\ndropped from the Gateway. The controller must ensure the \"ResolvedRefs\"\ncondition on the Route status is set to `status: False` and not configure\nthis backend in the underlying implementation.\n\n\nIf there is a cross-namespace reference to an *existing* object\nthat is not allowed by a ReferenceGrant, the controller must ensure the\n\"ResolvedRefs\"  condition on the Route is set to `status: False`,\nwith the \"RefNotPermitted\" reason and not configure this backend in the\nunderlying implementation.\n\n\nIn either error case, the Message of the `ResolvedRefs` Condition\nshould be used to provide more detail about the problem.\n\n\nSupport: Extended for Kubernetes Service\n\n\nSupport: Implementation-specific for any other resource",
																"type": "object",
																"required": [
																	"name"
																],
																"properties": {
																	"group": {
																		"description": "Group is the group of the referent. For example, \"gateway.networking.k8s.io\".\nWhen unspecified or empty string, core API group is inferred.",
																		"type": "string",
																		"default": "",
																		"maxLength": 253,
																		"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
																	},
																	"kind": {
																		"description": "Kind is the Kubernetes resource kind of the referent. For example\n\"Service\".\n\n\nDefaults to \"Service\" when not specified.\n\n\nExternalName services can refer to CNAME DNS records that may live\noutside of the cluster and as such are difficult to reason about in\nterms of conformance. They also may not be safe to forward to (see\nCVE-2021-25740 for more information). Implementations SHOULD NOT\nsupport ExternalName Services.\n\n\nSupport: Core (Services with a type other than ExternalName)\n\n\nSupport: Implementation-specific (Services with type ExternalName)",
																		"type": "string",
																		"default": "Service",
																		"maxLength": 63,
																		"minLength": 1,
																		"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
																	},
																	"name": {
																		"description": "Name is the name of the referent.",
																		"type": "string",
																		"maxLength": 253,
																		"minLength": 1
																	},
																	"namespace": {
																		"description": "Namespace is the namespace of the backend. When unspecified, the local\nnamespace is inferred.\n\n\nNote that when a namespace different than the local namespace is specified,\na ReferenceGrant object is required in the referent namespace to allow that\nnamespace's owner to accept the reference. See the ReferenceGrant\ndocumentation for details.\n\n\nSupport: Core",
																		"type": "string",
																		"maxLength": 63,
																		"minLength": 1,
																		"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
																	},
																	"port": {
																		"description": "Port specifies the destination port number to use for this resource.\nPort is required when the referent is a Kubernetes Service. In this\ncase, the port number is the service port number, not the target port.\nFor other resources, destination port might be derived from the referent\nresource or this field.",
																		"type": "integer",
																		"format": "int32",
																		"maximum": 65535,
																		"minimum": 1
																	}
																},
																"x-kubernetes-validations": [
																	{
																		"rule": "(size(self.group) == 0 && self.kind == 'Service') ? has(self.port) : true",
																		"message": "Must have port for Service reference"
																	}
																]
															}
														}
													},
													"responseHeaderModifier": {
														"description": "ResponseHeaderModifier defines a schema for a filter that modifies response\nheaders.\n\n\nSupport: Extended",
														"type": "object",
														"properties": {
															"add": {
																"description": "Add adds the given header(s) (name, value) to the request\nbefore the action. It appends to any existing values associated\nwith the header name.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  add:\n  - name: \"my-header\"\n    value: \"bar,baz\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: foo,bar,baz",
																"type": "array",
																"maxItems": 16,
																"items": {
																	"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																	"type": "object",
																	"required": [
																		"name",
																		"value"
																	],
																	"properties": {
																		"name": {
																			"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																			"type": "string",
																			"maxLength": 256,
																			"minLength": 1,
																			"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																		},
																		"value": {
																			"description": "Value is the value of HTTP Header to be matched.",
																			"type": "string",
																			"maxLength": 4096,
																			"minLength": 1
																		}
																	}
																},
																"x-kubernetes-list-map-keys": [
																	"name"
																],
																"x-kubernetes-list-type": "map"
															},
															"remove": {
																"description": "Remove the given header(s) from the HTTP request before the action. The\nvalue of Remove is a list of HTTP header names. Note that the header\nnames are case-insensitive (see\nhttps://datatracker.ietf.org/doc/html/rfc2616#section-4.2).\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header1: foo\n  my-header2: bar\n  my-header3: baz\n\n\nConfig:\n  remove: [\"my-header1\", \"my-header3\"]\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header2: bar",
																"type": "array",
																"maxItems": 16,
																"items": {
																	"type": "string"
																},
																"x-kubernetes-list-type": "set"
															},
															"set": {
																"description": "Set overwrites the request with the given header (name, value)\nbefore the action.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  set:\n  - name: \"my-header\"\n    value: \"bar\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: bar",
																"type": "array",
																"maxItems": 16,
																"items": {
																	"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																	"type": "object",
																	"required": [
																		"name",
																		"value"
																	],
																	"properties": {
																		"name": {
																			"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																			"type": "string",
																			"maxLength": 256,
																			"minLength": 1,
																			"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																		},
																		"value": {
																			"description": "Value is the value of HTTP Header to be matched.",
																			"type": "string",
																			"maxLength": 4096,
																			"minLength": 1
																		}
																	}
																},
																"x-kubernetes-list-map-keys": [
																	"name"
																],
																"x-kubernetes-list-type": "map"
															}
														}
													},
													"type": {
														"description": "Type identifies the type of filter to apply. As with other API fields,\ntypes are classified into three conformance levels:\n\n\n- Core: Filter types and their corresponding configuration defined by\n  \"Support: Core\" in this package, e.g. \"RequestHeaderModifier\". All\n  implementations supporting GRPCRoute MUST support core filters.\n\n\n- Extended: Filter types and their corresponding configuration defined by\n  \"Support: Extended\" in this package, e.g. \"RequestMirror\". Implementers\n  are encouraged to support extended filters.\n\n\n- Implementation-specific: Filters that are defined and supported by specific vendors.\n  In the future, filters showing convergence in behavior across multiple\n  implementations will be considered for inclusion in extended or core\n  conformance levels. Filter-specific configuration for such filters\n  is specified using the ExtensionRef field. `Type` MUST be set to\n  \"ExtensionRef\" for custom filters.\n\n\nImplementers are encouraged to define custom implementation types to\nextend the core API with implementation-specific behavior.\n\n\nIf a reference to a custom filter type cannot be resolved, the filter\nMUST NOT be skipped. Instead, requests that would have been processed by\nthat filter MUST receive a HTTP error response.\n\n\n",
														"type": "string",
														"enum": [
															"ResponseHeaderModifier",
															"RequestHeaderModifier",
															"RequestMirror",
															"ExtensionRef"
														]
													}
												},
												"x-kubernetes-validations": [
													{
														"rule": "!(has(self.requestHeaderModifier) && self.type != 'RequestHeaderModifier')",
														"message": "filter.requestHeaderModifier must be nil if the filter.type is not RequestHeaderModifier"
													},
													{
														"rule": "!(!has(self.requestHeaderModifier) && self.type == 'RequestHeaderModifier')",
														"message": "filter.requestHeaderModifier must be specified for RequestHeaderModifier filter.type"
													},
													{
														"rule": "!(has(self.responseHeaderModifier) && self.type != 'ResponseHeaderModifier')",
														"message": "filter.responseHeaderModifier must be nil if the filter.type is not ResponseHeaderModifier"
													},
													{
														"rule": "!(!has(self.responseHeaderModifier) && self.type == 'ResponseHeaderModifier')",
														"message": "filter.responseHeaderModifier must be specified for ResponseHeaderModifier filter.type"
													},
													{
														"rule": "!(has(self.requestMirror) && self.type != 'RequestMirror')",
														"message": "filter.requestMirror must be nil if the filter.type is not RequestMirror"
													},
													{
														"rule": "!(!has(self.requestMirror) && self.type == 'RequestMirror')",
														"message": "filter.requestMirror must be specified for RequestMirror filter.type"
													},
													{
														"rule": "!(has(self.extensionRef) && self.type != 'ExtensionRef')",
														"message": "filter.extensionRef must be nil if the filter.type is not ExtensionRef"
													},
													{
														"rule": "!(!has(self.extensionRef) && self.type == 'ExtensionRef')",
														"message": "filter.extensionRef must be specified for ExtensionRef filter.type"
													}
												]
											},
											"x-kubernetes-validations": [
												{
													"rule": "self.filter(f, f.type == 'RequestHeaderModifier').size() <= 1",
													"message": "RequestHeaderModifier filter cannot be repeated"
												},
												{
													"rule": "self.filter(f, f.type == 'ResponseHeaderModifier').size() <= 1",
													"message": "ResponseHeaderModifier filter cannot be repeated"
												}
											]
										},
										"matches": {
											"description": "Matches define conditions used for matching the rule against incoming\ngRPC requests. Each match is independent, i.e. this rule will be matched\nif **any** one of the matches is satisfied.\n\n\nFor example, take the following matches configuration:\n\n\n```\nmatches:\n- method:\n    service: foo.bar\n  headers:\n    values:\n      version: 2\n- method:\n    service: foo.bar.v2\n```\n\n\nFor a request to match against this rule, it MUST satisfy\nEITHER of the two conditions:\n\n\n- service of foo.bar AND contains the header `version: 2`\n- service of foo.bar.v2\n\n\nSee the documentation for GRPCRouteMatch on how to specify multiple\nmatch conditions to be ANDed together.\n\n\nIf no matches are specified, the implementation MUST match every gRPC request.\n\n\nProxy or Load Balancer routing configuration generated from GRPCRoutes\nMUST prioritize rules based on the following criteria, continuing on\nties. Merging MUST not be done between GRPCRoutes and HTTPRoutes.\nPrecedence MUST be given to the rule with the largest number of:\n\n\n* Characters in a matching non-wildcard hostname.\n* Characters in a matching hostname.\n* Characters in a matching service.\n* Characters in a matching method.\n* Header matches.\n\n\nIf ties still exist across multiple Routes, matching precedence MUST be\ndetermined in order of the following criteria, continuing on ties:\n\n\n* The oldest Route based on creation timestamp.\n* The Route appearing first in alphabetical order by\n  \"{namespace}/{name}\".\n\n\nIf ties still exist within the Route that has been given precedence,\nmatching precedence MUST be granted to the first matching rule meeting\nthe above criteria.",
											"type": "array",
											"maxItems": 8,
											"items": {
												"description": "GRPCRouteMatch defines the predicate used to match requests to a given\naction. Multiple match types are ANDed together, i.e. the match will\nevaluate to true only if all conditions are satisfied.\n\n\nFor example, the match below will match a gRPC request only if its service\nis `foo` AND it contains the `version: v1` header:\n\n\n```\nmatches:\n  - method:\n    type: Exact\n    service: \"foo\"\n    headers:\n  - name: \"version\"\n    value \"v1\"\n\n\n```",
												"type": "object",
												"properties": {
													"headers": {
														"description": "Headers specifies gRPC request header matchers. Multiple match values are\nANDed together, meaning, a request MUST match all the specified headers\nto select the route.",
														"type": "array",
														"maxItems": 16,
														"items": {
															"description": "GRPCHeaderMatch describes how to select a gRPC route by matching gRPC request\nheaders.",
															"type": "object",
															"required": [
																"name",
																"value"
															],
															"properties": {
																"name": {
																	"description": "Name is the name of the gRPC Header to be matched.\n\n\nIf multiple entries specify equivalent header names, only the first\nentry with an equivalent name MUST be considered for a match. Subsequent\nentries with an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																	"type": "string",
																	"maxLength": 256,
																	"minLength": 1,
																	"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																},
																"type": {
																	"description": "Type specifies how to match against the value of the header.",
																	"type": "string",
																	"default": "Exact",
																	"enum": [
																		"Exact",
																		"RegularExpression"
																	]
																},
																"value": {
																	"description": "Value is the value of the gRPC Header to be matched.",
																	"type": "string",
																	"maxLength": 4096,
																	"minLength": 1
																}
															}
														},
														"x-kubernetes-list-map-keys": [
															"name"
														],
														"x-kubernetes-list-type": "map"
													},
													"method": {
														"description": "Method specifies a gRPC request service/method matcher. If this field is\nnot specified, all services and methods will match.",
														"type": "object",
														"properties": {
															"method": {
																"description": "Value of the method to match against. If left empty or omitted, will\nmatch all services.\n\n\nAt least one of Service and Method MUST be a non-empty string.",
																"type": "string",
																"maxLength": 1024
															},
															"service": {
																"description": "Value of the service to match against. If left empty or omitted, will\nmatch any service.\n\n\nAt least one of Service and Method MUST be a non-empty string.",
																"type": "string",
																"maxLength": 1024
															},
															"type": {
																"description": "Type specifies how to match against the service and/or method.\nSupport: Core (Exact with service and method specified)\n\n\nSupport: Implementation-specific (Exact with method specified but no service specified)\n\n\nSupport: Implementation-specific (RegularExpression)",
																"type": "string",
																"default": "Exact",
																"enum": [
																	"Exact",
																	"RegularExpression"
																]
															}
														},
														"x-kubernetes-validations": [
															{
																"rule": "has(self.type) ? has(self.service) || has(self.method) : true",
																"message": "One or both of 'service' or 'method' must be specified"
															},
															{
																"rule": "(!has(self.type) || self.type == 'Exact') && has(self.service) ? self.service.matches(r\"\"\"^(?i)\\.?[a-z_][a-z_0-9]*(\\.[a-z_][a-z_0-9]*)*$\"\"\"): true",
																"message": "service must only contain valid characters (matching ^(?i)\\.?[a-z_][a-z_0-9]*(\\.[a-z_][a-z_0-9]*)*$)"
															},
															{
																"rule": "(!has(self.type) || self.type == 'Exact') && has(self.method) ? self.method.matches(r\"\"\"^[A-Za-z_][A-Za-z_0-9]*$\"\"\"): true",
																"message": "method must only contain valid characters (matching ^[A-Za-z_][A-Za-z_0-9]*$)"
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"status": {
						"description": "Status defines the current state of GRPCRoute.",
						"type": "object",
						"required": [
							"parents"
						],
						"properties": {
							"parents": {
								"description": "Parents is a list of parent resources (usually Gateways) that are\nassociated with the route, and the status of the route with respect to\neach parent. When this route attaches to a parent, the controller that\nmanages the parent must add an entry to this list when the controller\nfirst sees the route and should update the entry as appropriate when the\nroute or gateway is modified.\n\n\nNote that parent references that cannot be resolved by an implementation\nof this API will not be added to this list. Implementations of this API\ncan only populate Route status for the Gateways/parent resources they are\nresponsible for.\n\n\nA maximum of 32 Gateways will be represented in this list. An empty list\nmeans the route has not been attached to any Gateway.",
								"type": "array",
								"maxItems": 32,
								"items": {
									"description": "RouteParentStatus describes the status of a route with respect to an\nassociated Parent.",
									"type": "object",
									"required": [
										"controllerName",
										"parentRef"
									],
									"properties": {
										"conditions": {
											"description": "Conditions describes the status of the route with respect to the Gateway.\nNote that the route's availability is also subject to the Gateway's own\nstatus conditions and listener status.\n\n\nIf the Route's ParentRef specifies an existing Gateway that supports\nRoutes of this kind AND that Gateway's controller has sufficient access,\nthen that Gateway's controller MUST set the \"Accepted\" condition on the\nRoute, to indicate whether the route has been accepted or rejected by the\nGateway, and why.\n\n\nA Route MUST be considered \"Accepted\" if at least one of the Route's\nrules is implemented by the Gateway.\n\n\nThere are a number of cases where the \"Accepted\" condition may not be set\ndue to lack of controller visibility, that includes when:\n\n\n* The Route refers to a non-existent parent.\n* The Route is of a type that the controller does not support.\n* The Route is in a namespace the controller does not have access to.",
											"type": "array",
											"maxItems": 8,
											"minItems": 1,
											"items": {
												"description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
												"type": "object",
												"required": [
													"lastTransitionTime",
													"message",
													"reason",
													"status",
													"type"
												],
												"properties": {
													"lastTransitionTime": {
														"description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
														"type": "string",
														"format": "date-time"
													},
													"message": {
														"description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
														"type": "string",
														"maxLength": 32768
													},
													"observedGeneration": {
														"description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
														"type": "integer",
														"format": "int64",
														"minimum": 0
													},
													"reason": {
														"description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
														"type": "string",
														"maxLength": 1024,
														"minLength": 1,
														"pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
													},
													"status": {
														"description": "status of the condition, one of True, False, Unknown.",
														"type": "string",
														"enum": [
															"True",
															"False",
															"Unknown"
														]
													},
													"type": {
														"description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
														"type": "string",
														"maxLength": 316,
														"pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
													}
												}
											},
											"x-kubernetes-list-map-keys": [
												"type"
											],
											"x-kubernetes-list-type": "map"
										},
										"controllerName": {
											"description": "ControllerName is a domain/path string that indicates the name of the\ncontroller that wrote this status. This corresponds with the\ncontrollerName field on GatewayClass.\n\n\nExample: \"example.net/gateway-controller\".\n\n\nThe format of this field is DOMAIN \"/\" PATH, where DOMAIN and PATH are\nvalid Kubernetes names\n(https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n\n\nControllers MUST populate this field when writing status. Controllers should ensure that\nentries to status populated with their ControllerName are cleaned up when they are no\nlonger necessary.",
											"type": "string",
											"maxLength": 253,
											"minLength": 1,
											"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/[A-Za-z0-9\\/\\-._~%!$&'()*+,;=:]+$"
										},
										"parentRef": {
											"description": "ParentRef corresponds with a ParentRef in the spec that this\nRouteParentStatus struct describes the status of.",
											"type": "object",
											"required": [
												"name"
											],
											"properties": {
												"group": {
													"description": "Group is the group of the referent.\nWhen unspecified, \"gateway.networking.k8s.io\" is inferred.\nTo set the core API group (such as for a \"Service\" kind referent),\nGroup must be explicitly set to \"\" (empty string).\n\n\nSupport: Core",
													"type": "string",
													"default": "gateway.networking.k8s.io",
													"maxLength": 253,
													"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
												},
												"kind": {
													"description": "Kind is kind of the referent.\n\n\nThere are two kinds of parent resources with \"Core\" support:\n\n\n* Gateway (Gateway conformance profile)\n* Service (Mesh conformance profile, ClusterIP Services only)\n\n\nSupport for other resources is Implementation-Specific.",
													"type": "string",
													"default": "Gateway",
													"maxLength": 63,
													"minLength": 1,
													"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
												},
												"name": {
													"description": "Name is the name of the referent.\n\n\nSupport: Core",
													"type": "string",
													"maxLength": 253,
													"minLength": 1
												},
												"namespace": {
													"description": "Namespace is the namespace of the referent. When unspecified, this refers\nto the local namespace of the Route.\n\n\nNote that there are specific rules for ParentRefs which cross namespace\nboundaries. Cross-namespace references are only valid if they are explicitly\nallowed by something in the namespace they are referring to. For example:\nGateway has the AllowedRoutes field, and ReferenceGrant provides a\ngeneric way to enable any other kind of cross-namespace reference.\n\n\n\n\n\nSupport: Core",
													"type": "string",
													"maxLength": 63,
													"minLength": 1,
													"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
												},
												"port": {
													"description": "Port is the network port this Route targets. It can be interpreted\ndifferently based on the type of parent resource.\n\n\nWhen the parent resource is a Gateway, this targets all listeners\nlistening on the specified port that also support this kind of Route(and\nselect this Route). It's not recommended to set `Port` unless the\nnetworking behaviors specified in a Route must apply to a specific port\nas opposed to a listener(s) whose port(s) may be changed. When both Port\nand SectionName are specified, the name and port of the selected listener\nmust match both specified values.\n\n\n\n\n\nImplementations MAY choose to support other parent resources.\nImplementations supporting other types of parent resources MUST clearly\ndocument how/if Port is interpreted.\n\n\nFor the purpose of status, an attachment is considered successful as\nlong as the parent resource accepts it partially. For example, Gateway\nlisteners can restrict which Routes can attach to them by Route kind,\nnamespace, or hostname. If 1 of 2 Gateway listeners accept attachment\nfrom the referencing Route, the Route MUST be considered successfully\nattached. If no Gateway listeners accept attachment from this Route,\nthe Route MUST be considered detached from the Gateway.\n\n\nSupport: Extended",
													"type": "integer",
													"format": "int32",
													"maximum": 65535,
													"minimum": 1
												},
												"sectionName": {
													"description": "SectionName is the name of a section within the target resource. In the\nfollowing resources, SectionName is interpreted as the following:\n\n\n* Gateway: Listener name. When both Port (experimental) and SectionName\nare specified, the name and port of the selected listener must match\nboth specified values.\n* Service: Port name. When both Port (experimental) and SectionName\nare specified, the name and port of the selected listener must match\nboth specified values.\n\n\nImplementations MAY choose to support attaching Routes to other resources.\nIf that is the case, they MUST clearly document how SectionName is\ninterpreted.\n\n\nWhen unspecified (empty string), this will reference the entire resource.\nFor the purpose of status, an attachment is considered successful if at\nleast one section in the parent resource accepts it. For example, Gateway\nlisteners can restrict which Routes can attach to them by Route kind,\nnamespace, or hostname. If 1 of 2 Gateway listeners accept attachment from\nthe referencing Route, the Route MUST be considered successfully\nattached. If no Gateway listeners accept attachment from this Route, the\nRoute MUST be considered detached from the Gateway.\n\n\nSupport: Core",
													"type": "string",
													"maxLength": 253,
													"minLength": 1,
													"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"x-kubernetes-group-version-kind": [
					{
						"group": "gateway.networking.k8s.io",
						"kind": "GRPCRoute",
						"version": "v1"
					}
				]
			},
			"io.k8s.networking.gateway.v1.GRPCRouteList": {
				"description": "GRPCRouteList is a list of GRPCRoute",
				"type": "object",
				"required": [
					"items"
				],
				"properties": {
					"apiVersion": {
						"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
						"type": "string"
					},
					"items": {
						"description": "List of grpcroutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GRPCRoute"
						}
					},
					"kind": {
						"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"type": "string"
					},
					"metadata": {
						"description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"allOf": [
							{
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
							}
						]
					}
				},
				"x-kubernetes-group-version-kind": [
					{
						"group": "gateway.networking.k8s.io",
						"kind": "GRPCRouteList",
						"version": "v1"
					}
				]
			},
			"io.k8s.networking.gateway.v1.Gateway": {
				"description": "Gateway represents an instance of a service-traffic handling infrastructure\nby binding Listeners to a set of IP addresses.",
				"type": "object",
				"required": [
					"spec"
				],
				"properties": {
					"apiVersion": {
						"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
						"type": "string"
					},
					"kind": {
						"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"type": "string"
					},
					"metadata": {
						"description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
						"allOf": [
							{
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
							}
						]
					},
					"spec": {
						"description": "Spec defines the desired state of Gateway.",
						"type": "object",
						"required": [
							"gatewayClassName",
							"listeners"
						],
						"properties": {
							"addresses": {
								"description": "Addresses requested for this Gateway. This is optional and behavior can\ndepend on the implementation. If a value is set in the spec and the\nrequested address is invalid or unavailable, the implementation MUST\nindicate this in the associated entry in GatewayStatus.Addresses.\n\n\nThe Addresses field represents a request for the address(es) on the\n\"outside of the Gateway\", that traffic bound for this Gateway will use.\nThis could be the IP address or hostname of an external load balancer or\nother networking infrastructure, or some other address that traffic will\nbe sent to.\n\n\nIf no Addresses are specified, the implementation MAY schedule the\nGateway in an implementation-specific manner, assigning an appropriate\nset of Addresses.\n\n\nThe implementation MUST bind all Listeners to every GatewayAddress that\nit assigns to the Gateway and add a corresponding entry in\nGatewayStatus.Addresses.\n\n\nSupport: Extended\n\n\n",
								"type": "array",
								"maxItems": 16,
								"items": {
									"description": "GatewayAddress describes an address that can be bound to a Gateway.",
									"type": "object",
									"required": [
										"value"
									],
									"oneOf": [
										{
											"properties": {
												"type": {
													"enum": [
														"IPAddress"
													]
												},
												"value": {
													"anyOf": [
														{
															"format": "ipv4"
														},
														{
															"format": "ipv6"
														}
													]
												}
											}
										},
										{
											"properties": {
												"type": {
													"not": {
														"enum": [
															"IPAddress"
														]
													}
												}
											}
										}
									],
									"properties": {
										"type": {
											"description": "Type of the address.",
											"type": "string",
											"default": "IPAddress",
											"maxLength": 253,
											"minLength": 1,
											"pattern": "^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/[A-Za-z0-9\\/\\-._~%!$&'()*+,;=:]+$"
										},
										"value": {
											"description": "Value of the address. The validity of the values will depend\non the type and support by the controller.\n\n\nExamples: `1.2.3.4`, `128::1`, `my-ip-address`.",
											"type": "string",
											"maxLength": 253,
											"minLength": 1
										}
									},
									"x-kubernetes-validations": [
										{
											"rule": "self.type == 'Hostname' ? self.value.matches(r\"\"\"^(\\*\\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"\"\"): true",
											"message": "Hostname value must only contain valid characters (matching ^(\\*\\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)"
										}
									]
								},
								"x-kubernetes-validations": [
									{
										"rule": "self.all(a1, a1.type == 'IPAddress' ? self.exists_one(a2, a2.type == a1.type && a2.value == a1.value) : true )",
										"message": "IPAddress values must be unique"
									},
									{
										"rule": "self.all(a1, a1.type == 'Hostname' ? self.exists_one(a2, a2.type == a1.type && a2.value == a1.value) : true )",
										"message": "Hostname values must be unique"
									}
								]
							},
							"gatewayClassName": {
								"description": "GatewayClassName used for this Gateway. This is the name of a\nGatewayClass resource.",
								"type": "string",
								"maxLength": 253,
								"minLength": 1
							},
							"listeners": {
								"description": "Listeners associated with this Gateway. Listeners define\nlogical endpoints that are bound on this Gateway's addresses.\nAt least one Listener MUST be specified.\n\n\nEach Listener in a set of Listeners (for example, in a single Gateway)\nMUST be _distinct_, in that a traffic flow MUST be able to be assigned to\nexactly one listener. (This section uses \"set of Listeners\" rather than\n\"Listeners in a single Gateway\" because implementations MAY merge configuration\nfrom multiple Gateways onto a single data plane, and these rules _also_\napply in that case).\n\n\nPractically, this means that each listener in a set MUST have a unique\ncombination of Port, Protocol, and, if supported by the protocol, Hostname.\n\n\nSome combinations of port, protocol, and TLS settings are considered\nCore support and MUST be supported by implementations based on their\ntargeted conformance profile:\n\n\nHTTP Profile\n\n\n1. HTTPRoute, Port: 80, Protocol: HTTP\n2. HTTPRoute, Port: 443, Protocol: HTTPS, TLS Mode: Terminate, TLS keypair provided\n\n\nTLS Profile\n\n\n1. TLSRoute, Port: 443, Protocol: TLS, TLS Mode: Passthrough\n\n\n\"Distinct\" Listeners have the following property:\n\n\nThe implementation can match inbound requests to a single distinct\nListener. When multiple Listeners share values for fields (for\nexample, two Listeners with the same Port value), the implementation\ncan match requests to only one of the Listeners using other\nListener fields.\n\n\nFor example, the following Listener scenarios are distinct:\n\n\n1. Multiple Listeners with the same Port that all use the \"HTTP\"\n   Protocol that all have unique Hostname values.\n2. Multiple Listeners with the same Port that use either the \"HTTPS\" or\n   \"TLS\" Protocol that all have unique Hostname values.\n3. A mixture of \"TCP\" and \"UDP\" Protocol Listeners, where no Listener\n   with the same Protocol has the same Port value.\n\n\nSome fields in the Listener struct have possible values that affect\nwhether the Listener is distinct. Hostname is particularly relevant\nfor HTTP or HTTPS protocols.\n\n\nWhen using the Hostname value to select between same-Port, same-Protocol\nListeners, the Hostname value must be different on each Listener for the\nListener to be distinct.\n\n\nWhen the Listeners are distinct based on Hostname, inbound request\nhostnames MUST match from the most specific to least specific Hostname\nvalues to choose the correct Listener and its associated set of Routes.\n\n\nExact matches must be processed before wildcard matches, and wildcard\nmatches must be processed before fallback (empty Hostname value)\nmatches. For example, `\"foo.example.com\"` takes precedence over\n`\"*.example.com\"`, and `\"*.example.com\"` takes precedence over `\"\"`.\n\n\nAdditionally, if there are multiple wildcard entries, more specific\nwildcard entries must be processed before less specific wildcard entries.\nFor example, `\"*.foo.example.com\"` takes precedence over `\"*.example.com\"`.\nThe precise definition here is that the higher the number of dots in the\nhostname to the right of the wildcard character, the higher the precedence.\n\n\nThe wildcard character will match any number of characters _and dots_ to\nthe left, however, so `\"*.example.com\"` will match both\n`\"foo.bar.example.com\"` _and_ `\"bar.example.com\"`.\n\n\nIf a set of Listeners contains Listeners that are not distinct, then those\nListeners are Conflicted, and the implementation MUST set the \"Conflicted\"\ncondition in the Listener Status to \"True\".\n\n\nImplementations MAY choose to accept a Gateway with some Conflicted\nListeners only if they only accept the partial Listener set that contains\nno Conflicted Listeners. To put this another way, implementations may\naccept a partial Listener set only if they throw out *all* the conflicting\nListeners. No picking one of the conflicting listeners as the winner.\nThis also means that the Gateway must have at least one non-conflicting\nListener in this case, otherwise it violates the requirement that at\nleast one Listener must be present.\n\n\nThe implementation MUST set a \"ListenersNotValid\" condition on the\nGateway Status when the Gateway contains Conflicted Listeners whether or\nnot they accept the Gateway. That Condition SHOULD clearly\nindicate in the Message which Listeners are conflicted, and which are\nAccepted. Additionally, the Listener status for those listeners SHOULD\nindicate which Listeners are conflicted and not Accepted.\n\n\nA Gateway's Listeners are considered \"compatible\" if:\n\n\n1. They are distinct.\n2. The implementation can serve them in compliance with the Addresses\n   requirement that all Listeners are available on all assigned\n   addresses.\n\n\nCompatible combinations in Extended support are expected to vary across\nimplementations. A combination that is compatible for one implementation\nmay not be compatible for another.\n\n\nFor example, an implementation that cannot serve both TCP and UDP listeners\non the same address, or cannot mix HTTPS and generic TLS listens on the same port\nwould not consider those cases compatible, even though they are distinct.\n\n\nNote that requests SHOULD match at most one Listener. For example, if\nListeners are defined for \"foo.example.com\" and \"*.example.com\", a\nrequest to \"foo.example.com\" SHOULD only be routed using routes attached\nto the \"foo.example.com\" Listener (and not the \"*.example.com\" Listener).\nThis concept is known as \"Listener Isolation\". Implementations that do\nnot support Listener Isolation MUST clearly document this.\n\n\nImplementations MAY merge separate Gateways onto a single set of\nAddresses if all Listeners across all Gateways are compatible.\n\n\nSupport: Core",
								"type": "array",
								"maxItems": 64,
								"minItems": 1,
								"items": {
									"description": "Listener embodies the concept of a logical endpoint where a Gateway accepts\nnetwork connections.",
									"type": "object",
									"required": [
										"name",
										"port",
										"protocol"
									],
									"properties": {
										"allowedRoutes": {
											"description": "AllowedRoutes defines the types of routes that MAY be attached to a\nListener and the trusted namespaces where those Route resources MAY be\npresent.\n\n\nAlthough a client request may match multiple route rules, only one rule\nmay ultimately receive the request. Matching precedence MUST be\ndetermined in order of the following criteria:\n\n\n* The most specific match as defined by the Route type.\n* The oldest Route based on creation timestamp. For example, a Route with\n  a creation timestamp of \"2020-09-08 01:02:03\" is given precedence over\n  a Route with a creation timestamp of \"2020-09-08 01:02:04\".\n* If everything else is equivalent, the Route appearing first in\n  alphabetical order (namespace/name) should be given precedence. For\n  example, foo/bar is given precedence over foo/baz.\n\n\nAll valid rules within a Route attached to this Listener should be\nimplemented. Invalid Route rules can be ignored (sometimes that will mean\nthe full Route). If a Route rule transitions from valid to invalid,\nsupport for that Route rule should be dropped to ensure consistency. For\nexample, even if a filter specified by a Route rule is invalid, the rest\nof the rules within that Route should still be supported.\n\n\nSupport: Core",
											"type": "object",
											"default": {
												"namespaces": {
													"from": "Same"
												}
											},
											"properties": {
												"kinds": {
													"description": "Kinds specifies the groups and kinds of Routes that are allowed to bind\nto this Gateway Listener. When unspecified or empty, the kinds of Routes\nselected are determined using the Listener protocol.\n\n\nA RouteGroupKind MUST correspond to kinds of Routes that are compatible\nwith the application protocol specified in the Listener's Protocol field.\nIf an implementation does not support or recognize this resource type, it\nMUST set the \"ResolvedRefs\" condition to False for this Listener with the\n\"InvalidRouteKinds\" reason.\n\n\nSupport: Core",
													"type": "array",
													"maxItems": 8,
													"items": {
														"description": "RouteGroupKind indicates the group and kind of a Route resource.",
														"type": "object",
														"required": [
															"kind"
														],
														"properties": {
															"group": {
																"description": "Group is the group of the Route.",
																"type": "string",
																"default": "gateway.networking.k8s.io",
																"maxLength": 253,
																"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
															},
															"kind": {
																"description": "Kind is the kind of the Route.",
																"type": "string",
																"maxLength": 63,
																"minLength": 1,
																"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
															}
														}
													}
												},
												"namespaces": {
													"description": "Namespaces indicates namespaces from which Routes may be attached to this\nListener. This is restricted to the namespace of this Gateway by default.\n\n\nSupport: Core",
													"type": "object",
													"default": {
														"from": "Same"
													},
													"properties": {
														"from": {
															"description": "From indicates where Routes will be selected for this Gateway. Possible\nvalues are:\n\n\n* All: Routes in all namespaces may be used by this Gateway.\n* Selector: Routes in namespaces selected by the selector may be used by\n  this Gateway.\n* Same: Only Routes in the same namespace may be used by this Gateway.\n\n\nSupport: Core",
															"type": "string",
															"default": "Same",
															"enum": [
																"All",
																"Selector",
																"Same"
															]
														},
														"selector": {
															"description": "Selector must be specified when From is set to \"Selector\". In that case,\nonly Routes in Namespaces matching this Selector will be selected by this\nGateway. This field is ignored for other values of \"From\".\n\n\nSupport: Core",
															"type": "object",
															"properties": {
																"matchExpressions": {
																	"description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
																	"type": "array",
																	"items": {
																		"description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
																		"type": "object",
																		"required": [
																			"key",
																			"operator"
																		],
																		"properties": {
																			"key": {
																				"description": "key is the label key that the selector applies to.",
																				"type": "string"
																			},
																			"operator": {
																				"description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
																				"type": "string"
																			},
																			"values": {
																				"description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
																				"type": "array",
																				"items": {
																					"type": "string"
																				},
																				"x-kubernetes-list-type": "atomic"
																			}
																		}
																	},
																	"x-kubernetes-list-type": "atomic"
																},
																"matchLabels": {
																	"description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
																	"type": "object",
																	"additionalProperties": {
																		"type": "string"
																	}
																}
															},
															"x-kubernetes-map-type": "atomic"
														}
													}
												}
											}
										},
										"hostname": {
											"description": "Hostname specifies the virtual hostname to match for protocol types that\ndefine this concept. When unspecified, all hostnames are matched. This\nfield is ignored for protocols that don't require hostname based\nmatching.\n\n\nImplementations MUST apply Hostname matching appropriately for each of\nthe following protocols:\n\n\n* TLS: The Listener Hostname MUST match the SNI.\n* HTTP: The Listener Hostname MUST match the Host header of the request.\n* HTTPS: The Listener Hostname SHOULD match at both the TLS and HTTP\n  protocol layers as described above. If an implementation does not\n  ensure that both the SNI and Host header match the Listener hostname,\n  it MUST clearly document that.\n\n\nFor HTTPRoute and TLSRoute resources, there is an interaction with the\n`spec.hostnames` array. When both listener and route specify hostnames,\nthere MUST be an intersection between the values for a Route to be\naccepted. For more information, refer to the Route specific Hostnames\ndocumentation.\n\n\nHostnames that are prefixed with a wildcard label (`*.`) are interpreted\nas a suffix match. That means that a match for `*.example.com` would match\nboth `test.example.com`, and `foo.test.example.com`, but not `example.com`.\n\n\nSupport: Core",
											"type": "string",
											"maxLength": 253,
											"minLength": 1,
											"pattern": "^(\\*\\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
										},
										"name": {
											"description": "Name is the name of the Listener. This name MUST be unique within a\nGateway.\n\n\nSupport: Core",
											"type": "string",
											"maxLength": 253,
											"minLength": 1,
											"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
										},
										"port": {
											"description": "Port is the network port. Multiple listeners may use the\nsame port, subject to the Listener compatibility rules.\n\n\nSupport: Core",
											"type": "integer",
											"format": "int32",
											"maximum": 65535,
											"minimum": 1
										},
										"protocol": {
											"description": "Protocol specifies the network protocol this listener expects to receive.\n\n\nSupport: Core",
											"type": "string",
											"maxLength": 255,
											"minLength": 1,
											"pattern": "^[a-zA-Z0-9]([-a-zSA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/[A-Za-z0-9]+$"
										},
										"tls": {
											"description": "TLS is the TLS configuration for the Listener. This field is required if\nthe Protocol field is \"HTTPS\" or \"TLS\". It is invalid to set this field\nif the Protocol field is \"HTTP\", \"TCP\", or \"UDP\".\n\n\nThe association of SNIs to Certificate defined in GatewayTLSConfig is\ndefined based on the Hostname field for this listener.\n\n\nThe GatewayClass MUST use the longest matching SNI out of all\navailable certificates for any TLS handshake.\n\n\nSupport: Core",
											"type": "object",
											"properties": {
												"certificateRefs": {
													"description": "CertificateRefs contains a series of references to Kubernetes objects that\ncontains TLS certificates and private keys. These certificates are used to\nestablish a TLS handshake for requests that match the hostname of the\nassociated listener.\n\n\nA single CertificateRef to a Kubernetes Secret has \"Core\" support.\nImplementations MAY choose to support attaching multiple certificates to\na Listener, but this behavior is implementation-specific.\n\n\nReferences to a resource in different namespace are invalid UNLESS there\nis a ReferenceGrant in the target namespace that allows the certificate\nto be attached. If a ReferenceGrant does not allow this reference, the\n\"ResolvedRefs\" condition MUST be set to False for this listener with the\n\"RefNotPermitted\" reason.\n\n\nThis field is required to have at least one element when the mode is set\nto \"Terminate\" (default) and is optional otherwise.\n\n\nCertificateRefs can reference to standard Kubernetes resources, i.e.\nSecret, or implementation-specific custom resources.\n\n\nSupport: Core - A single reference to a Kubernetes Secret of type kubernetes.io/tls\n\n\nSupport: Implementation-specific (More than one reference or other resource types)",
													"type": "array",
													"maxItems": 64,
													"items": {
														"description": "SecretObjectReference identifies an API object including its namespace,\ndefaulting to Secret.\n\n\nThe API object must be valid in the cluster; the Group and Kind must\nbe registered in the cluster for this reference to be valid.\n\n\nReferences to objects with invalid Group and Kind are not valid, and must\nbe rejected by the implementation, with appropriate Conditions set\non the containing object.",
														"type": "object",
														"required": [
															"name"
														],
														"properties": {
															"group": {
																"description": "Group is the group of the referent. For example, \"gateway.networking.k8s.io\".\nWhen unspecified or empty string, core API group is inferred.",
																"type": "string",
																"default": "",
																"maxLength": 253,
																"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
															},
															"kind": {
																"description": "Kind is kind of the referent. For example \"Secret\".",
																"type": "string",
																"default": "Secret",
																"maxLength": 63,
																"minLength": 1,
																"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
															},
															"name": {
																"description": "Name is the name of the referent.",
																"type": "string",
																"maxLength": 253,
																"minLength": 1
															},
															"namespace": {
																"description": "Namespace is the namespace of the referenced object. When unspecified, the local\nnamespace is inferred.\n\n\nNote that when a namespace different than the local namespace is specified,\na ReferenceGrant object is required in the referent namespace to allow that\nnamespace's owner to accept the reference. See the ReferenceGrant\ndocumentation for details.\n\n\nSupport: Core",
																"type": "string",
																"maxLength": 63,
																"minLength": 1,
																"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
															}
														}
													}
												},
												"mode": {
													"description": "Mode defines the TLS behavior for the TLS session initiated by the client.\nThere are two possible modes:\n\n\n- Terminate: The TLS session between the downstream client and the\n  Gateway is terminated at the Gateway. This mode requires certificates\n  to be specified in some way, such as populating the certificateRefs\n  field.\n- Passthrough: The TLS session is NOT terminated by the Gateway. This\n  implies that the Gateway can't decipher the TLS stream except for\n  the ClientHello message of the TLS protocol. The certificateRefs field\n  is ignored in this mode.\n\n\nSupport: Core",
													"type": "string",
													"default": "Terminate",
													"enum": [
														"Terminate",
														"Passthrough"
													]
												},
												"options": {
													"description": "Options are a list of key/value pairs to enable extended TLS\nconfiguration for each implementation. For example, configuring the\nminimum TLS version or supported cipher suites.\n\n\nA set of common keys MAY be defined by the API in the future. To avoid\nany ambiguity, implementation-specific definitions MUST use\ndomain-prefixed names, such as `example.com/my-custom-option`.\nUn-prefixed names are reserved for key names defined by Gateway API.\n\n\nSupport: Implementation-specific",
													"type": "object",
													"maxProperties": 16,
													"additionalProperties": {
														"description": "AnnotationValue is the value of an annotation in Gateway API. This is used\nfor validation of maps such as TLS options. This roughly matches Kubernetes\nannotation validation, although the length validation in that case is based\non the entire size of the annotations struct.",
														"type": "string",
														"maxLength": 4096,
														"minLength": 0
													}
												}
											},
											"x-kubernetes-validations": [
												{
													"rule": "self.mode == 'Terminate' ? size(self.certificateRefs) > 0 || size(self.options) > 0 : true",
													"message": "certificateRefs or options must be specified when mode is Terminate"
												}
											]
										}
									}
								},
								"x-kubernetes-list-map-keys": [
									"name"
								],
								"x-kubernetes-list-type": "map",
								"x-kubernetes-validations": [
									{
										"rule": "self.all(l, l.protocol in ['HTTP', 'TCP', 'UDP'] ? !has(l.tls) : true)",
										"message": "tls must not be specified for protocols ['HTTP', 'TCP', 'UDP']"
									},
									{
										"rule": "self.all(l, (l.protocol == 'HTTPS' && has(l.tls)) ? (l.tls.mode == '' || l.tls.mode == 'Terminate') : true)",
										"message": "tls mode must be Terminate for protocol HTTPS"
									},
									{
										"rule": "self.all(l, l.protocol in ['TCP', 'UDP']  ? (!has(l.hostname) || l.hostname == '') : true)",
										"message": "hostname must not be specified for protocols ['TCP', 'UDP']"
									},
									{
										"rule": "self.all(l1, self.exists_one(l2, l1.name == l2.name))",
										"message": "Listener name must be unique within the Gateway"
									},
									{
										"rule": "self.all(l1, self.exists_one(l2, l1.port == l2.port && l1.protocol == l2.protocol && (has(l1.hostname) && has(l2.hostname) ? l1.hostname == l2.hostname : !has(l1.hostname) && !has(l2.hostname))))",
										"message": "Combination of port, protocol and hostname must be unique for each listener"
									}
								]
							}
						}
					},
					"status": {
						"description": "Status defines the current state of Gateway.",
						"type": "object",
						"default": {
							"conditions": [
								{
									"lastTransitionTime": "1970-01-01T00:00:00Z",
									"message": "Waiting for controller",
									"reason": "Pending",
									"status": "Unknown",
									"type": "Accepted"
								},
								{
									"lastTransitionTime": "1970-01-01T00:00:00Z",
									"message": "Waiting for controller",
									"reason": "Pending",
									"status": "Unknown",
									"type": "Programmed"
								}
							]
						},
						"properties": {
							"addresses": {
								"description": "Addresses lists the network addresses that have been bound to the\nGateway.\n\n\nThis list may differ from the addresses provided in the spec under some\nconditions:\n\n\n  * no addresses are specified, all addresses are dynamically assigned\n  * a combination of specified and dynamic addresses are assigned\n  * a specified address was unusable (e.g. already in use)\n\n\n",
								"type": "array",
								"maxItems": 16,
								"items": {
									"description": "GatewayStatusAddress describes a network address that is bound to a Gateway.",
									"type": "object",
									"required": [
										"value"
									],
									"oneOf": [
										{
											"properties": {
												"type": {
													"enum": [
														"IPAddress"
													]
												},
												"value": {
													"anyOf": [
														{
															"format": "ipv4"
														},
														{
															"format": "ipv6"
														}
													]
												}
											}
										},
										{
											"properties": {
												"type": {
													"not": {
														"enum": [
															"IPAddress"
														]
													}
												}
											}
										}
									],
									"properties": {
										"type": {
											"description": "Type of the address.",
											"type": "string",
											"default": "IPAddress",
											"maxLength": 253,
											"minLength": 1,
											"pattern": "^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/[A-Za-z0-9\\/\\-._~%!$&'()*+,;=:]+$"
										},
										"value": {
											"description": "Value of the address. The validity of the values will depend\non the type and support by the controller.\n\n\nExamples: `1.2.3.4`, `128::1`, `my-ip-address`.",
											"type": "string",
											"maxLength": 253,
											"minLength": 1
										}
									},
									"x-kubernetes-validations": [
										{
											"rule": "self.type == 'Hostname' ? self.value.matches(r\"\"\"^(\\*\\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"\"\"): true",
											"message": "Hostname value must only contain valid characters (matching ^(\\*\\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)"
										}
									]
								}
							},
							"conditions": {
								"description": "Conditions describe the current conditions of the Gateway.\n\n\nImplementations should prefer to express Gateway conditions\nusing the `GatewayConditionType` and `GatewayConditionReason`\nconstants so that operators and tools can converge on a common\nvocabulary to describe Gateway state.\n\n\nKnown condition types are:\n\n\n* \"Accepted\"\n* \"Programmed\"\n* \"Ready\"",
								"type": "array",
								"default": [
									{
										"lastTransitionTime": "1970-01-01T00:00:00Z",
										"message": "Waiting for controller",
										"reason": "Pending",
										"status": "Unknown",
										"type": "Accepted"
									},
									{
										"lastTransitionTime": "1970-01-01T00:00:00Z",
										"message": "Waiting for controller",
										"reason": "Pending",
										"status": "Unknown",
										"type": "Programmed"
									}
								],
								"maxItems": 8,
								"items": {
									"description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
									"type": "object",
									"required": [
										"lastTransitionTime",
										"message",
										"reason",
										"status",
										"type"
									],
									"properties": {
										"lastTransitionTime": {
											"description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
											"type": "string",
											"format": "date-time"
										},
										"message": {
											"description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
											"type": "string",
											"maxLength": 32768
										},
										"observedGeneration": {
											"description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
											"type": "integer",
											"format": "int64",
											"minimum": 0
										},
										"reason": {
											"description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
											"type": "string",
											"maxLength": 1024,
											"minLength": 1,
											"pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
										},
										"status": {
											"description": "status of the condition, one of True, False, Unknown.",
											"type": "string",
											"enum": [
												"True",
												"False",
												"Unknown"
											]
										},
										"type": {
											"description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
											"type": "string",
											"maxLength": 316,
											"pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
										}
									}
								},
								"x-kubernetes-list-map-keys": [
									"type"
								],
								"x-kubernetes-list-type": "map"
							},
							"listeners": {
								"description": "Listeners provide status for each unique listener port defined in the Spec.",
								"type": "array",
								"maxItems": 64,
								"items": {
									"description": "ListenerStatus is the status associated with a Listener.",
									"type": "object",
									"required": [
										"attachedRoutes",
										"conditions",
										"name",
										"supportedKinds"
									],
									"properties": {
										"attachedRoutes": {
											"description": "AttachedRoutes represents the total number of Routes that have been\nsuccessfully attached to this Listener.\n\n\nSuccessful attachment of a Route to a Listener is based solely on the\ncombination of the AllowedRoutes field on the corresponding Listener\nand the Route's ParentRefs field. A Route is successfully attached to\na Listener when it is selected by the Listener's AllowedRoutes field\nAND the Route has a valid ParentRef selecting the whole Gateway\nresource or a specific Listener as a parent resource (more detail on\nattachment semantics can be found in the documentation on the various\nRoute kinds ParentRefs fields). Listener or Route status does not impact\nsuccessful attachment, i.e. the AttachedRoutes field count MUST be set\nfor Listeners with condition Accepted: false and MUST count successfully\nattached Routes that may themselves have Accepted: false conditions.\n\n\nUses for this field include troubleshooting Route attachment and\nmeasuring blast radius/impact of changes to a Listener.",
											"type": "integer",
											"format": "int32"
										},
										"conditions": {
											"description": "Conditions describe the current condition of this listener.",
											"type": "array",
											"maxItems": 8,
											"items": {
												"description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
												"type": "object",
												"required": [
													"lastTransitionTime",
													"message",
													"reason",
													"status",
													"type"
												],
												"properties": {
													"lastTransitionTime": {
														"description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
														"type": "string",
														"format": "date-time"
													},
													"message": {
														"description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
														"type": "string",
														"maxLength": 32768
													},
													"observedGeneration": {
														"description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
														"type": "integer",
														"format": "int64",
														"minimum": 0
													},
													"reason": {
														"description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
														"type": "string",
														"maxLength": 1024,
														"minLength": 1,
														"pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
													},
													"status": {
														"description": "status of the condition, one of True, False, Unknown.",
														"type": "string",
														"enum": [
															"True",
															"False",
															"Unknown"
														]
													},
													"type": {
														"description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
														"type": "string",
														"maxLength": 316,
														"pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
													}
												}
											},
											"x-kubernetes-list-map-keys": [
												"type"
											],
											"x-kubernetes-list-type": "map"
										},
										"name": {
											"description": "Name is the name of the Listener that this status corresponds to.",
											"type": "string",
											"maxLength": 253,
											"minLength": 1,
											"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
										},
										"supportedKinds": {
											"description": "SupportedKinds is the list indicating the Kinds supported by this\nlistener. This MUST represent the kinds an implementation supports for\nthat Listener configuration.\n\n\nIf kinds are specified in Spec that are not supported, they MUST NOT\nappear in this list and an implementation MUST set the \"ResolvedRefs\"\ncondition to \"False\" with the \"InvalidRouteKinds\" reason. If both valid\nand invalid Route kinds are specified, the implementation MUST\nreference the valid Route kinds that have been specified.",
											"type": "array",
											"maxItems": 8,
											"items": {
												"description": "RouteGroupKind indicates the group and kind of a Route resource.",
												"type": "object",
												"required": [
													"kind"
												],
												"properties": {
													"group": {
														"description": "Group is the group of the Route.",
														"type": "string",
														"default": "gateway.networking.k8s.io",
														"maxLength": 253,
														"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
													},
													"kind": {
														"description": "Kind is the kind of the Route.",
														"type": "string",
														"maxLength": 63,
														"minLength": 1,
														"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
													}
												}
											}
										}
									}
								},
								"x-kubernetes-list-map-keys": [
									"name"
								],
								"x-kubernetes-list-type": "map"
							}
						}
					}
				},
				"x-kubernetes-group-version-kind": [
					{
						"group": "gateway.networking.k8s.io",
						"kind": "Gateway",
						"version": "v1"
					}
				]
			},
			"io.k8s.networking.gateway.v1.GatewayClass": {
				"description": "GatewayClass describes a class of Gateways available to the user for creating\nGateway resources.\n\n\nIt is recommended that this resource be used as a template for Gateways. This\nmeans that a Gateway is based on the state of the GatewayClass at the time it\nwas created and changes to the GatewayClass or associated parameters are not\npropagated down to existing Gateways. This recommendation is intended to\nlimit the blast radius of changes to GatewayClass or associated parameters.\nIf implementations choose to propagate GatewayClass changes to existing\nGateways, that MUST be clearly documented by the implementation.\n\n\nWhenever one or more Gateways are using a GatewayClass, implementations SHOULD\nadd the `gateway-exists-finalizer.gateway.networking.k8s.io` finalizer on the\nassociated GatewayClass. This ensures that a GatewayClass associated with a\nGateway is not deleted while in use.\n\n\nGatewayClass is a Cluster level resource.",
				"type": "object",
				"required": [
					"spec"
				],
				"properties": {
					"apiVersion": {
						"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
						"type": "string"
					},
					"kind": {
						"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"type": "string"
					},
					"metadata": {
						"description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
						"allOf": [
							{
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
							}
						]
					},
					"spec": {
						"description": "Spec defines the desired state of GatewayClass.",
						"type": "object",
						"required": [
							"controllerName"
						],
						"properties": {
							"controllerName": {
								"description": "ControllerName is the name of the controller that is managing Gateways of\nthis class. The value of this field MUST be a domain prefixed path.\n\n\nExample: \"example.net/gateway-controller\".\n\n\nThis field is not mutable and cannot be empty.\n\n\nSupport: Core",
								"type": "string",
								"maxLength": 253,
								"minLength": 1,
								"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/[A-Za-z0-9\\/\\-._~%!$&'()*+,;=:]+$",
								"x-kubernetes-validations": [
									{
										"rule": "self == oldSelf",
										"message": "Value is immutable"
									}
								]
							},
							"description": {
								"description": "Description helps describe a GatewayClass with more details.",
								"type": "string",
								"maxLength": 64
							},
							"parametersRef": {
								"description": "ParametersRef is a reference to a resource that contains the configuration\nparameters corresponding to the GatewayClass. This is optional if the\ncontroller does not require any additional configuration.\n\n\nParametersRef can reference a standard Kubernetes resource, i.e. ConfigMap,\nor an implementation-specific custom resource. The resource can be\ncluster-scoped or namespace-scoped.\n\n\nIf the referent cannot be found, the GatewayClass's \"InvalidParameters\"\nstatus condition will be true.\n\n\nA Gateway for this GatewayClass may provide its own `parametersRef`. When both are specified,\nthe merging behavior is implementation specific.\nIt is generally recommended that GatewayClass provides defaults that can be overridden by a Gateway.\n\n\nSupport: Implementation-specific",
								"type": "object",
								"required": [
									"group",
									"kind",
									"name"
								],
								"properties": {
									"group": {
										"description": "Group is the group of the referent.",
										"type": "string",
										"maxLength": 253,
										"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
									},
									"kind": {
										"description": "Kind is kind of the referent.",
										"type": "string",
										"maxLength": 63,
										"minLength": 1,
										"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
									},
									"name": {
										"description": "Name is the name of the referent.",
										"type": "string",
										"maxLength": 253,
										"minLength": 1
									},
									"namespace": {
										"description": "Namespace is the namespace of the referent.\nThis field is required when referring to a Namespace-scoped resource and\nMUST be unset when referring to a Cluster-scoped resource.",
										"type": "string",
										"maxLength": 63,
										"minLength": 1,
										"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
									}
								}
							}
						}
					},
					"status": {
						"description": "Status defines the current state of GatewayClass.\n\n\nImplementations MUST populate status on all GatewayClass resources which\nspecify their controller name.",
						"type": "object",
						"default": {
							"conditions": [
								{
									"lastTransitionTime": "1970-01-01T00:00:00Z",
									"message": "Waiting for controller",
									"reason": "Waiting",
									"status": "Unknown",
									"type": "Accepted"
								}
							]
						},
						"properties": {
							"conditions": {
								"description": "Conditions is the current status from the controller for\nthis GatewayClass.\n\n\nControllers should prefer to publish conditions using values\nof GatewayClassConditionType for the type of each Condition.",
								"type": "array",
								"default": [
									{
										"lastTransitionTime": "1970-01-01T00:00:00Z",
										"message": "Waiting for controller",
										"reason": "Pending",
										"status": "Unknown",
										"type": "Accepted"
									}
								],
								"maxItems": 8,
								"items": {
									"description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
									"type": "object",
									"required": [
										"lastTransitionTime",
										"message",
										"reason",
										"status",
										"type"
									],
									"properties": {
										"lastTransitionTime": {
											"description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
											"type": "string",
											"format": "date-time"
										},
										"message": {
											"description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
											"type": "string",
											"maxLength": 32768
										},
										"observedGeneration": {
											"description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
											"type": "integer",
											"format": "int64",
											"minimum": 0
										},
										"reason": {
											"description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
											"type": "string",
											"maxLength": 1024,
											"minLength": 1,
											"pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
										},
										"status": {
											"description": "status of the condition, one of True, False, Unknown.",
											"type": "string",
											"enum": [
												"True",
												"False",
												"Unknown"
											]
										},
										"type": {
											"description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
											"type": "string",
											"maxLength": 316,
											"pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
										}
									}
								},
								"x-kubernetes-list-map-keys": [
									"type"
								],
								"x-kubernetes-list-type": "map"
							}
						}
					}
				},
				"x-kubernetes-group-version-kind": [
					{
						"group": "gateway.networking.k8s.io",
						"kind": "GatewayClass",
						"version": "v1"
					}
				]
			},
			"io.k8s.networking.gateway.v1.GatewayClassList": {
				"description": "GatewayClassList is a list of GatewayClass",
				"type": "object",
				"required": [
					"items"
				],
				"properties": {
					"apiVersion": {
						"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
						"type": "string"
					},
					"items": {
						"description": "List of gatewayclasses. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.GatewayClass"
						}
					},
					"kind": {
						"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"type": "string"
					},
					"metadata": {
						"description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"allOf": [
							{
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
							}
						]
					}
				},
				"x-kubernetes-group-version-kind": [
					{
						"group": "gateway.networking.k8s.io",
						"kind": "GatewayClassList",
						"version": "v1"
					}
				]
			},
			"io.k8s.networking.gateway.v1.GatewayList": {
				"description": "GatewayList is a list of Gateway",
				"type": "object",
				"required": [
					"items"
				],
				"properties": {
					"apiVersion": {
						"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
						"type": "string"
					},
					"items": {
						"description": "List of gateways. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.Gateway"
						}
					},
					"kind": {
						"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"type": "string"
					},
					"metadata": {
						"description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"allOf": [
							{
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
							}
						]
					}
				},
				"x-kubernetes-group-version-kind": [
					{
						"group": "gateway.networking.k8s.io",
						"kind": "GatewayList",
						"version": "v1"
					}
				]
			},
			"io.k8s.networking.gateway.v1.HTTPRoute": {
				"description": "HTTPRoute provides a way to route HTTP requests. This includes the capability\nto match requests by hostname, path, header, or query param. Filters can be\nused to specify additional processing steps. Backends specify where matching\nrequests should be routed.",
				"type": "object",
				"required": [
					"spec"
				],
				"properties": {
					"apiVersion": {
						"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
						"type": "string"
					},
					"kind": {
						"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"type": "string"
					},
					"metadata": {
						"description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
						"allOf": [
							{
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
							}
						]
					},
					"spec": {
						"description": "Spec defines the desired state of HTTPRoute.",
						"type": "object",
						"properties": {
							"hostnames": {
								"description": "Hostnames defines a set of hostnames that should match against the HTTP Host\nheader to select a HTTPRoute used to process the request. Implementations\nMUST ignore any port value specified in the HTTP Host header while\nperforming a match and (absent of any applicable header modification\nconfiguration) MUST forward this header unmodified to the backend.\n\n\nValid values for Hostnames are determined by RFC 1123 definition of a\nhostname with 2 notable exceptions:\n\n\n1. IPs are not allowed.\n2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard\n   label must appear by itself as the first label.\n\n\nIf a hostname is specified by both the Listener and HTTPRoute, there\nmust be at least one intersecting hostname for the HTTPRoute to be\nattached to the Listener. For example:\n\n\n* A Listener with `test.example.com` as the hostname matches HTTPRoutes\n  that have either not specified any hostnames, or have specified at\n  least one of `test.example.com` or `*.example.com`.\n* A Listener with `*.example.com` as the hostname matches HTTPRoutes\n  that have either not specified any hostnames or have specified at least\n  one hostname that matches the Listener hostname. For example,\n  `*.example.com`, `test.example.com`, and `foo.test.example.com` would\n  all match. On the other hand, `example.com` and `test.example.net` would\n  not match.\n\n\nHostnames that are prefixed with a wildcard label (`*.`) are interpreted\nas a suffix match. That means that a match for `*.example.com` would match\nboth `test.example.com`, and `foo.test.example.com`, but not `example.com`.\n\n\nIf both the Listener and HTTPRoute have specified hostnames, any\nHTTPRoute hostnames that do not match the Listener hostname MUST be\nignored. For example, if a Listener specified `*.example.com`, and the\nHTTPRoute specified `test.example.com` and `test.example.net`,\n`test.example.net` must not be considered for a match.\n\n\nIf both the Listener and HTTPRoute have specified hostnames, and none\nmatch with the criteria above, then the HTTPRoute is not accepted. The\nimplementation must raise an 'Accepted' Condition with a status of\n`False` in the corresponding RouteParentStatus.\n\n\nIn the event that multiple HTTPRoutes specify intersecting hostnames (e.g.\noverlapping wildcard matching and exact matching hostnames), precedence must\nbe given to rules from the HTTPRoute with the largest number of:\n\n\n* Characters in a matching non-wildcard hostname.\n* Characters in a matching hostname.\n\n\nIf ties exist across multiple Routes, the matching precedence rules for\nHTTPRouteMatches takes over.\n\n\nSupport: Core",
								"type": "array",
								"maxItems": 16,
								"items": {
									"description": "Hostname is the fully qualified domain name of a network host. This matches\nthe RFC 1123 definition of a hostname with 2 notable exceptions:\n\n\n 1. IPs are not allowed.\n 2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard\n    label must appear by itself as the first label.\n\n\nHostname can be \"precise\" which is a domain name without the terminating\ndot of a network host (e.g. \"foo.example.com\") or \"wildcard\", which is a\ndomain name prefixed with a single wildcard label (e.g. `*.example.com`).\n\n\nNote that as per RFC1035 and RFC1123, a *label* must consist of lower case\nalphanumeric characters or '-', and must start and end with an alphanumeric\ncharacter. No other punctuation is allowed.",
									"type": "string",
									"maxLength": 253,
									"minLength": 1,
									"pattern": "^(\\*\\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
								}
							},
							"parentRefs": {
								"description": "ParentRefs references the resources (usually Gateways) that a Route wants\nto be attached to. Note that the referenced parent resource needs to\nallow this for the attachment to be complete. For Gateways, that means\nthe Gateway needs to allow attachment from Routes of this kind and\nnamespace. For Services, that means the Service must either be in the same\nnamespace for a \"producer\" route, or the mesh implementation must support\nand allow \"consumer\" routes for the referenced Service. ReferenceGrant is\nnot applicable for governing ParentRefs to Services - it is not possible to\ncreate a \"producer\" route for a Service in a different namespace from the\nRoute.\n\n\nThere are two kinds of parent resources with \"Core\" support:\n\n\n* Gateway (Gateway conformance profile)\n* Service (Mesh conformance profile, ClusterIP Services only)\n\n\nThis API may be extended in the future to support additional kinds of parent\nresources.\n\n\nParentRefs must be _distinct_. This means either that:\n\n\n* They select different objects.  If this is the case, then parentRef\n  entries are distinct. In terms of fields, this means that the\n  multi-part key defined by `group`, `kind`, `namespace`, and `name` must\n  be unique across all parentRef entries in the Route.\n* They do not select different objects, but for each optional field used,\n  each ParentRef that selects the same object must set the same set of\n  optional fields to different values. If one ParentRef sets a\n  combination of optional fields, all must set the same combination.\n\n\nSome examples:\n\n\n* If one ParentRef sets `sectionName`, all ParentRefs referencing the\n  same object must also set `sectionName`.\n* If one ParentRef sets `port`, all ParentRefs referencing the same\n  object must also set `port`.\n* If one ParentRef sets `sectionName` and `port`, all ParentRefs\n  referencing the same object must also set `sectionName` and `port`.\n\n\nIt is possible to separately reference multiple distinct objects that may\nbe collapsed by an implementation. For example, some implementations may\nchoose to merge compatible Gateway Listeners together. If that is the\ncase, the list of routes attached to those resources should also be\nmerged.\n\n\nNote that for ParentRefs that cross namespace boundaries, there are specific\nrules. Cross-namespace references are only valid if they are explicitly\nallowed by something in the namespace they are referring to. For example,\nGateway has the AllowedRoutes field, and ReferenceGrant provides a\ngeneric way to enable other kinds of cross-namespace reference.\n\n\n\n\n\n\n\n\n",
								"type": "array",
								"maxItems": 32,
								"items": {
									"description": "ParentReference identifies an API object (usually a Gateway) that can be considered\na parent of this resource (usually a route). There are two kinds of parent resources\nwith \"Core\" support:\n\n\n* Gateway (Gateway conformance profile)\n* Service (Mesh conformance profile, ClusterIP Services only)\n\n\nThis API may be extended in the future to support additional kinds of parent\nresources.\n\n\nThe API object must be valid in the cluster; the Group and Kind must\nbe registered in the cluster for this reference to be valid.",
									"type": "object",
									"required": [
										"name"
									],
									"properties": {
										"group": {
											"description": "Group is the group of the referent.\nWhen unspecified, \"gateway.networking.k8s.io\" is inferred.\nTo set the core API group (such as for a \"Service\" kind referent),\nGroup must be explicitly set to \"\" (empty string).\n\n\nSupport: Core",
											"type": "string",
											"default": "gateway.networking.k8s.io",
											"maxLength": 253,
											"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
										},
										"kind": {
											"description": "Kind is kind of the referent.\n\n\nThere are two kinds of parent resources with \"Core\" support:\n\n\n* Gateway (Gateway conformance profile)\n* Service (Mesh conformance profile, ClusterIP Services only)\n\n\nSupport for other resources is Implementation-Specific.",
											"type": "string",
											"default": "Gateway",
											"maxLength": 63,
											"minLength": 1,
											"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
										},
										"name": {
											"description": "Name is the name of the referent.\n\n\nSupport: Core",
											"type": "string",
											"maxLength": 253,
											"minLength": 1
										},
										"namespace": {
											"description": "Namespace is the namespace of the referent. When unspecified, this refers\nto the local namespace of the Route.\n\n\nNote that there are specific rules for ParentRefs which cross namespace\nboundaries. Cross-namespace references are only valid if they are explicitly\nallowed by something in the namespace they are referring to. For example:\nGateway has the AllowedRoutes field, and ReferenceGrant provides a\ngeneric way to enable any other kind of cross-namespace reference.\n\n\n\n\n\nSupport: Core",
											"type": "string",
											"maxLength": 63,
											"minLength": 1,
											"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
										},
										"port": {
											"description": "Port is the network port this Route targets. It can be interpreted\ndifferently based on the type of parent resource.\n\n\nWhen the parent resource is a Gateway, this targets all listeners\nlistening on the specified port that also support this kind of Route(and\nselect this Route). It's not recommended to set `Port` unless the\nnetworking behaviors specified in a Route must apply to a specific port\nas opposed to a listener(s) whose port(s) may be changed. When both Port\nand SectionName are specified, the name and port of the selected listener\nmust match both specified values.\n\n\n\n\n\nImplementations MAY choose to support other parent resources.\nImplementations supporting other types of parent resources MUST clearly\ndocument how/if Port is interpreted.\n\n\nFor the purpose of status, an attachment is considered successful as\nlong as the parent resource accepts it partially. For example, Gateway\nlisteners can restrict which Routes can attach to them by Route kind,\nnamespace, or hostname. If 1 of 2 Gateway listeners accept attachment\nfrom the referencing Route, the Route MUST be considered successfully\nattached. If no Gateway listeners accept attachment from this Route,\nthe Route MUST be considered detached from the Gateway.\n\n\nSupport: Extended",
											"type": "integer",
											"format": "int32",
											"maximum": 65535,
											"minimum": 1
										},
										"sectionName": {
											"description": "SectionName is the name of a section within the target resource. In the\nfollowing resources, SectionName is interpreted as the following:\n\n\n* Gateway: Listener name. When both Port (experimental) and SectionName\nare specified, the name and port of the selected listener must match\nboth specified values.\n* Service: Port name. When both Port (experimental) and SectionName\nare specified, the name and port of the selected listener must match\nboth specified values.\n\n\nImplementations MAY choose to support attaching Routes to other resources.\nIf that is the case, they MUST clearly document how SectionName is\ninterpreted.\n\n\nWhen unspecified (empty string), this will reference the entire resource.\nFor the purpose of status, an attachment is considered successful if at\nleast one section in the parent resource accepts it. For example, Gateway\nlisteners can restrict which Routes can attach to them by Route kind,\nnamespace, or hostname. If 1 of 2 Gateway listeners accept attachment from\nthe referencing Route, the Route MUST be considered successfully\nattached. If no Gateway listeners accept attachment from this Route, the\nRoute MUST be considered detached from the Gateway.\n\n\nSupport: Core",
											"type": "string",
											"maxLength": 253,
											"minLength": 1,
											"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
										}
									}
								},
								"x-kubernetes-validations": [
									{
										"rule": "self.all(p1, self.all(p2, p1.group == p2.group && p1.kind == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__) || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) && has(p2.__namespace__) && p1.__namespace__ == p2.__namespace__ )) ? ((!has(p1.sectionName) || p1.sectionName == '') == (!has(p2.sectionName) || p2.sectionName == '')) : true))",
										"message": "sectionName must be specified when parentRefs includes 2 or more references to the same parent"
									},
									{
										"rule": "self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__) || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) && has(p2.__namespace__) && p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName) || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName == '')) || (has(p1.sectionName) && has(p2.sectionName) && p1.sectionName == p2.sectionName))))",
										"message": "sectionName must be unique when parentRefs includes 2 or more references to the same parent"
									}
								]
							},
							"rules": {
								"description": "Rules are a list of HTTP matchers, filters and actions.",
								"type": "array",
								"default": [
									{
										"matches": [
											{
												"path": {
													"type": "PathPrefix",
													"value": "/"
												}
											}
										]
									}
								],
								"maxItems": 16,
								"items": {
									"description": "HTTPRouteRule defines semantics for matching an HTTP request based on\nconditions (matches), processing it (filters), and forwarding the request to\nan API object (backendRefs).",
									"type": "object",
									"properties": {
										"backendRefs": {
											"description": "BackendRefs defines the backend(s) where matching requests should be\nsent.\n\n\nFailure behavior here depends on how many BackendRefs are specified and\nhow many are invalid.\n\n\nIf *all* entries in BackendRefs are invalid, and there are also no filters\nspecified in this route rule, *all* traffic which matches this rule MUST\nreceive a 500 status code.\n\n\nSee the HTTPBackendRef definition for the rules about what makes a single\nHTTPBackendRef invalid.\n\n\nWhen a HTTPBackendRef is invalid, 500 status codes MUST be returned for\nrequests that would have otherwise been routed to an invalid backend. If\nmultiple backends are specified, and some are invalid, the proportion of\nrequests that would otherwise have been routed to an invalid backend\nMUST receive a 500 status code.\n\n\nFor example, if two backends are specified with equal weights, and one is\ninvalid, 50 percent of traffic must receive a 500. Implementations may\nchoose how that 50 percent is determined.\n\n\nSupport: Core for Kubernetes Service\n\n\nSupport: Extended for Kubernetes ServiceImport\n\n\nSupport: Implementation-specific for any other resource\n\n\nSupport for weight: Core",
											"type": "array",
											"maxItems": 16,
											"items": {
												"description": "HTTPBackendRef defines how a HTTPRoute forwards a HTTP request.\n\n\nNote that when a namespace different than the local namespace is specified, a\nReferenceGrant object is required in the referent namespace to allow that\nnamespace's owner to accept the reference. See the ReferenceGrant\ndocumentation for details.\n\n\n<gateway:experimental:description>\n\n\nWhen the BackendRef points to a Kubernetes Service, implementations SHOULD\nhonor the appProtocol field if it is set for the target Service Port.\n\n\nImplementations supporting appProtocol SHOULD recognize the Kubernetes\nStandard Application Protocols defined in KEP-3726.\n\n\nIf a Service appProtocol isn't specified, an implementation MAY infer the\nbackend protocol through its own means. Implementations MAY infer the\nprotocol from the Route type referring to the backend Service.\n\n\nIf a Route is not able to send traffic to the backend using the specified\nprotocol then the backend is considered invalid. Implementations MUST set the\n\"ResolvedRefs\" condition to \"False\" with the \"UnsupportedProtocol\" reason.\n\n\n</gateway:experimental:description>",
												"type": "object",
												"required": [
													"name"
												],
												"properties": {
													"filters": {
														"description": "Filters defined at this level should be executed if and only if the\nrequest is being forwarded to the backend defined here.\n\n\nSupport: Implementation-specific (For broader support of filters, use the\nFilters field in HTTPRouteRule.)",
														"type": "array",
														"maxItems": 16,
														"items": {
															"description": "HTTPRouteFilter defines processing steps that must be completed during the\nrequest or response lifecycle. HTTPRouteFilters are meant as an extension\npoint to express processing that may be done in Gateway implementations. Some\nexamples include request or response modification, implementing\nauthentication strategies, rate-limiting, and traffic shaping. API\nguarantee/conformance is defined based on the type of the filter.",
															"type": "object",
															"required": [
																"type"
															],
															"properties": {
																"extensionRef": {
																	"description": "ExtensionRef is an optional, implementation-specific extension to the\n\"filter\" behavior.  For example, resource \"myroutefilter\" in group\n\"networking.example.net\"). ExtensionRef MUST NOT be used for core and\nextended filters.\n\n\nThis filter can be used multiple times within the same rule.\n\n\nSupport: Implementation-specific",
																	"type": "object",
																	"required": [
																		"group",
																		"kind",
																		"name"
																	],
																	"properties": {
																		"group": {
																			"description": "Group is the group of the referent. For example, \"gateway.networking.k8s.io\".\nWhen unspecified or empty string, core API group is inferred.",
																			"type": "string",
																			"maxLength": 253,
																			"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
																		},
																		"kind": {
																			"description": "Kind is kind of the referent. For example \"HTTPRoute\" or \"Service\".",
																			"type": "string",
																			"maxLength": 63,
																			"minLength": 1,
																			"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
																		},
																		"name": {
																			"description": "Name is the name of the referent.",
																			"type": "string",
																			"maxLength": 253,
																			"minLength": 1
																		}
																	}
																},
																"requestHeaderModifier": {
																	"description": "RequestHeaderModifier defines a schema for a filter that modifies request\nheaders.\n\n\nSupport: Core",
																	"type": "object",
																	"properties": {
																		"add": {
																			"description": "Add adds the given header(s) (name, value) to the request\nbefore the action. It appends to any existing values associated\nwith the header name.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  add:\n  - name: \"my-header\"\n    value: \"bar,baz\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: foo,bar,baz",
																			"type": "array",
																			"maxItems": 16,
																			"items": {
																				"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																				"type": "object",
																				"required": [
																					"name",
																					"value"
																				],
																				"properties": {
																					"name": {
																						"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																						"type": "string",
																						"maxLength": 256,
																						"minLength": 1,
																						"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																					},
																					"value": {
																						"description": "Value is the value of HTTP Header to be matched.",
																						"type": "string",
																						"maxLength": 4096,
																						"minLength": 1
																					}
																				}
																			},
																			"x-kubernetes-list-map-keys": [
																				"name"
																			],
																			"x-kubernetes-list-type": "map"
																		},
																		"remove": {
																			"description": "Remove the given header(s) from the HTTP request before the action. The\nvalue of Remove is a list of HTTP header names. Note that the header\nnames are case-insensitive (see\nhttps://datatracker.ietf.org/doc/html/rfc2616#section-4.2).\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header1: foo\n  my-header2: bar\n  my-header3: baz\n\n\nConfig:\n  remove: [\"my-header1\", \"my-header3\"]\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header2: bar",
																			"type": "array",
																			"maxItems": 16,
																			"items": {
																				"type": "string"
																			},
																			"x-kubernetes-list-type": "set"
																		},
																		"set": {
																			"description": "Set overwrites the request with the given header (name, value)\nbefore the action.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  set:\n  - name: \"my-header\"\n    value: \"bar\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: bar",
																			"type": "array",
																			"maxItems": 16,
																			"items": {
																				"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																				"type": "object",
																				"required": [
																					"name",
																					"value"
																				],
																				"properties": {
																					"name": {
																						"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																						"type": "string",
																						"maxLength": 256,
																						"minLength": 1,
																						"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																					},
																					"value": {
																						"description": "Value is the value of HTTP Header to be matched.",
																						"type": "string",
																						"maxLength": 4096,
																						"minLength": 1
																					}
																				}
																			},
																			"x-kubernetes-list-map-keys": [
																				"name"
																			],
																			"x-kubernetes-list-type": "map"
																		}
																	}
																},
																"requestMirror": {
																	"description": "RequestMirror defines a schema for a filter that mirrors requests.\nRequests are sent to the specified destination, but responses from\nthat destination are ignored.\n\n\nThis filter can be used multiple times within the same rule. Note that\nnot all implementations will be able to support mirroring to multiple\nbackends.\n\n\nSupport: Extended",
																	"type": "object",
																	"required": [
																		"backendRef"
																	],
																	"properties": {
																		"backendRef": {
																			"description": "BackendRef references a resource where mirrored requests are sent.\n\n\nMirrored requests must be sent only to a single destination endpoint\nwithin this BackendRef, irrespective of how many endpoints are present\nwithin this BackendRef.\n\n\nIf the referent cannot be found, this BackendRef is invalid and must be\ndropped from the Gateway. The controller must ensure the \"ResolvedRefs\"\ncondition on the Route status is set to `status: False` and not configure\nthis backend in the underlying implementation.\n\n\nIf there is a cross-namespace reference to an *existing* object\nthat is not allowed by a ReferenceGrant, the controller must ensure the\n\"ResolvedRefs\"  condition on the Route is set to `status: False`,\nwith the \"RefNotPermitted\" reason and not configure this backend in the\nunderlying implementation.\n\n\nIn either error case, the Message of the `ResolvedRefs` Condition\nshould be used to provide more detail about the problem.\n\n\nSupport: Extended for Kubernetes Service\n\n\nSupport: Implementation-specific for any other resource",
																			"type": "object",
																			"required": [
																				"name"
																			],
																			"properties": {
																				"group": {
																					"description": "Group is the group of the referent. For example, \"gateway.networking.k8s.io\".\nWhen unspecified or empty string, core API group is inferred.",
																					"type": "string",
																					"default": "",
																					"maxLength": 253,
																					"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
																				},
																				"kind": {
																					"description": "Kind is the Kubernetes resource kind of the referent. For example\n\"Service\".\n\n\nDefaults to \"Service\" when not specified.\n\n\nExternalName services can refer to CNAME DNS records that may live\noutside of the cluster and as such are difficult to reason about in\nterms of conformance. They also may not be safe to forward to (see\nCVE-2021-25740 for more information). Implementations SHOULD NOT\nsupport ExternalName Services.\n\n\nSupport: Core (Services with a type other than ExternalName)\n\n\nSupport: Implementation-specific (Services with type ExternalName)",
																					"type": "string",
																					"default": "Service",
																					"maxLength": 63,
																					"minLength": 1,
																					"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
																				},
																				"name": {
																					"description": "Name is the name of the referent.",
																					"type": "string",
																					"maxLength": 253,
																					"minLength": 1
																				},
																				"namespace": {
																					"description": "Namespace is the namespace of the backend. When unspecified, the local\nnamespace is inferred.\n\n\nNote that when a namespace different than the local namespace is specified,\na ReferenceGrant object is required in the referent namespace to allow that\nnamespace's owner to accept the reference. See the ReferenceGrant\ndocumentation for details.\n\n\nSupport: Core",
																					"type": "string",
																					"maxLength": 63,
																					"minLength": 1,
																					"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
																				},
																				"port": {
																					"description": "Port specifies the destination port number to use for this resource.\nPort is required when the referent is a Kubernetes Service. In this\ncase, the port number is the service port number, not the target port.\nFor other resources, destination port might be derived from the referent\nresource or this field.",
																					"type": "integer",
																					"format": "int32",
																					"maximum": 65535,
																					"minimum": 1
																				}
																			},
																			"x-kubernetes-validations": [
																				{
																					"rule": "(size(self.group) == 0 && self.kind == 'Service') ? has(self.port) : true",
																					"message": "Must have port for Service reference"
																				}
																			]
																		}
																	}
																},
																"requestRedirect": {
																	"description": "RequestRedirect defines a schema for a filter that responds to the\nrequest with an HTTP redirection.\n\n\nSupport: Core",
																	"type": "object",
																	"properties": {
																		"hostname": {
																			"description": "Hostname is the hostname to be used in the value of the `Location`\nheader in the response.\nWhen empty, the hostname in the `Host` header of the request is used.\n\n\nSupport: Core",
																			"type": "string",
																			"maxLength": 253,
																			"minLength": 1,
																			"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
																		},
																		"path": {
																			"description": "Path defines parameters used to modify the path of the incoming request.\nThe modified path is then used to construct the `Location` header. When\nempty, the request path is used as-is.\n\n\nSupport: Extended",
																			"type": "object",
																			"required": [
																				"type"
																			],
																			"properties": {
																				"replaceFullPath": {
																					"description": "ReplaceFullPath specifies the value with which to replace the full path\nof a request during a rewrite or redirect.",
																					"type": "string",
																					"maxLength": 1024
																				},
																				"replacePrefixMatch": {
																					"description": "ReplacePrefixMatch specifies the value with which to replace the prefix\nmatch of a request during a rewrite or redirect. For example, a request\nto \"/foo/bar\" with a prefix match of \"/foo\" and a ReplacePrefixMatch\nof \"/xyz\" would be modified to \"/xyz/bar\".\n\n\nNote that this matches the behavior of the PathPrefix match type. This\nmatches full path elements. A path element refers to the list of labels\nin the path split by the `/` separator. When specified, a trailing `/` is\nignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all\nmatch the prefix `/abc`, but the path `/abcd` would not.\n\n\nReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.\nUsing any other HTTPRouteMatch type on the same HTTPRouteRule will result in\nthe implementation setting the Accepted Condition for the Route to `status: False`.\n\n\nRequest Path | Prefix Match | Replace Prefix | Modified Path\n-------------|--------------|----------------|----------\n/foo/bar     | /foo         | /xyz           | /xyz/bar\n/foo/bar     | /foo         | /xyz/          | /xyz/bar\n/foo/bar     | /foo/        | /xyz           | /xyz/bar\n/foo/bar     | /foo/        | /xyz/          | /xyz/bar\n/foo         | /foo         | /xyz           | /xyz\n/foo/        | /foo         | /xyz           | /xyz/\n/foo/bar     | /foo         | <empty string> | /bar\n/foo/        | /foo         | <empty string> | /\n/foo         | /foo         | <empty string> | /\n/foo/        | /foo         | /              | /\n/foo         | /foo         | /              | /",
																					"type": "string",
																					"maxLength": 1024
																				},
																				"type": {
																					"description": "Type defines the type of path modifier. Additional types may be\nadded in a future release of the API.\n\n\nNote that values may be added to this enum, implementations\nmust ensure that unknown values will not cause a crash.\n\n\nUnknown values here must result in the implementation setting the\nAccepted Condition for the Route to `status: False`, with a\nReason of `UnsupportedValue`.",
																					"type": "string",
																					"enum": [
																						"ReplaceFullPath",
																						"ReplacePrefixMatch"
																					]
																				}
																			},
																			"x-kubernetes-validations": [
																				{
																					"rule": "self.type == 'ReplaceFullPath' ? has(self.replaceFullPath) : true",
																					"message": "replaceFullPath must be specified when type is set to 'ReplaceFullPath'"
																				},
																				{
																					"rule": "has(self.replaceFullPath) ? self.type == 'ReplaceFullPath' : true",
																					"message": "type must be 'ReplaceFullPath' when replaceFullPath is set"
																				},
																				{
																					"rule": "self.type == 'ReplacePrefixMatch' ? has(self.replacePrefixMatch) : true",
																					"message": "replacePrefixMatch must be specified when type is set to 'ReplacePrefixMatch'"
																				},
																				{
																					"rule": "has(self.replacePrefixMatch) ? self.type == 'ReplacePrefixMatch' : true",
																					"message": "type must be 'ReplacePrefixMatch' when replacePrefixMatch is set"
																				}
																			]
																		},
																		"port": {
																			"description": "Port is the port to be used in the value of the `Location`\nheader in the response.\n\n\nIf no port is specified, the redirect port MUST be derived using the\nfollowing rules:\n\n\n* If redirect scheme is not-empty, the redirect port MUST be the well-known\n  port associated with the redirect scheme. Specifically \"http\" to port 80\n  and \"https\" to port 443. If the redirect scheme does not have a\n  well-known port, the listener port of the Gateway SHOULD be used.\n* If redirect scheme is empty, the redirect port MUST be the Gateway\n  Listener port.\n\n\nImplementations SHOULD NOT add the port number in the 'Location'\nheader in the following cases:\n\n\n* A Location header that will use HTTP (whether that is determined via\n  the Listener protocol or the Scheme field) _and_ use port 80.\n* A Location header that will use HTTPS (whether that is determined via\n  the Listener protocol or the Scheme field) _and_ use port 443.\n\n\nSupport: Extended",
																			"type": "integer",
																			"format": "int32",
																			"maximum": 65535,
																			"minimum": 1
																		},
																		"scheme": {
																			"description": "Scheme is the scheme to be used in the value of the `Location` header in\nthe response. When empty, the scheme of the request is used.\n\n\nScheme redirects can affect the port of the redirect, for more information,\nrefer to the documentation for the port field of this filter.\n\n\nNote that values may be added to this enum, implementations\nmust ensure that unknown values will not cause a crash.\n\n\nUnknown values here must result in the implementation setting the\nAccepted Condition for the Route to `status: False`, with a\nReason of `UnsupportedValue`.\n\n\nSupport: Extended",
																			"type": "string",
																			"enum": [
																				"http",
																				"https"
																			]
																		},
																		"statusCode": {
																			"description": "StatusCode is the HTTP status code to be used in response.\n\n\nNote that values may be added to this enum, implementations\nmust ensure that unknown values will not cause a crash.\n\n\nUnknown values here must result in the implementation setting the\nAccepted Condition for the Route to `status: False`, with a\nReason of `UnsupportedValue`.\n\n\nSupport: Core",
																			"type": "integer",
																			"default": 302,
																			"enum": [
																				301,
																				302
																			]
																		}
																	}
																},
																"responseHeaderModifier": {
																	"description": "ResponseHeaderModifier defines a schema for a filter that modifies response\nheaders.\n\n\nSupport: Extended",
																	"type": "object",
																	"properties": {
																		"add": {
																			"description": "Add adds the given header(s) (name, value) to the request\nbefore the action. It appends to any existing values associated\nwith the header name.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  add:\n  - name: \"my-header\"\n    value: \"bar,baz\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: foo,bar,baz",
																			"type": "array",
																			"maxItems": 16,
																			"items": {
																				"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																				"type": "object",
																				"required": [
																					"name",
																					"value"
																				],
																				"properties": {
																					"name": {
																						"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																						"type": "string",
																						"maxLength": 256,
																						"minLength": 1,
																						"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																					},
																					"value": {
																						"description": "Value is the value of HTTP Header to be matched.",
																						"type": "string",
																						"maxLength": 4096,
																						"minLength": 1
																					}
																				}
																			},
																			"x-kubernetes-list-map-keys": [
																				"name"
																			],
																			"x-kubernetes-list-type": "map"
																		},
																		"remove": {
																			"description": "Remove the given header(s) from the HTTP request before the action. The\nvalue of Remove is a list of HTTP header names. Note that the header\nnames are case-insensitive (see\nhttps://datatracker.ietf.org/doc/html/rfc2616#section-4.2).\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header1: foo\n  my-header2: bar\n  my-header3: baz\n\n\nConfig:\n  remove: [\"my-header1\", \"my-header3\"]\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header2: bar",
																			"type": "array",
																			"maxItems": 16,
																			"items": {
																				"type": "string"
																			},
																			"x-kubernetes-list-type": "set"
																		},
																		"set": {
																			"description": "Set overwrites the request with the given header (name, value)\nbefore the action.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  set:\n  - name: \"my-header\"\n    value: \"bar\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: bar",
																			"type": "array",
																			"maxItems": 16,
																			"items": {
																				"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																				"type": "object",
																				"required": [
																					"name",
																					"value"
																				],
																				"properties": {
																					"name": {
																						"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																						"type": "string",
																						"maxLength": 256,
																						"minLength": 1,
																						"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																					},
																					"value": {
																						"description": "Value is the value of HTTP Header to be matched.",
																						"type": "string",
																						"maxLength": 4096,
																						"minLength": 1
																					}
																				}
																			},
																			"x-kubernetes-list-map-keys": [
																				"name"
																			],
																			"x-kubernetes-list-type": "map"
																		}
																	}
																},
																"type": {
																	"description": "Type identifies the type of filter to apply. As with other API fields,\ntypes are classified into three conformance levels:\n\n\n- Core: Filter types and their corresponding configuration defined by\n  \"Support: Core\" in this package, e.g. \"RequestHeaderModifier\". All\n  implementations must support core filters.\n\n\n- Extended: Filter types and their corresponding configuration defined by\n  \"Support: Extended\" in this package, e.g. \"RequestMirror\". Implementers\n  are encouraged to support extended filters.\n\n\n- Implementation-specific: Filters that are defined and supported by\n  specific vendors.\n  In the future, filters showing convergence in behavior across multiple\n  implementations will be considered for inclusion in extended or core\n  conformance levels. Filter-specific configuration for such filters\n  is specified using the ExtensionRef field. `Type` should be set to\n  \"ExtensionRef\" for custom filters.\n\n\nImplementers are encouraged to define custom implementation types to\nextend the core API with implementation-specific behavior.\n\n\nIf a reference to a custom filter type cannot be resolved, the filter\nMUST NOT be skipped. Instead, requests that would have been processed by\nthat filter MUST receive a HTTP error response.\n\n\nNote that values may be added to this enum, implementations\nmust ensure that unknown values will not cause a crash.\n\n\nUnknown values here must result in the implementation setting the\nAccepted Condition for the Route to `status: False`, with a\nReason of `UnsupportedValue`.",
																	"type": "string",
																	"enum": [
																		"RequestHeaderModifier",
																		"ResponseHeaderModifier",
																		"RequestMirror",
																		"RequestRedirect",
																		"URLRewrite",
																		"ExtensionRef"
																	]
																},
																"urlRewrite": {
																	"description": "URLRewrite defines a schema for a filter that modifies a request during forwarding.\n\n\nSupport: Extended",
																	"type": "object",
																	"properties": {
																		"hostname": {
																			"description": "Hostname is the value to be used to replace the Host header value during\nforwarding.\n\n\nSupport: Extended",
																			"type": "string",
																			"maxLength": 253,
																			"minLength": 1,
																			"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
																		},
																		"path": {
																			"description": "Path defines a path rewrite.\n\n\nSupport: Extended",
																			"type": "object",
																			"required": [
																				"type"
																			],
																			"properties": {
																				"replaceFullPath": {
																					"description": "ReplaceFullPath specifies the value with which to replace the full path\nof a request during a rewrite or redirect.",
																					"type": "string",
																					"maxLength": 1024
																				},
																				"replacePrefixMatch": {
																					"description": "ReplacePrefixMatch specifies the value with which to replace the prefix\nmatch of a request during a rewrite or redirect. For example, a request\nto \"/foo/bar\" with a prefix match of \"/foo\" and a ReplacePrefixMatch\nof \"/xyz\" would be modified to \"/xyz/bar\".\n\n\nNote that this matches the behavior of the PathPrefix match type. This\nmatches full path elements. A path element refers to the list of labels\nin the path split by the `/` separator. When specified, a trailing `/` is\nignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all\nmatch the prefix `/abc`, but the path `/abcd` would not.\n\n\nReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.\nUsing any other HTTPRouteMatch type on the same HTTPRouteRule will result in\nthe implementation setting the Accepted Condition for the Route to `status: False`.\n\n\nRequest Path | Prefix Match | Replace Prefix | Modified Path\n-------------|--------------|----------------|----------\n/foo/bar     | /foo         | /xyz           | /xyz/bar\n/foo/bar     | /foo         | /xyz/          | /xyz/bar\n/foo/bar     | /foo/        | /xyz           | /xyz/bar\n/foo/bar     | /foo/        | /xyz/          | /xyz/bar\n/foo         | /foo         | /xyz           | /xyz\n/foo/        | /foo         | /xyz           | /xyz/\n/foo/bar     | /foo         | <empty string> | /bar\n/foo/        | /foo         | <empty string> | /\n/foo         | /foo         | <empty string> | /\n/foo/        | /foo         | /              | /\n/foo         | /foo         | /              | /",
																					"type": "string",
																					"maxLength": 1024
																				},
																				"type": {
																					"description": "Type defines the type of path modifier. Additional types may be\nadded in a future release of the API.\n\n\nNote that values may be added to this enum, implementations\nmust ensure that unknown values will not cause a crash.\n\n\nUnknown values here must result in the implementation setting the\nAccepted Condition for the Route to `status: False`, with a\nReason of `UnsupportedValue`.",
																					"type": "string",
																					"enum": [
																						"ReplaceFullPath",
																						"ReplacePrefixMatch"
																					]
																				}
																			},
																			"x-kubernetes-validations": [
																				{
																					"rule": "self.type == 'ReplaceFullPath' ? has(self.replaceFullPath) : true",
																					"message": "replaceFullPath must be specified when type is set to 'ReplaceFullPath'"
																				},
																				{
																					"rule": "has(self.replaceFullPath) ? self.type == 'ReplaceFullPath' : true",
																					"message": "type must be 'ReplaceFullPath' when replaceFullPath is set"
																				},
																				{
																					"rule": "self.type == 'ReplacePrefixMatch' ? has(self.replacePrefixMatch) : true",
																					"message": "replacePrefixMatch must be specified when type is set to 'ReplacePrefixMatch'"
																				},
																				{
																					"rule": "has(self.replacePrefixMatch) ? self.type == 'ReplacePrefixMatch' : true",
																					"message": "type must be 'ReplacePrefixMatch' when replacePrefixMatch is set"
																				}
																			]
																		}
																	}
																}
															},
															"x-kubernetes-validations": [
																{
																	"rule": "!(has(self.requestHeaderModifier) && self.type != 'RequestHeaderModifier')",
																	"message": "filter.requestHeaderModifier must be nil if the filter.type is not RequestHeaderModifier"
																},
																{
																	"rule": "!(!has(self.requestHeaderModifier) && self.type == 'RequestHeaderModifier')",
																	"message": "filter.requestHeaderModifier must be specified for RequestHeaderModifier filter.type"
																},
																{
																	"rule": "!(has(self.responseHeaderModifier) && self.type != 'ResponseHeaderModifier')",
																	"message": "filter.responseHeaderModifier must be nil if the filter.type is not ResponseHeaderModifier"
																},
																{
																	"rule": "!(!has(self.responseHeaderModifier) && self.type == 'ResponseHeaderModifier')",
																	"message": "filter.responseHeaderModifier must be specified for ResponseHeaderModifier filter.type"
																},
																{
																	"rule": "!(has(self.requestMirror) && self.type != 'RequestMirror')",
																	"message": "filter.requestMirror must be nil if the filter.type is not RequestMirror"
																},
																{
																	"rule": "!(!has(self.requestMirror) && self.type == 'RequestMirror')",
																	"message": "filter.requestMirror must be specified for RequestMirror filter.type"
																},
																{
																	"rule": "!(has(self.requestRedirect) && self.type != 'RequestRedirect')",
																	"message": "filter.requestRedirect must be nil if the filter.type is not RequestRedirect"
																},
																{
																	"rule": "!(!has(self.requestRedirect) && self.type == 'RequestRedirect')",
																	"message": "filter.requestRedirect must be specified for RequestRedirect filter.type"
																},
																{
																	"rule": "!(has(self.urlRewrite) && self.type != 'URLRewrite')",
																	"message": "filter.urlRewrite must be nil if the filter.type is not URLRewrite"
																},
																{
																	"rule": "!(!has(self.urlRewrite) && self.type == 'URLRewrite')",
																	"message": "filter.urlRewrite must be specified for URLRewrite filter.type"
																},
																{
																	"rule": "!(has(self.extensionRef) && self.type != 'ExtensionRef')",
																	"message": "filter.extensionRef must be nil if the filter.type is not ExtensionRef"
																},
																{
																	"rule": "!(!has(self.extensionRef) && self.type == 'ExtensionRef')",
																	"message": "filter.extensionRef must be specified for ExtensionRef filter.type"
																}
															]
														},
														"x-kubernetes-validations": [
															{
																"rule": "!(self.exists(f, f.type == 'RequestRedirect') && self.exists(f, f.type == 'URLRewrite'))",
																"message": "May specify either httpRouteFilterRequestRedirect or httpRouteFilterRequestRewrite, but not both"
															},
															{
																"rule": "!(self.exists(f, f.type == 'RequestRedirect') && self.exists(f, f.type == 'URLRewrite'))",
																"message": "May specify either httpRouteFilterRequestRedirect or httpRouteFilterRequestRewrite, but not both"
															},
															{
																"rule": "self.filter(f, f.type == 'RequestHeaderModifier').size() <= 1",
																"message": "RequestHeaderModifier filter cannot be repeated"
															},
															{
																"rule": "self.filter(f, f.type == 'ResponseHeaderModifier').size() <= 1",
																"message": "ResponseHeaderModifier filter cannot be repeated"
															},
															{
																"rule": "self.filter(f, f.type == 'RequestRedirect').size() <= 1",
																"message": "RequestRedirect filter cannot be repeated"
															},
															{
																"rule": "self.filter(f, f.type == 'URLRewrite').size() <= 1",
																"message": "URLRewrite filter cannot be repeated"
															}
														]
													},
													"group": {
														"description": "Group is the group of the referent. For example, \"gateway.networking.k8s.io\".\nWhen unspecified or empty string, core API group is inferred.",
														"type": "string",
														"default": "",
														"maxLength": 253,
														"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
													},
													"kind": {
														"description": "Kind is the Kubernetes resource kind of the referent. For example\n\"Service\".\n\n\nDefaults to \"Service\" when not specified.\n\n\nExternalName services can refer to CNAME DNS records that may live\noutside of the cluster and as such are difficult to reason about in\nterms of conformance. They also may not be safe to forward to (see\nCVE-2021-25740 for more information). Implementations SHOULD NOT\nsupport ExternalName Services.\n\n\nSupport: Core (Services with a type other than ExternalName)\n\n\nSupport: Implementation-specific (Services with type ExternalName)",
														"type": "string",
														"default": "Service",
														"maxLength": 63,
														"minLength": 1,
														"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
													},
													"name": {
														"description": "Name is the name of the referent.",
														"type": "string",
														"maxLength": 253,
														"minLength": 1
													},
													"namespace": {
														"description": "Namespace is the namespace of the backend. When unspecified, the local\nnamespace is inferred.\n\n\nNote that when a namespace different than the local namespace is specified,\na ReferenceGrant object is required in the referent namespace to allow that\nnamespace's owner to accept the reference. See the ReferenceGrant\ndocumentation for details.\n\n\nSupport: Core",
														"type": "string",
														"maxLength": 63,
														"minLength": 1,
														"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
													},
													"port": {
														"description": "Port specifies the destination port number to use for this resource.\nPort is required when the referent is a Kubernetes Service. In this\ncase, the port number is the service port number, not the target port.\nFor other resources, destination port might be derived from the referent\nresource or this field.",
														"type": "integer",
														"format": "int32",
														"maximum": 65535,
														"minimum": 1
													},
													"weight": {
														"description": "Weight specifies the proportion of requests forwarded to the referenced\nbackend. This is computed as weight/(sum of all weights in this\nBackendRefs list). For non-zero values, there may be some epsilon from\nthe exact proportion defined here depending on the precision an\nimplementation supports. Weight is not a percentage and the sum of\nweights does not need to equal 100.\n\n\nIf only one backend is specified and it has a weight greater than 0, 100%\nof the traffic is forwarded to that backend. If weight is set to 0, no\ntraffic should be forwarded for this entry. If unspecified, weight\ndefaults to 1.\n\n\nSupport for this field varies based on the context where used.",
														"type": "integer",
														"format": "int32",
														"default": 1,
														"maximum": 1000000,
														"minimum": 0
													}
												},
												"x-kubernetes-validations": [
													{
														"rule": "(size(self.group) == 0 && self.kind == 'Service') ? has(self.port) : true",
														"message": "Must have port for Service reference"
													}
												]
											}
										},
										"filters": {
											"description": "Filters define the filters that are applied to requests that match\nthis rule.\n\n\nWherever possible, implementations SHOULD implement filters in the order\nthey are specified.\n\n\nImplementations MAY choose to implement this ordering strictly, rejecting\nany combination or order of filters that can not be supported. If implementations\nchoose a strict interpretation of filter ordering, they MUST clearly document\nthat behavior.\n\n\nTo reject an invalid combination or order of filters, implementations SHOULD\nconsider the Route Rules with this configuration invalid. If all Route Rules\nin a Route are invalid, the entire Route would be considered invalid. If only\na portion of Route Rules are invalid, implementations MUST set the\n\"PartiallyInvalid\" condition for the Route.\n\n\nConformance-levels at this level are defined based on the type of filter:\n\n\n- ALL core filters MUST be supported by all implementations.\n- Implementers are encouraged to support extended filters.\n- Implementation-specific custom filters have no API guarantees across\n  implementations.\n\n\nSpecifying the same filter multiple times is not supported unless explicitly\nindicated in the filter.\n\n\nAll filters are expected to be compatible with each other except for the\nURLRewrite and RequestRedirect filters, which may not be combined. If an\nimplementation can not support other combinations of filters, they must clearly\ndocument that limitation. In cases where incompatible or unsupported\nfilters are specified and cause the `Accepted` condition to be set to status\n`False`, implementations may use the `IncompatibleFilters` reason to specify\nthis configuration error.\n\n\nSupport: Core",
											"type": "array",
											"maxItems": 16,
											"items": {
												"description": "HTTPRouteFilter defines processing steps that must be completed during the\nrequest or response lifecycle. HTTPRouteFilters are meant as an extension\npoint to express processing that may be done in Gateway implementations. Some\nexamples include request or response modification, implementing\nauthentication strategies, rate-limiting, and traffic shaping. API\nguarantee/conformance is defined based on the type of the filter.",
												"type": "object",
												"required": [
													"type"
												],
												"properties": {
													"extensionRef": {
														"description": "ExtensionRef is an optional, implementation-specific extension to the\n\"filter\" behavior.  For example, resource \"myroutefilter\" in group\n\"networking.example.net\"). ExtensionRef MUST NOT be used for core and\nextended filters.\n\n\nThis filter can be used multiple times within the same rule.\n\n\nSupport: Implementation-specific",
														"type": "object",
														"required": [
															"group",
															"kind",
															"name"
														],
														"properties": {
															"group": {
																"description": "Group is the group of the referent. For example, \"gateway.networking.k8s.io\".\nWhen unspecified or empty string, core API group is inferred.",
																"type": "string",
																"maxLength": 253,
																"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
															},
															"kind": {
																"description": "Kind is kind of the referent. For example \"HTTPRoute\" or \"Service\".",
																"type": "string",
																"maxLength": 63,
																"minLength": 1,
																"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
															},
															"name": {
																"description": "Name is the name of the referent.",
																"type": "string",
																"maxLength": 253,
																"minLength": 1
															}
														}
													},
													"requestHeaderModifier": {
														"description": "RequestHeaderModifier defines a schema for a filter that modifies request\nheaders.\n\n\nSupport: Core",
														"type": "object",
														"properties": {
															"add": {
																"description": "Add adds the given header(s) (name, value) to the request\nbefore the action. It appends to any existing values associated\nwith the header name.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  add:\n  - name: \"my-header\"\n    value: \"bar,baz\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: foo,bar,baz",
																"type": "array",
																"maxItems": 16,
																"items": {
																	"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																	"type": "object",
																	"required": [
																		"name",
																		"value"
																	],
																	"properties": {
																		"name": {
																			"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																			"type": "string",
																			"maxLength": 256,
																			"minLength": 1,
																			"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																		},
																		"value": {
																			"description": "Value is the value of HTTP Header to be matched.",
																			"type": "string",
																			"maxLength": 4096,
																			"minLength": 1
																		}
																	}
																},
																"x-kubernetes-list-map-keys": [
																	"name"
																],
																"x-kubernetes-list-type": "map"
															},
															"remove": {
																"description": "Remove the given header(s) from the HTTP request before the action. The\nvalue of Remove is a list of HTTP header names. Note that the header\nnames are case-insensitive (see\nhttps://datatracker.ietf.org/doc/html/rfc2616#section-4.2).\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header1: foo\n  my-header2: bar\n  my-header3: baz\n\n\nConfig:\n  remove: [\"my-header1\", \"my-header3\"]\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header2: bar",
																"type": "array",
																"maxItems": 16,
																"items": {
																	"type": "string"
																},
																"x-kubernetes-list-type": "set"
															},
															"set": {
																"description": "Set overwrites the request with the given header (name, value)\nbefore the action.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  set:\n  - name: \"my-header\"\n    value: \"bar\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: bar",
																"type": "array",
																"maxItems": 16,
																"items": {
																	"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																	"type": "object",
																	"required": [
																		"name",
																		"value"
																	],
																	"properties": {
																		"name": {
																			"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																			"type": "string",
																			"maxLength": 256,
																			"minLength": 1,
																			"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																		},
																		"value": {
																			"description": "Value is the value of HTTP Header to be matched.",
																			"type": "string",
																			"maxLength": 4096,
																			"minLength": 1
																		}
																	}
																},
																"x-kubernetes-list-map-keys": [
																	"name"
																],
																"x-kubernetes-list-type": "map"
															}
														}
													},
													"requestMirror": {
														"description": "RequestMirror defines a schema for a filter that mirrors requests.\nRequests are sent to the specified destination, but responses from\nthat destination are ignored.\n\n\nThis filter can be used multiple times within the same rule. Note that\nnot all implementations will be able to support mirroring to multiple\nbackends.\n\n\nSupport: Extended",
														"type": "object",
														"required": [
															"backendRef"
														],
														"properties": {
															"backendRef": {
																"description": "BackendRef references a resource where mirrored requests are sent.\n\n\nMirrored requests must be sent only to a single destination endpoint\nwithin this BackendRef, irrespective of how many endpoints are present\nwithin this BackendRef.\n\n\nIf the referent cannot be found, this BackendRef is invalid and must be\ndropped from the Gateway. The controller must ensure the \"ResolvedRefs\"\ncondition on the Route status is set to `status: False` and not configure\nthis backend in the underlying implementation.\n\n\nIf there is a cross-namespace reference to an *existing* object\nthat is not allowed by a ReferenceGrant, the controller must ensure the\n\"ResolvedRefs\"  condition on the Route is set to `status: False`,\nwith the \"RefNotPermitted\" reason and not configure this backend in the\nunderlying implementation.\n\n\nIn either error case, the Message of the `ResolvedRefs` Condition\nshould be used to provide more detail about the problem.\n\n\nSupport: Extended for Kubernetes Service\n\n\nSupport: Implementation-specific for any other resource",
																"type": "object",
																"required": [
																	"name"
																],
																"properties": {
																	"group": {
																		"description": "Group is the group of the referent. For example, \"gateway.networking.k8s.io\".\nWhen unspecified or empty string, core API group is inferred.",
																		"type": "string",
																		"default": "",
																		"maxLength": 253,
																		"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
																	},
																	"kind": {
																		"description": "Kind is the Kubernetes resource kind of the referent. For example\n\"Service\".\n\n\nDefaults to \"Service\" when not specified.\n\n\nExternalName services can refer to CNAME DNS records that may live\noutside of the cluster and as such are difficult to reason about in\nterms of conformance. They also may not be safe to forward to (see\nCVE-2021-25740 for more information). Implementations SHOULD NOT\nsupport ExternalName Services.\n\n\nSupport: Core (Services with a type other than ExternalName)\n\n\nSupport: Implementation-specific (Services with type ExternalName)",
																		"type": "string",
																		"default": "Service",
																		"maxLength": 63,
																		"minLength": 1,
																		"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
																	},
																	"name": {
																		"description": "Name is the name of the referent.",
																		"type": "string",
																		"maxLength": 253,
																		"minLength": 1
																	},
																	"namespace": {
																		"description": "Namespace is the namespace of the backend. When unspecified, the local\nnamespace is inferred.\n\n\nNote that when a namespace different than the local namespace is specified,\na ReferenceGrant object is required in the referent namespace to allow that\nnamespace's owner to accept the reference. See the ReferenceGrant\ndocumentation for details.\n\n\nSupport: Core",
																		"type": "string",
																		"maxLength": 63,
																		"minLength": 1,
																		"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
																	},
																	"port": {
																		"description": "Port specifies the destination port number to use for this resource.\nPort is required when the referent is a Kubernetes Service. In this\ncase, the port number is the service port number, not the target port.\nFor other resources, destination port might be derived from the referent\nresource or this field.",
																		"type": "integer",
																		"format": "int32",
																		"maximum": 65535,
																		"minimum": 1
																	}
																},
																"x-kubernetes-validations": [
																	{
																		"rule": "(size(self.group) == 0 && self.kind == 'Service') ? has(self.port) : true",
																		"message": "Must have port for Service reference"
																	}
																]
															}
														}
													},
													"requestRedirect": {
														"description": "RequestRedirect defines a schema for a filter that responds to the\nrequest with an HTTP redirection.\n\n\nSupport: Core",
														"type": "object",
														"properties": {
															"hostname": {
																"description": "Hostname is the hostname to be used in the value of the `Location`\nheader in the response.\nWhen empty, the hostname in the `Host` header of the request is used.\n\n\nSupport: Core",
																"type": "string",
																"maxLength": 253,
																"minLength": 1,
																"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
															},
															"path": {
																"description": "Path defines parameters used to modify the path of the incoming request.\nThe modified path is then used to construct the `Location` header. When\nempty, the request path is used as-is.\n\n\nSupport: Extended",
																"type": "object",
																"required": [
																	"type"
																],
																"properties": {
																	"replaceFullPath": {
																		"description": "ReplaceFullPath specifies the value with which to replace the full path\nof a request during a rewrite or redirect.",
																		"type": "string",
																		"maxLength": 1024
																	},
																	"replacePrefixMatch": {
																		"description": "ReplacePrefixMatch specifies the value with which to replace the prefix\nmatch of a request during a rewrite or redirect. For example, a request\nto \"/foo/bar\" with a prefix match of \"/foo\" and a ReplacePrefixMatch\nof \"/xyz\" would be modified to \"/xyz/bar\".\n\n\nNote that this matches the behavior of the PathPrefix match type. This\nmatches full path elements. A path element refers to the list of labels\nin the path split by the `/` separator. When specified, a trailing `/` is\nignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all\nmatch the prefix `/abc`, but the path `/abcd` would not.\n\n\nReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.\nUsing any other HTTPRouteMatch type on the same HTTPRouteRule will result in\nthe implementation setting the Accepted Condition for the Route to `status: False`.\n\n\nRequest Path | Prefix Match | Replace Prefix | Modified Path\n-------------|--------------|----------------|----------\n/foo/bar     | /foo         | /xyz           | /xyz/bar\n/foo/bar     | /foo         | /xyz/          | /xyz/bar\n/foo/bar     | /foo/        | /xyz           | /xyz/bar\n/foo/bar     | /foo/        | /xyz/          | /xyz/bar\n/foo         | /foo         | /xyz           | /xyz\n/foo/        | /foo         | /xyz           | /xyz/\n/foo/bar     | /foo         | <empty string> | /bar\n/foo/        | /foo         | <empty string> | /\n/foo         | /foo         | <empty string> | /\n/foo/        | /foo         | /              | /\n/foo         | /foo         | /              | /",
																		"type": "string",
																		"maxLength": 1024
																	},
																	"type": {
																		"description": "Type defines the type of path modifier. Additional types may be\nadded in a future release of the API.\n\n\nNote that values may be added to this enum, implementations\nmust ensure that unknown values will not cause a crash.\n\n\nUnknown values here must result in the implementation setting the\nAccepted Condition for the Route to `status: False`, with a\nReason of `UnsupportedValue`.",
																		"type": "string",
																		"enum": [
																			"ReplaceFullPath",
																			"ReplacePrefixMatch"
																		]
																	}
																},
																"x-kubernetes-validations": [
																	{
																		"rule": "self.type == 'ReplaceFullPath' ? has(self.replaceFullPath) : true",
																		"message": "replaceFullPath must be specified when type is set to 'ReplaceFullPath'"
																	},
																	{
																		"rule": "has(self.replaceFullPath) ? self.type == 'ReplaceFullPath' : true",
																		"message": "type must be 'ReplaceFullPath' when replaceFullPath is set"
																	},
																	{
																		"rule": "self.type == 'ReplacePrefixMatch' ? has(self.replacePrefixMatch) : true",
																		"message": "replacePrefixMatch must be specified when type is set to 'ReplacePrefixMatch'"
																	},
																	{
																		"rule": "has(self.replacePrefixMatch) ? self.type == 'ReplacePrefixMatch' : true",
																		"message": "type must be 'ReplacePrefixMatch' when replacePrefixMatch is set"
																	}
																]
															},
															"port": {
																"description": "Port is the port to be used in the value of the `Location`\nheader in the response.\n\n\nIf no port is specified, the redirect port MUST be derived using the\nfollowing rules:\n\n\n* If redirect scheme is not-empty, the redirect port MUST be the well-known\n  port associated with the redirect scheme. Specifically \"http\" to port 80\n  and \"https\" to port 443. If the redirect scheme does not have a\n  well-known port, the listener port of the Gateway SHOULD be used.\n* If redirect scheme is empty, the redirect port MUST be the Gateway\n  Listener port.\n\n\nImplementations SHOULD NOT add the port number in the 'Location'\nheader in the following cases:\n\n\n* A Location header that will use HTTP (whether that is determined via\n  the Listener protocol or the Scheme field) _and_ use port 80.\n* A Location header that will use HTTPS (whether that is determined via\n  the Listener protocol or the Scheme field) _and_ use port 443.\n\n\nSupport: Extended",
																"type": "integer",
																"format": "int32",
																"maximum": 65535,
																"minimum": 1
															},
															"scheme": {
																"description": "Scheme is the scheme to be used in the value of the `Location` header in\nthe response. When empty, the scheme of the request is used.\n\n\nScheme redirects can affect the port of the redirect, for more information,\nrefer to the documentation for the port field of this filter.\n\n\nNote that values may be added to this enum, implementations\nmust ensure that unknown values will not cause a crash.\n\n\nUnknown values here must result in the implementation setting the\nAccepted Condition for the Route to `status: False`, with a\nReason of `UnsupportedValue`.\n\n\nSupport: Extended",
																"type": "string",
																"enum": [
																	"http",
																	"https"
																]
															},
															"statusCode": {
																"description": "StatusCode is the HTTP status code to be used in response.\n\n\nNote that values may be added to this enum, implementations\nmust ensure that unknown values will not cause a crash.\n\n\nUnknown values here must result in the implementation setting the\nAccepted Condition for the Route to `status: False`, with a\nReason of `UnsupportedValue`.\n\n\nSupport: Core",
																"type": "integer",
																"default": 302,
																"enum": [
																	301,
																	302
																]
															}
														}
													},
													"responseHeaderModifier": {
														"description": "ResponseHeaderModifier defines a schema for a filter that modifies response\nheaders.\n\n\nSupport: Extended",
														"type": "object",
														"properties": {
															"add": {
																"description": "Add adds the given header(s) (name, value) to the request\nbefore the action. It appends to any existing values associated\nwith the header name.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  add:\n  - name: \"my-header\"\n    value: \"bar,baz\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: foo,bar,baz",
																"type": "array",
																"maxItems": 16,
																"items": {
																	"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																	"type": "object",
																	"required": [
																		"name",
																		"value"
																	],
																	"properties": {
																		"name": {
																			"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																			"type": "string",
																			"maxLength": 256,
																			"minLength": 1,
																			"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																		},
																		"value": {
																			"description": "Value is the value of HTTP Header to be matched.",
																			"type": "string",
																			"maxLength": 4096,
																			"minLength": 1
																		}
																	}
																},
																"x-kubernetes-list-map-keys": [
																	"name"
																],
																"x-kubernetes-list-type": "map"
															},
															"remove": {
																"description": "Remove the given header(s) from the HTTP request before the action. The\nvalue of Remove is a list of HTTP header names. Note that the header\nnames are case-insensitive (see\nhttps://datatracker.ietf.org/doc/html/rfc2616#section-4.2).\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header1: foo\n  my-header2: bar\n  my-header3: baz\n\n\nConfig:\n  remove: [\"my-header1\", \"my-header3\"]\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header2: bar",
																"type": "array",
																"maxItems": 16,
																"items": {
																	"type": "string"
																},
																"x-kubernetes-list-type": "set"
															},
															"set": {
																"description": "Set overwrites the request with the given header (name, value)\nbefore the action.\n\n\nInput:\n  GET /foo HTTP/1.1\n  my-header: foo\n\n\nConfig:\n  set:\n  - name: \"my-header\"\n    value: \"bar\"\n\n\nOutput:\n  GET /foo HTTP/1.1\n  my-header: bar",
																"type": "array",
																"maxItems": 16,
																"items": {
																	"description": "HTTPHeader represents an HTTP Header name and value as defined by RFC 7230.",
																	"type": "object",
																	"required": [
																		"name",
																		"value"
																	],
																	"properties": {
																		"name": {
																			"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, the first entry with\nan equivalent name MUST be considered for a match. Subsequent entries\nwith an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.",
																			"type": "string",
																			"maxLength": 256,
																			"minLength": 1,
																			"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																		},
																		"value": {
																			"description": "Value is the value of HTTP Header to be matched.",
																			"type": "string",
																			"maxLength": 4096,
																			"minLength": 1
																		}
																	}
																},
																"x-kubernetes-list-map-keys": [
																	"name"
																],
																"x-kubernetes-list-type": "map"
															}
														}
													},
													"type": {
														"description": "Type identifies the type of filter to apply. As with other API fields,\ntypes are classified into three conformance levels:\n\n\n- Core: Filter types and their corresponding configuration defined by\n  \"Support: Core\" in this package, e.g. \"RequestHeaderModifier\". All\n  implementations must support core filters.\n\n\n- Extended: Filter types and their corresponding configuration defined by\n  \"Support: Extended\" in this package, e.g. \"RequestMirror\". Implementers\n  are encouraged to support extended filters.\n\n\n- Implementation-specific: Filters that are defined and supported by\n  specific vendors.\n  In the future, filters showing convergence in behavior across multiple\n  implementations will be considered for inclusion in extended or core\n  conformance levels. Filter-specific configuration for such filters\n  is specified using the ExtensionRef field. `Type` should be set to\n  \"ExtensionRef\" for custom filters.\n\n\nImplementers are encouraged to define custom implementation types to\nextend the core API with implementation-specific behavior.\n\n\nIf a reference to a custom filter type cannot be resolved, the filter\nMUST NOT be skipped. Instead, requests that would have been processed by\nthat filter MUST receive a HTTP error response.\n\n\nNote that values may be added to this enum, implementations\nmust ensure that unknown values will not cause a crash.\n\n\nUnknown values here must result in the implementation setting the\nAccepted Condition for the Route to `status: False`, with a\nReason of `UnsupportedValue`.",
														"type": "string",
														"enum": [
															"RequestHeaderModifier",
															"ResponseHeaderModifier",
															"RequestMirror",
															"RequestRedirect",
															"URLRewrite",
															"ExtensionRef"
														]
													},
													"urlRewrite": {
														"description": "URLRewrite defines a schema for a filter that modifies a request during forwarding.\n\n\nSupport: Extended",
														"type": "object",
														"properties": {
															"hostname": {
																"description": "Hostname is the value to be used to replace the Host header value during\nforwarding.\n\n\nSupport: Extended",
																"type": "string",
																"maxLength": 253,
																"minLength": 1,
																"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
															},
															"path": {
																"description": "Path defines a path rewrite.\n\n\nSupport: Extended",
																"type": "object",
																"required": [
																	"type"
																],
																"properties": {
																	"replaceFullPath": {
																		"description": "ReplaceFullPath specifies the value with which to replace the full path\nof a request during a rewrite or redirect.",
																		"type": "string",
																		"maxLength": 1024
																	},
																	"replacePrefixMatch": {
																		"description": "ReplacePrefixMatch specifies the value with which to replace the prefix\nmatch of a request during a rewrite or redirect. For example, a request\nto \"/foo/bar\" with a prefix match of \"/foo\" and a ReplacePrefixMatch\nof \"/xyz\" would be modified to \"/xyz/bar\".\n\n\nNote that this matches the behavior of the PathPrefix match type. This\nmatches full path elements. A path element refers to the list of labels\nin the path split by the `/` separator. When specified, a trailing `/` is\nignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all\nmatch the prefix `/abc`, but the path `/abcd` would not.\n\n\nReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.\nUsing any other HTTPRouteMatch type on the same HTTPRouteRule will result in\nthe implementation setting the Accepted Condition for the Route to `status: False`.\n\n\nRequest Path | Prefix Match | Replace Prefix | Modified Path\n-------------|--------------|----------------|----------\n/foo/bar     | /foo         | /xyz           | /xyz/bar\n/foo/bar     | /foo         | /xyz/          | /xyz/bar\n/foo/bar     | /foo/        | /xyz           | /xyz/bar\n/foo/bar     | /foo/        | /xyz/          | /xyz/bar\n/foo         | /foo         | /xyz           | /xyz\n/foo/        | /foo         | /xyz           | /xyz/\n/foo/bar     | /foo         | <empty string> | /bar\n/foo/        | /foo         | <empty string> | /\n/foo         | /foo         | <empty string> | /\n/foo/        | /foo         | /              | /\n/foo         | /foo         | /              | /",
																		"type": "string",
																		"maxLength": 1024
																	},
																	"type": {
																		"description": "Type defines the type of path modifier. Additional types may be\nadded in a future release of the API.\n\n\nNote that values may be added to this enum, implementations\nmust ensure that unknown values will not cause a crash.\n\n\nUnknown values here must result in the implementation setting the\nAccepted Condition for the Route to `status: False`, with a\nReason of `UnsupportedValue`.",
																		"type": "string",
																		"enum": [
																			"ReplaceFullPath",
																			"ReplacePrefixMatch"
																		]
																	}
																},
																"x-kubernetes-validations": [
																	{
																		"rule": "self.type == 'ReplaceFullPath' ? has(self.replaceFullPath) : true",
																		"message": "replaceFullPath must be specified when type is set to 'ReplaceFullPath'"
																	},
																	{
																		"rule": "has(self.replaceFullPath) ? self.type == 'ReplaceFullPath' : true",
																		"message": "type must be 'ReplaceFullPath' when replaceFullPath is set"
																	},
																	{
																		"rule": "self.type == 'ReplacePrefixMatch' ? has(self.replacePrefixMatch) : true",
																		"message": "replacePrefixMatch must be specified when type is set to 'ReplacePrefixMatch'"
																	},
																	{
																		"rule": "has(self.replacePrefixMatch) ? self.type == 'ReplacePrefixMatch' : true",
																		"message": "type must be 'ReplacePrefixMatch' when replacePrefixMatch is set"
																	}
																]
															}
														}
													}
												},
												"x-kubernetes-validations": [
													{
														"rule": "!(has(self.requestHeaderModifier) && self.type != 'RequestHeaderModifier')",
														"message": "filter.requestHeaderModifier must be nil if the filter.type is not RequestHeaderModifier"
													},
													{
														"rule": "!(!has(self.requestHeaderModifier) && self.type == 'RequestHeaderModifier')",
														"message": "filter.requestHeaderModifier must be specified for RequestHeaderModifier filter.type"
													},
													{
														"rule": "!(has(self.responseHeaderModifier) && self.type != 'ResponseHeaderModifier')",
														"message": "filter.responseHeaderModifier must be nil if the filter.type is not ResponseHeaderModifier"
													},
													{
														"rule": "!(!has(self.responseHeaderModifier) && self.type == 'ResponseHeaderModifier')",
														"message": "filter.responseHeaderModifier must be specified for ResponseHeaderModifier filter.type"
													},
													{
														"rule": "!(has(self.requestMirror) && self.type != 'RequestMirror')",
														"message": "filter.requestMirror must be nil if the filter.type is not RequestMirror"
													},
													{
														"rule": "!(!has(self.requestMirror) && self.type == 'RequestMirror')",
														"message": "filter.requestMirror must be specified for RequestMirror filter.type"
													},
													{
														"rule": "!(has(self.requestRedirect) && self.type != 'RequestRedirect')",
														"message": "filter.requestRedirect must be nil if the filter.type is not RequestRedirect"
													},
													{
														"rule": "!(!has(self.requestRedirect) && self.type == 'RequestRedirect')",
														"message": "filter.requestRedirect must be specified for RequestRedirect filter.type"
													},
													{
														"rule": "!(has(self.urlRewrite) && self.type != 'URLRewrite')",
														"message": "filter.urlRewrite must be nil if the filter.type is not URLRewrite"
													},
													{
														"rule": "!(!has(self.urlRewrite) && self.type == 'URLRewrite')",
														"message": "filter.urlRewrite must be specified for URLRewrite filter.type"
													},
													{
														"rule": "!(has(self.extensionRef) && self.type != 'ExtensionRef')",
														"message": "filter.extensionRef must be nil if the filter.type is not ExtensionRef"
													},
													{
														"rule": "!(!has(self.extensionRef) && self.type == 'ExtensionRef')",
														"message": "filter.extensionRef must be specified for ExtensionRef filter.type"
													}
												]
											},
											"x-kubernetes-validations": [
												{
													"rule": "!(self.exists(f, f.type == 'RequestRedirect') && self.exists(f, f.type == 'URLRewrite'))",
													"message": "May specify either httpRouteFilterRequestRedirect or httpRouteFilterRequestRewrite, but not both"
												},
												{
													"rule": "self.filter(f, f.type == 'RequestHeaderModifier').size() <= 1",
													"message": "RequestHeaderModifier filter cannot be repeated"
												},
												{
													"rule": "self.filter(f, f.type == 'ResponseHeaderModifier').size() <= 1",
													"message": "ResponseHeaderModifier filter cannot be repeated"
												},
												{
													"rule": "self.filter(f, f.type == 'RequestRedirect').size() <= 1",
													"message": "RequestRedirect filter cannot be repeated"
												},
												{
													"rule": "self.filter(f, f.type == 'URLRewrite').size() <= 1",
													"message": "URLRewrite filter cannot be repeated"
												}
											]
										},
										"matches": {
											"description": "Matches define conditions used for matching the rule against incoming\nHTTP requests. Each match is independent, i.e. this rule will be matched\nif **any** one of the matches is satisfied.\n\n\nFor example, take the following matches configuration:\n\n\n```\nmatches:\n- path:\n    value: \"/foo\"\n  headers:\n  - name: \"version\"\n    value: \"v2\"\n- path:\n    value: \"/v2/foo\"\n```\n\n\nFor a request to match against this rule, a request must satisfy\nEITHER of the two conditions:\n\n\n- path prefixed with `/foo` AND contains the header `version: v2`\n- path prefix of `/v2/foo`\n\n\nSee the documentation for HTTPRouteMatch on how to specify multiple\nmatch conditions that should be ANDed together.\n\n\nIf no matches are specified, the default is a prefix\npath match on \"/\", which has the effect of matching every\nHTTP request.\n\n\nProxy or Load Balancer routing configuration generated from HTTPRoutes\nMUST prioritize matches based on the following criteria, continuing on\nties. Across all rules specified on applicable Routes, precedence must be\ngiven to the match having:\n\n\n* \"Exact\" path match.\n* \"Prefix\" path match with largest number of characters.\n* Method match.\n* Largest number of header matches.\n* Largest number of query param matches.\n\n\nNote: The precedence of RegularExpression path matches are implementation-specific.\n\n\nIf ties still exist across multiple Routes, matching precedence MUST be\ndetermined in order of the following criteria, continuing on ties:\n\n\n* The oldest Route based on creation timestamp.\n* The Route appearing first in alphabetical order by\n  \"{namespace}/{name}\".\n\n\nIf ties still exist within an HTTPRoute, matching precedence MUST be granted\nto the FIRST matching rule (in list order) with a match meeting the above\ncriteria.\n\n\nWhen no rules matching a request have been successfully attached to the\nparent a request is coming from, a HTTP 404 status code MUST be returned.",
											"type": "array",
											"default": [
												{
													"path": {
														"type": "PathPrefix",
														"value": "/"
													}
												}
											],
											"maxItems": 8,
											"items": {
												"description": "HTTPRouteMatch defines the predicate used to match requests to a given\naction. Multiple match types are ANDed together, i.e. the match will\nevaluate to true only if all conditions are satisfied.\n\n\nFor example, the match below will match a HTTP request only if its path\nstarts with `/foo` AND it contains the `version: v1` header:\n\n\n```\nmatch:\n\n\n\tpath:\n\t  value: \"/foo\"\n\theaders:\n\t- name: \"version\"\n\t  value \"v1\"\n\n\n```",
												"type": "object",
												"properties": {
													"headers": {
														"description": "Headers specifies HTTP request header matchers. Multiple match values are\nANDed together, meaning, a request must match all the specified headers\nto select the route.",
														"type": "array",
														"maxItems": 16,
														"items": {
															"description": "HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request\nheaders.",
															"type": "object",
															"required": [
																"name",
																"value"
															],
															"properties": {
																"name": {
																	"description": "Name is the name of the HTTP Header to be matched. Name matching MUST be\ncase insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).\n\n\nIf multiple entries specify equivalent header names, only the first\nentry with an equivalent name MUST be considered for a match. Subsequent\nentries with an equivalent header name MUST be ignored. Due to the\ncase-insensitivity of header names, \"foo\" and \"Foo\" are considered\nequivalent.\n\n\nWhen a header is repeated in an HTTP request, it is\nimplementation-specific behavior as to how this is represented.\nGenerally, proxies should follow the guidance from the RFC:\nhttps://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding\nprocessing a repeated header, with special handling for \"Set-Cookie\".",
																	"type": "string",
																	"maxLength": 256,
																	"minLength": 1,
																	"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																},
																"type": {
																	"description": "Type specifies how to match against the value of the header.\n\n\nSupport: Core (Exact)\n\n\nSupport: Implementation-specific (RegularExpression)\n\n\nSince RegularExpression HeaderMatchType has implementation-specific\nconformance, implementations can support POSIX, PCRE or any other dialects\nof regular expressions. Please read the implementation's documentation to\ndetermine the supported dialect.",
																	"type": "string",
																	"default": "Exact",
																	"enum": [
																		"Exact",
																		"RegularExpression"
																	]
																},
																"value": {
																	"description": "Value is the value of HTTP Header to be matched.",
																	"type": "string",
																	"maxLength": 4096,
																	"minLength": 1
																}
															}
														},
														"x-kubernetes-list-map-keys": [
															"name"
														],
														"x-kubernetes-list-type": "map"
													},
													"method": {
														"description": "Method specifies HTTP method matcher.\nWhen specified, this route will be matched only if the request has the\nspecified method.\n\n\nSupport: Extended",
														"type": "string",
														"enum": [
															"GET",
															"HEAD",
															"POST",
															"PUT",
															"DELETE",
															"CONNECT",
															"OPTIONS",
															"TRACE",
															"PATCH"
														]
													},
													"path": {
														"description": "Path specifies a HTTP request path matcher. If this field is not\nspecified, a default prefix match on the \"/\" path is provided.",
														"type": "object",
														"default": {
															"type": "PathPrefix",
															"value": "/"
														},
														"properties": {
															"type": {
																"description": "Type specifies how to match against the path Value.\n\n\nSupport: Core (Exact, PathPrefix)\n\n\nSupport: Implementation-specific (RegularExpression)",
																"type": "string",
																"default": "PathPrefix",
																"enum": [
																	"Exact",
																	"PathPrefix",
																	"RegularExpression"
																]
															},
															"value": {
																"description": "Value of the HTTP path to match against.",
																"type": "string",
																"default": "/",
																"maxLength": 1024
															}
														},
														"x-kubernetes-validations": [
															{
																"rule": "(self.type in ['Exact','PathPrefix']) ? self.value.startsWith('/') : true",
																"message": "value must be an absolute path and start with '/' when type one of ['Exact', 'PathPrefix']"
															},
															{
																"rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.contains('//') : true",
																"message": "must not contain '//' when type one of ['Exact', 'PathPrefix']"
															},
															{
																"rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.contains('/./') : true",
																"message": "must not contain '/./' when type one of ['Exact', 'PathPrefix']"
															},
															{
																"rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.contains('/../') : true",
																"message": "must not contain '/../' when type one of ['Exact', 'PathPrefix']"
															},
															{
																"rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.contains('%2f') : true",
																"message": "must not contain '%2f' when type one of ['Exact', 'PathPrefix']"
															},
															{
																"rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.contains('%2F') : true",
																"message": "must not contain '%2F' when type one of ['Exact', 'PathPrefix']"
															},
															{
																"rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.contains('#') : true",
																"message": "must not contain '#' when type one of ['Exact', 'PathPrefix']"
															},
															{
																"rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.endsWith('/..') : true",
																"message": "must not end with '/..' when type one of ['Exact', 'PathPrefix']"
															},
															{
																"rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.endsWith('/.') : true",
																"message": "must not end with '/.' when type one of ['Exact', 'PathPrefix']"
															},
															{
																"rule": "self.type in ['Exact','PathPrefix'] || self.type == 'RegularExpression'",
																"message": "type must be one of ['Exact', 'PathPrefix', 'RegularExpression']"
															},
															{
																"rule": "(self.type in ['Exact','PathPrefix']) ? self.value.matches(r\"\"\"^(?:[-A-Za-z0-9/._~!$&'()*+,;=:@]|[%][0-9a-fA-F]{2})+$\"\"\") : true",
																"message": "must only contain valid characters (matching ^(?:[-A-Za-z0-9/._~!$&'()*+,;=:@]|[%][0-9a-fA-F]{2})+$) for types ['Exact', 'PathPrefix']"
															}
														]
													},
													"queryParams": {
														"description": "QueryParams specifies HTTP query parameter matchers. Multiple match\nvalues are ANDed together, meaning, a request must match all the\nspecified query parameters to select the route.\n\n\nSupport: Extended",
														"type": "array",
														"maxItems": 16,
														"items": {
															"description": "HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP\nquery parameters.",
															"type": "object",
															"required": [
																"name",
																"value"
															],
															"properties": {
																"name": {
																	"description": "Name is the name of the HTTP query param to be matched. This must be an\nexact string match. (See\nhttps://tools.ietf.org/html/rfc7230#section-2.7.3).\n\n\nIf multiple entries specify equivalent query param names, only the first\nentry with an equivalent name MUST be considered for a match. Subsequent\nentries with an equivalent query param name MUST be ignored.\n\n\nIf a query param is repeated in an HTTP request, the behavior is\npurposely left undefined, since different data planes have different\ncapabilities. However, it is *recommended* that implementations should\nmatch against the first value of the param if the data plane supports it,\nas this behavior is expected in other load balancing contexts outside of\nthe Gateway API.\n\n\nUsers SHOULD NOT route traffic based on repeated query params to guard\nthemselves against potential differences in the implementations.",
																	"type": "string",
																	"maxLength": 256,
																	"minLength": 1,
																	"pattern": "^[A-Za-z0-9!#$%&'*+\\-.^_\\x60|~]+$"
																},
																"type": {
																	"description": "Type specifies how to match against the value of the query parameter.\n\n\nSupport: Extended (Exact)\n\n\nSupport: Implementation-specific (RegularExpression)\n\n\nSince RegularExpression QueryParamMatchType has Implementation-specific\nconformance, implementations can support POSIX, PCRE or any other\ndialects of regular expressions. Please read the implementation's\ndocumentation to determine the supported dialect.",
																	"type": "string",
																	"default": "Exact",
																	"enum": [
																		"Exact",
																		"RegularExpression"
																	]
																},
																"value": {
																	"description": "Value is the value of HTTP query param to be matched.",
																	"type": "string",
																	"maxLength": 1024,
																	"minLength": 1
																}
															}
														},
														"x-kubernetes-list-map-keys": [
															"name"
														],
														"x-kubernetes-list-type": "map"
													}
												}
											}
										}
									},
									"x-kubernetes-validations": [
										{
											"rule": "(has(self.backendRefs) && size(self.backendRefs) > 0) ? (!has(self.filters) || self.filters.all(f, !has(f.requestRedirect))): true",
											"message": "RequestRedirect filter must not be used together with backendRefs"
										},
										{
											"rule": "(has(self.filters) && self.filters.exists_one(f, has(f.requestRedirect) && has(f.requestRedirect.path) && f.requestRedirect.path.type == 'ReplacePrefixMatch' && has(f.requestRedirect.path.replacePrefixMatch))) ? ((size(self.matches) != 1 || !has(self.matches[0].path) || self.matches[0].path.type != 'PathPrefix') ? false : true) : true",
											"message": "When using RequestRedirect filter with path.replacePrefixMatch, exactly one PathPrefix match must be specified"
										},
										{
											"rule": "(has(self.filters) && self.filters.exists_one(f, has(f.urlRewrite) && has(f.urlRewrite.path) && f.urlRewrite.path.type == 'ReplacePrefixMatch' && has(f.urlRewrite.path.replacePrefixMatch))) ? ((size(self.matches) != 1 || !has(self.matches[0].path) || self.matches[0].path.type != 'PathPrefix') ? false : true) : true",
											"message": "When using URLRewrite filter with path.replacePrefixMatch, exactly one PathPrefix match must be specified"
										},
										{
											"rule": "(has(self.backendRefs) && self.backendRefs.exists_one(b, (has(b.filters) && b.filters.exists_one(f, has(f.requestRedirect) && has(f.requestRedirect.path) && f.requestRedirect.path.type == 'ReplacePrefixMatch' && has(f.requestRedirect.path.replacePrefixMatch))) )) ? ((size(self.matches) != 1 || !has(self.matches[0].path) || self.matches[0].path.type != 'PathPrefix') ? false : true) : true",
											"message": "Within backendRefs, when using RequestRedirect filter with path.replacePrefixMatch, exactly one PathPrefix match must be specified"
										},
										{
											"rule": "(has(self.backendRefs) && self.backendRefs.exists_one(b, (has(b.filters) && b.filters.exists_one(f, has(f.urlRewrite) && has(f.urlRewrite.path) && f.urlRewrite.path.type == 'ReplacePrefixMatch' && has(f.urlRewrite.path.replacePrefixMatch))) )) ? ((size(self.matches) != 1 || !has(self.matches[0].path) || self.matches[0].path.type != 'PathPrefix') ? false : true) : true",
											"message": "Within backendRefs, When using URLRewrite filter with path.replacePrefixMatch, exactly one PathPrefix match must be specified"
										}
									]
								}
							}
						}
					},
					"status": {
						"description": "Status defines the current state of HTTPRoute.",
						"type": "object",
						"required": [
							"parents"
						],
						"properties": {
							"parents": {
								"description": "Parents is a list of parent resources (usually Gateways) that are\nassociated with the route, and the status of the route with respect to\neach parent. When this route attaches to a parent, the controller that\nmanages the parent must add an entry to this list when the controller\nfirst sees the route and should update the entry as appropriate when the\nroute or gateway is modified.\n\n\nNote that parent references that cannot be resolved by an implementation\nof this API will not be added to this list. Implementations of this API\ncan only populate Route status for the Gateways/parent resources they are\nresponsible for.\n\n\nA maximum of 32 Gateways will be represented in this list. An empty list\nmeans the route has not been attached to any Gateway.",
								"type": "array",
								"maxItems": 32,
								"items": {
									"description": "RouteParentStatus describes the status of a route with respect to an\nassociated Parent.",
									"type": "object",
									"required": [
										"controllerName",
										"parentRef"
									],
									"properties": {
										"conditions": {
											"description": "Conditions describes the status of the route with respect to the Gateway.\nNote that the route's availability is also subject to the Gateway's own\nstatus conditions and listener status.\n\n\nIf the Route's ParentRef specifies an existing Gateway that supports\nRoutes of this kind AND that Gateway's controller has sufficient access,\nthen that Gateway's controller MUST set the \"Accepted\" condition on the\nRoute, to indicate whether the route has been accepted or rejected by the\nGateway, and why.\n\n\nA Route MUST be considered \"Accepted\" if at least one of the Route's\nrules is implemented by the Gateway.\n\n\nThere are a number of cases where the \"Accepted\" condition may not be set\ndue to lack of controller visibility, that includes when:\n\n\n* The Route refers to a non-existent parent.\n* The Route is of a type that the controller does not support.\n* The Route is in a namespace the controller does not have access to.",
											"type": "array",
											"maxItems": 8,
											"minItems": 1,
											"items": {
												"description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
												"type": "object",
												"required": [
													"lastTransitionTime",
													"message",
													"reason",
													"status",
													"type"
												],
												"properties": {
													"lastTransitionTime": {
														"description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
														"type": "string",
														"format": "date-time"
													},
													"message": {
														"description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
														"type": "string",
														"maxLength": 32768
													},
													"observedGeneration": {
														"description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
														"type": "integer",
														"format": "int64",
														"minimum": 0
													},
													"reason": {
														"description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
														"type": "string",
														"maxLength": 1024,
														"minLength": 1,
														"pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
													},
													"status": {
														"description": "status of the condition, one of True, False, Unknown.",
														"type": "string",
														"enum": [
															"True",
															"False",
															"Unknown"
														]
													},
													"type": {
														"description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
														"type": "string",
														"maxLength": 316,
														"pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
													}
												}
											},
											"x-kubernetes-list-map-keys": [
												"type"
											],
											"x-kubernetes-list-type": "map"
										},
										"controllerName": {
											"description": "ControllerName is a domain/path string that indicates the name of the\ncontroller that wrote this status. This corresponds with the\ncontrollerName field on GatewayClass.\n\n\nExample: \"example.net/gateway-controller\".\n\n\nThe format of this field is DOMAIN \"/\" PATH, where DOMAIN and PATH are\nvalid Kubernetes names\n(https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n\n\nControllers MUST populate this field when writing status. Controllers should ensure that\nentries to status populated with their ControllerName are cleaned up when they are no\nlonger necessary.",
											"type": "string",
											"maxLength": 253,
											"minLength": 1,
											"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/[A-Za-z0-9\\/\\-._~%!$&'()*+,;=:]+$"
										},
										"parentRef": {
											"description": "ParentRef corresponds with a ParentRef in the spec that this\nRouteParentStatus struct describes the status of.",
											"type": "object",
											"required": [
												"name"
											],
											"properties": {
												"group": {
													"description": "Group is the group of the referent.\nWhen unspecified, \"gateway.networking.k8s.io\" is inferred.\nTo set the core API group (such as for a \"Service\" kind referent),\nGroup must be explicitly set to \"\" (empty string).\n\n\nSupport: Core",
													"type": "string",
													"default": "gateway.networking.k8s.io",
													"maxLength": 253,
													"pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
												},
												"kind": {
													"description": "Kind is kind of the referent.\n\n\nThere are two kinds of parent resources with \"Core\" support:\n\n\n* Gateway (Gateway conformance profile)\n* Service (Mesh conformance profile, ClusterIP Services only)\n\n\nSupport for other resources is Implementation-Specific.",
													"type": "string",
													"default": "Gateway",
													"maxLength": 63,
													"minLength": 1,
													"pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
												},
												"name": {
													"description": "Name is the name of the referent.\n\n\nSupport: Core",
													"type": "string",
													"maxLength": 253,
													"minLength": 1
												},
												"namespace": {
													"description": "Namespace is the namespace of the referent. When unspecified, this refers\nto the local namespace of the Route.\n\n\nNote that there are specific rules for ParentRefs which cross namespace\nboundaries. Cross-namespace references are only valid if they are explicitly\nallowed by something in the namespace they are referring to. For example:\nGateway has the AllowedRoutes field, and ReferenceGrant provides a\ngeneric way to enable any other kind of cross-namespace reference.\n\n\n\n\n\nSupport: Core",
													"type": "string",
													"maxLength": 63,
													"minLength": 1,
													"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
												},
												"port": {
													"description": "Port is the network port this Route targets. It can be interpreted\ndifferently based on the type of parent resource.\n\n\nWhen the parent resource is a Gateway, this targets all listeners\nlistening on the specified port that also support this kind of Route(and\nselect this Route). It's not recommended to set `Port` unless the\nnetworking behaviors specified in a Route must apply to a specific port\nas opposed to a listener(s) whose port(s) may be changed. When both Port\nand SectionName are specified, the name and port of the selected listener\nmust match both specified values.\n\n\n\n\n\nImplementations MAY choose to support other parent resources.\nImplementations supporting other types of parent resources MUST clearly\ndocument how/if Port is interpreted.\n\n\nFor the purpose of status, an attachment is considered successful as\nlong as the parent resource accepts it partially. For example, Gateway\nlisteners can restrict which Routes can attach to them by Route kind,\nnamespace, or hostname. If 1 of 2 Gateway listeners accept attachment\nfrom the referencing Route, the Route MUST be considered successfully\nattached. If no Gateway listeners accept attachment from this Route,\nthe Route MUST be considered detached from the Gateway.\n\n\nSupport: Extended",
													"type": "integer",
													"format": "int32",
													"maximum": 65535,
													"minimum": 1
												},
												"sectionName": {
													"description": "SectionName is the name of a section within the target resource. In the\nfollowing resources, SectionName is interpreted as the following:\n\n\n* Gateway: Listener name. When both Port (experimental) and SectionName\nare specified, the name and port of the selected listener must match\nboth specified values.\n* Service: Port name. When both Port (experimental) and SectionName\nare specified, the name and port of the selected listener must match\nboth specified values.\n\n\nImplementations MAY choose to support attaching Routes to other resources.\nIf that is the case, they MUST clearly document how SectionName is\ninterpreted.\n\n\nWhen unspecified (empty string), this will reference the entire resource.\nFor the purpose of status, an attachment is considered successful if at\nleast one section in the parent resource accepts it. For example, Gateway\nlisteners can restrict which Routes can attach to them by Route kind,\nnamespace, or hostname. If 1 of 2 Gateway listeners accept attachment from\nthe referencing Route, the Route MUST be considered successfully\nattached. If no Gateway listeners accept attachment from this Route, the\nRoute MUST be considered detached from the Gateway.\n\n\nSupport: Core",
													"type": "string",
													"maxLength": 253,
													"minLength": 1,
													"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"x-kubernetes-group-version-kind": [
					{
						"group": "gateway.networking.k8s.io",
						"kind": "HTTPRoute",
						"version": "v1"
					}
				]
			},
			"io.k8s.networking.gateway.v1.HTTPRouteList": {
				"description": "HTTPRouteList is a list of HTTPRoute",
				"type": "object",
				"required": [
					"items"
				],
				"properties": {
					"apiVersion": {
						"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
						"type": "string"
					},
					"items": {
						"description": "List of httproutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/io.k8s.networking.gateway.v1.HTTPRoute"
						}
					},
					"kind": {
						"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"type": "string"
					},
					"metadata": {
						"description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
						"allOf": [
							{
								"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
							}
						]
					}
				},
				"x-kubernetes-group-version-kind": [
					{
						"group": "gateway.networking.k8s.io",
						"kind": "HTTPRouteList",
						"version": "v1"
					}
				]
			},
			"io.traefik.v1alpha1.IngressRoute": {
			"description": "IngressRoute is the CRD implementation of a Traefik HTTP Router.",
			"type": "object",
			"required": [
				"metadata",
				"spec"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
					}
					]
				},
				"spec": {
					"description": "IngressRouteSpec defines the desired state of IngressRoute.",
					"type": "object",
					"required": [
					"routes"
					],
					"properties": {
					"entryPoints": {
						"description": "EntryPoints defines the list of entry point names to bind to.\nEntry points have to be configured in the static configuration.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/entrypoints/\nDefault: all.",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"routes": {
						"description": "Routes defines the list of routes.",
						"type": "array",
						"items": {
							"description": "Route holds the HTTP route configuration.",
							"type": "object",
							"required": [
							"kind",
							"match"
							],
							"properties": {
							"kind": {
								"description": "Kind defines the kind of the route.\nRule is the only supported kind.",
								"type": "string",
								"enum": [
									"Rule"
								]
							},
							"match": {
								"description": "Match defines the router's rule.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/routers/#rule",
								"type": "string"
							},
							"middlewares": {
								"description": "Middlewares defines the list of references to Middleware resources.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/providers/kubernetes-crd/#kind-middleware",
								"type": "array",
								"items": {
									"description": "MiddlewareRef is a reference to a Middleware resource.",
									"type": "object",
									"required": [
									"name"
									],
									"properties": {
									"name": {
										"description": "Name defines the name of the referenced Middleware resource.",
										"type": "string"
									},
									"namespace": {
										"description": "Namespace defines the namespace of the referenced Middleware resource.",
										"type": "string"
									}
									}
								}
							},
							"priority": {
								"description": "Priority defines the router's priority.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/routers/#priority",
								"type": "integer"
							},
							"services": {
								"description": "Services defines the list of Service.\nIt can contain any combination of TraefikService and/or reference to a Kubernetes Service.",
								"type": "array",
								"items": {
									"description": "Service defines an upstream HTTP service to proxy traffic to.",
									"type": "object",
									"required": [
									"name"
									],
									"properties": {
									"healthCheck": {
										"description": "Healthcheck defines health checks for ExternalName services.",
										"type": "object",
										"properties": {
											"followRedirects": {
											"description": "FollowRedirects defines whether redirects should be followed during the health check calls.\nDefault: true",
											"type": "boolean"
											},
											"headers": {
											"description": "Headers defines custom headers to be sent to the health check endpoint.",
											"type": "object",
											"additionalProperties": {
												"type": "string"
											}
											},
											"hostname": {
											"description": "Hostname defines the value of hostname in the Host header of the health check request.",
											"type": "string"
											},
											"interval": {
											"description": "Interval defines the frequency of the health check calls.\nDefault: 30s",
											"anyOf": [
												{
													"type": "integer"
												},
												{
													"type": "string"
												}
											],
											"x-kubernetes-int-or-string": true
											},
											"method": {
											"description": "Method defines the healthcheck method.",
											"type": "string"
											},
											"mode": {
											"description": "Mode defines the health check mode.\nIf defined to grpc, will use the gRPC health check protocol to probe the server.\nDefault: http",
											"type": "string"
											},
											"path": {
											"description": "Path defines the server URL path for the health check endpoint.",
											"type": "string"
											},
											"port": {
											"description": "Port defines the server URL port for the health check endpoint.",
											"type": "integer"
											},
											"scheme": {
											"description": "Scheme replaces the server URL scheme for the health check endpoint.",
											"type": "string"
											},
											"status": {
											"description": "Status defines the expected HTTP status code of the response to the health check request.",
											"type": "integer"
											},
											"timeout": {
											"description": "Timeout defines the maximum duration Traefik will wait for a health check request before considering the server unhealthy.\nDefault: 5s",
											"anyOf": [
												{
													"type": "integer"
												},
												{
													"type": "string"
												}
											],
											"x-kubernetes-int-or-string": true
											}
										}
									},
									"kind": {
										"description": "Kind defines the kind of the Service.",
										"type": "string",
										"enum": [
											"Service",
											"TraefikService"
										]
									},
									"name": {
										"description": "Name defines the name of the referenced Kubernetes Service or TraefikService.\nThe differentiation between the two is specified in the Kind field.",
										"type": "string"
									},
									"namespace": {
										"description": "Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.",
										"type": "string"
									},
									"nativeLB": {
										"description": "NativeLB controls, when creating the load-balancer,\nwhether the LB's children are directly the pods IPs or if the only child is the Kubernetes Service clusterIP.\nThe Kubernetes Service itself does load-balance to the pods.\nBy default, NativeLB is false.",
										"type": "boolean"
									},
									"nodePortLB": {
										"description": "NodePortLB controls, when creating the load-balancer,\nwhether the LB's children are directly the nodes internal IPs using the nodePort when the service type is NodePort.\nIt allows services to be reachable when Traefik runs externally from the Kubernetes cluster but within the same network of the nodes.\nBy default, NodePortLB is false.",
										"type": "boolean"
									},
									"passHostHeader": {
										"description": "PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service.\nBy default, passHostHeader is true.",
										"type": "boolean"
									},
									"port": {
										"description": "Port defines the port of a Kubernetes Service.\nThis can be a reference to a named port.",
										"anyOf": [
											{
											"type": "integer"
											},
											{
											"type": "string"
											}
										],
										"x-kubernetes-int-or-string": true
									},
									"responseForwarding": {
										"description": "ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.",
										"type": "object",
										"properties": {
											"flushInterval": {
											"description": "FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body.\nA negative value means to flush immediately after each write to the client.\nThis configuration is ignored when ReverseProxy recognizes a response as a streaming response;\nfor such responses, writes are flushed to the client immediately.\nDefault: 100ms",
											"type": "string"
											}
										}
									},
									"scheme": {
										"description": "Scheme defines the scheme to use for the request to the upstream Kubernetes Service.\nIt defaults to https when Kubernetes Service port is 443, http otherwise.",
										"type": "string"
									},
									"serversTransport": {
										"description": "ServersTransport defines the name of ServersTransport resource to use.\nIt allows to configure the transport between Traefik and your servers.\nCan only be used on a Kubernetes Service.",
										"type": "string"
									},
									"sticky": {
										"description": "Sticky defines the sticky sessions configuration.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/services/#sticky-sessions",
										"type": "object",
										"properties": {
											"cookie": {
											"description": "Cookie defines the sticky cookie configuration.",
											"type": "object",
											"properties": {
												"httpOnly": {
													"description": "HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.",
													"type": "boolean"
												},
												"maxAge": {
													"description": "MaxAge indicates the number of seconds until the cookie expires.\nWhen set to a negative number, the cookie expires immediately.\nWhen set to zero, the cookie never expires.",
													"type": "integer"
												},
												"name": {
													"description": "Name defines the Cookie name.",
													"type": "string"
												},
												"sameSite": {
													"description": "SameSite defines the same site policy.\nMore info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite",
													"type": "string"
												},
												"secure": {
													"description": "Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).",
													"type": "boolean"
												}
											}
											}
										}
									},
									"strategy": {
										"description": "Strategy defines the load balancing strategy between the servers.\nRoundRobin is the only supported value at the moment.",
										"type": "string"
									},
									"weight": {
										"description": "Weight defines the weight and should only be specified when Name references a TraefikService object\n(and to be precise, one that embeds a Weighted Round Robin).",
										"type": "integer"
									}
									}
								}
							},
							"syntax": {
								"description": "Syntax defines the router's rule syntax.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/routers/#rulesyntax",
								"type": "string"
							}
							}
						}
					},
					"tls": {
						"description": "TLS defines the TLS configuration.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/routers/#tls",
						"type": "object",
						"properties": {
							"certResolver": {
							"description": "CertResolver defines the name of the certificate resolver to use.\nCert resolvers have to be configured in the static configuration.\nMore info: https://doc.traefik.io/traefik/v3.1/https/acme/#certificate-resolvers",
							"type": "string"
							},
							"domains": {
							"description": "Domains defines the list of domains that will be used to issue certificates.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/routers/#domains",
							"type": "array",
							"items": {
								"description": "Domain holds a domain name with SANs.",
								"type": "object",
								"properties": {
									"main": {
									"description": "Main defines the main domain name.",
									"type": "string"
									},
									"sans": {
									"description": "SANs defines the subject alternative domain names.",
									"type": "array",
									"items": {
										"type": "string"
									}
									}
								}
							}
							},
							"options": {
							"description": "Options defines the reference to a TLSOption, that specifies the parameters of the TLS connection.\nIf not defined, the `default` TLSOption is used.\nMore info: https://doc.traefik.io/traefik/v3.1/https/tls/#tls-options",
							"type": "object",
							"required": [
								"name"
							],
							"properties": {
								"name": {
									"description": "Name defines the name of the referenced TLSOption.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/providers/kubernetes-crd/#kind-tlsoption",
									"type": "string"
								},
								"namespace": {
									"description": "Namespace defines the namespace of the referenced TLSOption.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/providers/kubernetes-crd/#kind-tlsoption",
									"type": "string"
								}
							}
							},
							"secretName": {
							"description": "SecretName is the name of the referenced Kubernetes Secret to specify the certificate details.",
							"type": "string"
							},
							"store": {
							"description": "Store defines the reference to the TLSStore, that will be used to store certificates.\nPlease note that only `default` TLSStore can be used.",
							"type": "object",
							"required": [
								"name"
							],
							"properties": {
								"name": {
									"description": "Name defines the name of the referenced TLSStore.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/providers/kubernetes-crd/#kind-tlsstore",
									"type": "string"
								},
								"namespace": {
									"description": "Namespace defines the namespace of the referenced TLSStore.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/providers/kubernetes-crd/#kind-tlsstore",
									"type": "string"
								}
							}
							}
						}
					}
					}
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "IngressRoute",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.IngressRouteList": {
			"description": "IngressRouteList is a list of IngressRoute",
			"type": "object",
			"required": [
				"items"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"items": {
					"description": "List of ingressroutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
					"type": "array",
					"items": {
					"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRoute"
					}
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
					}
					]
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "IngressRouteList",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.IngressRouteTCP": {
			"description": "IngressRouteTCP is the CRD implementation of a Traefik TCP Router.",
			"type": "object",
			"required": [
				"metadata",
				"spec"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
					}
					]
				},
				"spec": {
					"description": "IngressRouteTCPSpec defines the desired state of IngressRouteTCP.",
					"type": "object",
					"required": [
					"routes"
					],
					"properties": {
					"entryPoints": {
						"description": "EntryPoints defines the list of entry point names to bind to.\nEntry points have to be configured in the static configuration.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/entrypoints/\nDefault: all.",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"routes": {
						"description": "Routes defines the list of routes.",
						"type": "array",
						"items": {
							"description": "RouteTCP holds the TCP route configuration.",
							"type": "object",
							"required": [
							"match"
							],
							"properties": {
							"match": {
								"description": "Match defines the router's rule.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/routers/#rule_1",
								"type": "string"
							},
							"middlewares": {
								"description": "Middlewares defines the list of references to MiddlewareTCP resources.",
								"type": "array",
								"items": {
									"description": "ObjectReference is a generic reference to a Traefik resource.",
									"type": "object",
									"required": [
									"name"
									],
									"properties": {
									"name": {
										"description": "Name defines the name of the referenced Traefik resource.",
										"type": "string"
									},
									"namespace": {
										"description": "Namespace defines the namespace of the referenced Traefik resource.",
										"type": "string"
									}
									}
								}
							},
							"priority": {
								"description": "Priority defines the router's priority.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/routers/#priority_1",
								"type": "integer"
							},
							"services": {
								"description": "Services defines the list of TCP services.",
								"type": "array",
								"items": {
									"description": "ServiceTCP defines an upstream TCP service to proxy traffic to.",
									"type": "object",
									"required": [
									"name",
									"port"
									],
									"properties": {
									"name": {
										"description": "Name defines the name of the referenced Kubernetes Service.",
										"type": "string"
									},
									"namespace": {
										"description": "Namespace defines the namespace of the referenced Kubernetes Service.",
										"type": "string"
									},
									"nativeLB": {
										"description": "NativeLB controls, when creating the load-balancer,\nwhether the LB's children are directly the pods IPs or if the only child is the Kubernetes Service clusterIP.\nThe Kubernetes Service itself does load-balance to the pods.\nBy default, NativeLB is false.",
										"type": "boolean"
									},
									"nodePortLB": {
										"description": "NodePortLB controls, when creating the load-balancer,\nwhether the LB's children are directly the nodes internal IPs using the nodePort when the service type is NodePort.\nIt allows services to be reachable when Traefik runs externally from the Kubernetes cluster but within the same network of the nodes.\nBy default, NodePortLB is false.",
										"type": "boolean"
									},
									"port": {
										"description": "Port defines the port of a Kubernetes Service.\nThis can be a reference to a named port.",
										"anyOf": [
											{
											"type": "integer"
											},
											{
											"type": "string"
											}
										],
										"x-kubernetes-int-or-string": true
									},
									"proxyProtocol": {
										"description": "ProxyProtocol defines the PROXY protocol configuration.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/services/#proxy-protocol",
										"type": "object",
										"properties": {
											"version": {
											"description": "Version defines the PROXY Protocol version to use.",
											"type": "integer"
											}
										}
									},
									"serversTransport": {
										"description": "ServersTransport defines the name of ServersTransportTCP resource to use.\nIt allows to configure the transport between Traefik and your servers.\nCan only be used on a Kubernetes Service.",
										"type": "string"
									},
									"terminationDelay": {
										"description": "TerminationDelay defines the deadline that the proxy sets, after one of its connected peers indicates\nit has closed the writing capability of its connection, to close the reading capability as well,\nhence fully terminating the connection.\nIt is a duration in milliseconds, defaulting to 100.\nA negative value means an infinite deadline (i.e. the reading capability is never closed).\nDeprecated: TerminationDelay will not be supported in future APIVersions, please use ServersTransport to configure the TerminationDelay instead.",
										"type": "integer"
									},
									"tls": {
										"description": "TLS determines whether to use TLS when dialing with the backend.",
										"type": "boolean"
									},
									"weight": {
										"description": "Weight defines the weight used when balancing requests between multiple Kubernetes Service.",
										"type": "integer"
									}
									}
								}
							},
							"syntax": {
								"description": "Syntax defines the router's rule syntax.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/routers/#rulesyntax_1",
								"type": "string"
							}
							}
						}
					},
					"tls": {
						"description": "TLS defines the TLS configuration on a layer 4 / TCP Route.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/routers/#tls_1",
						"type": "object",
						"properties": {
							"certResolver": {
							"description": "CertResolver defines the name of the certificate resolver to use.\nCert resolvers have to be configured in the static configuration.\nMore info: https://doc.traefik.io/traefik/v3.1/https/acme/#certificate-resolvers",
							"type": "string"
							},
							"domains": {
							"description": "Domains defines the list of domains that will be used to issue certificates.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/routers/#domains",
							"type": "array",
							"items": {
								"description": "Domain holds a domain name with SANs.",
								"type": "object",
								"properties": {
									"main": {
									"description": "Main defines the main domain name.",
									"type": "string"
									},
									"sans": {
									"description": "SANs defines the subject alternative domain names.",
									"type": "array",
									"items": {
										"type": "string"
									}
									}
								}
							}
							},
							"options": {
							"description": "Options defines the reference to a TLSOption, that specifies the parameters of the TLS connection.\nIf not defined, the `default` TLSOption is used.\nMore info: https://doc.traefik.io/traefik/v3.1/https/tls/#tls-options",
							"type": "object",
							"required": [
								"name"
							],
							"properties": {
								"name": {
									"description": "Name defines the name of the referenced Traefik resource.",
									"type": "string"
								},
								"namespace": {
									"description": "Namespace defines the namespace of the referenced Traefik resource.",
									"type": "string"
								}
							}
							},
							"passthrough": {
							"description": "Passthrough defines whether a TLS router will terminate the TLS connection.",
							"type": "boolean"
							},
							"secretName": {
							"description": "SecretName is the name of the referenced Kubernetes Secret to specify the certificate details.",
							"type": "string"
							},
							"store": {
							"description": "Store defines the reference to the TLSStore, that will be used to store certificates.\nPlease note that only `default` TLSStore can be used.",
							"type": "object",
							"required": [
								"name"
							],
							"properties": {
								"name": {
									"description": "Name defines the name of the referenced Traefik resource.",
									"type": "string"
								},
								"namespace": {
									"description": "Namespace defines the namespace of the referenced Traefik resource.",
									"type": "string"
								}
							}
							}
						}
					}
					}
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "IngressRouteTCP",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.IngressRouteTCPList": {
			"description": "IngressRouteTCPList is a list of IngressRouteTCP",
			"type": "object",
			"required": [
				"items"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"items": {
					"description": "List of ingressroutetcps. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
					"type": "array",
					"items": {
					"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteTCP"
					}
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
					}
					]
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "IngressRouteTCPList",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.IngressRouteUDP": {
			"description": "IngressRouteUDP is a CRD implementation of a Traefik UDP Router.",
			"type": "object",
			"required": [
				"metadata",
				"spec"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
					}
					]
				},
				"spec": {
					"description": "IngressRouteUDPSpec defines the desired state of a IngressRouteUDP.",
					"type": "object",
					"required": [
					"routes"
					],
					"properties": {
					"entryPoints": {
						"description": "EntryPoints defines the list of entry point names to bind to.\nEntry points have to be configured in the static configuration.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/entrypoints/\nDefault: all.",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"routes": {
						"description": "Routes defines the list of routes.",
						"type": "array",
						"items": {
							"description": "RouteUDP holds the UDP route configuration.",
							"type": "object",
							"properties": {
							"services": {
								"description": "Services defines the list of UDP services.",
								"type": "array",
								"items": {
									"description": "ServiceUDP defines an upstream UDP service to proxy traffic to.",
									"type": "object",
									"required": [
									"name",
									"port"
									],
									"properties": {
									"name": {
										"description": "Name defines the name of the referenced Kubernetes Service.",
										"type": "string"
									},
									"namespace": {
										"description": "Namespace defines the namespace of the referenced Kubernetes Service.",
										"type": "string"
									},
									"nativeLB": {
										"description": "NativeLB controls, when creating the load-balancer,\nwhether the LB's children are directly the pods IPs or if the only child is the Kubernetes Service clusterIP.\nThe Kubernetes Service itself does load-balance to the pods.\nBy default, NativeLB is false.",
										"type": "boolean"
									},
									"nodePortLB": {
										"description": "NodePortLB controls, when creating the load-balancer,\nwhether the LB's children are directly the nodes internal IPs using the nodePort when the service type is NodePort.\nIt allows services to be reachable when Traefik runs externally from the Kubernetes cluster but within the same network of the nodes.\nBy default, NodePortLB is false.",
										"type": "boolean"
									},
									"port": {
										"description": "Port defines the port of a Kubernetes Service.\nThis can be a reference to a named port.",
										"anyOf": [
											{
											"type": "integer"
											},
											{
											"type": "string"
											}
										],
										"x-kubernetes-int-or-string": true
									},
									"weight": {
										"description": "Weight defines the weight used when balancing requests between multiple Kubernetes Service.",
										"type": "integer"
									}
									}
								}
							}
							}
						}
					}
					}
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "IngressRouteUDP",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.IngressRouteUDPList": {
			"description": "IngressRouteUDPList is a list of IngressRouteUDP",
			"type": "object",
			"required": [
				"items"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"items": {
					"description": "List of ingressrouteudps. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
					"type": "array",
					"items": {
					"$ref": "#/components/schemas/io.traefik.v1alpha1.IngressRouteUDP"
					}
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
					}
					]
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "IngressRouteUDPList",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.Middleware": {
			"description": "Middleware is the CRD implementation of a Traefik Middleware.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/overview/",
			"type": "object",
			"required": [
				"metadata",
				"spec"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
					}
					]
				},
				"spec": {
					"description": "MiddlewareSpec defines the desired state of a Middleware.",
					"type": "object",
					"properties": {
					"addPrefix": {
						"description": "AddPrefix holds the add prefix middleware configuration.\nThis middleware updates the path of a request before forwarding it.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/addprefix/",
						"type": "object",
						"properties": {
							"prefix": {
							"description": "Prefix is the string to add before the current path in the requested URL.\nIt should include a leading slash (/).",
							"type": "string"
							}
						}
					},
					"basicAuth": {
						"description": "BasicAuth holds the basic auth middleware configuration.\nThis middleware restricts access to your services to known users.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/basicauth/",
						"type": "object",
						"properties": {
							"headerField": {
							"description": "HeaderField defines a header field to store the authenticated user.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/basicauth/#headerfield",
							"type": "string"
							},
							"realm": {
							"description": "Realm allows the protected resources on a server to be partitioned into a set of protection spaces, each with its own authentication scheme.\nDefault: traefik.",
							"type": "string"
							},
							"removeHeader": {
							"description": "RemoveHeader sets the removeHeader option to true to remove the authorization header before forwarding the request to your service.\nDefault: false.",
							"type": "boolean"
							},
							"secret": {
							"description": "Secret is the name of the referenced Kubernetes Secret containing user credentials.",
							"type": "string"
							}
						}
					},
					"buffering": {
						"description": "Buffering holds the buffering middleware configuration.\nThis middleware retries or limits the size of requests that can be forwarded to backends.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/buffering/#maxrequestbodybytes",
						"type": "object",
						"properties": {
							"maxRequestBodyBytes": {
							"description": "MaxRequestBodyBytes defines the maximum allowed body size for the request (in bytes).\nIf the request exceeds the allowed size, it is not forwarded to the service, and the client gets a 413 (Request Entity Too Large) response.\nDefault: 0 (no maximum).",
							"type": "integer",
							"format": "int64"
							},
							"maxResponseBodyBytes": {
							"description": "MaxResponseBodyBytes defines the maximum allowed response size from the service (in bytes).\nIf the response exceeds the allowed size, it is not forwarded to the client. The client gets a 500 (Internal Server Error) response instead.\nDefault: 0 (no maximum).",
							"type": "integer",
							"format": "int64"
							},
							"memRequestBodyBytes": {
							"description": "MemRequestBodyBytes defines the threshold (in bytes) from which the request will be buffered on disk instead of in memory.\nDefault: 1048576 (1Mi).",
							"type": "integer",
							"format": "int64"
							},
							"memResponseBodyBytes": {
							"description": "MemResponseBodyBytes defines the threshold (in bytes) from which the response will be buffered on disk instead of in memory.\nDefault: 1048576 (1Mi).",
							"type": "integer",
							"format": "int64"
							},
							"retryExpression": {
							"description": "RetryExpression defines the retry conditions.\nIt is a logical combination of functions with operators AND (&&) and OR (||).\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/buffering/#retryexpression",
							"type": "string"
							}
						}
					},
					"chain": {
						"description": "Chain holds the configuration of the chain middleware.\nThis middleware enables to define reusable combinations of other pieces of middleware.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/chain/",
						"type": "object",
						"properties": {
							"middlewares": {
							"description": "Middlewares is the list of MiddlewareRef which composes the chain.",
							"type": "array",
							"items": {
								"description": "MiddlewareRef is a reference to a Middleware resource.",
								"type": "object",
								"required": [
									"name"
								],
								"properties": {
									"name": {
									"description": "Name defines the name of the referenced Middleware resource.",
									"type": "string"
									},
									"namespace": {
									"description": "Namespace defines the namespace of the referenced Middleware resource.",
									"type": "string"
									}
								}
							}
							}
						}
					},
					"circuitBreaker": {
						"description": "CircuitBreaker holds the circuit breaker configuration.",
						"type": "object",
						"properties": {
							"checkPeriod": {
							"description": "CheckPeriod is the interval between successive checks of the circuit breaker condition (when in standby state).",
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"x-kubernetes-int-or-string": true
							},
							"expression": {
							"description": "Expression is the condition that triggers the tripped state.",
							"type": "string"
							},
							"fallbackDuration": {
							"description": "FallbackDuration is the duration for which the circuit breaker will wait before trying to recover (from a tripped state).",
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"x-kubernetes-int-or-string": true
							},
							"recoveryDuration": {
							"description": "RecoveryDuration is the duration for which the circuit breaker will try to recover (as soon as it is in recovering state).",
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"x-kubernetes-int-or-string": true
							},
							"responseCode": {
							"description": "ResponseCode is the status code that the circuit breaker will return while it is in the open state.",
							"type": "integer"
							}
						}
					},
					"compress": {
						"description": "Compress holds the compress middleware configuration.\nThis middleware compresses responses before sending them to the client, using gzip compression.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/compress/",
						"type": "object",
						"properties": {
							"defaultEncoding": {
							"description": "DefaultEncoding specifies the default encoding if the `Accept-Encoding` header is not in the request or contains a wildcard (`*`).",
							"type": "string"
							},
							"excludedContentTypes": {
							"description": "ExcludedContentTypes defines the list of content types to compare the Content-Type header of the incoming requests and responses before compressing.\n`application/grpc` is always excluded.",
							"type": "array",
							"items": {
								"type": "string"
							}
							},
							"includedContentTypes": {
							"description": "IncludedContentTypes defines the list of content types to compare the Content-Type header of the responses before compressing.",
							"type": "array",
							"items": {
								"type": "string"
							}
							},
							"minResponseBodyBytes": {
							"description": "MinResponseBodyBytes defines the minimum amount of bytes a response body must have to be compressed.\nDefault: 1024.",
							"type": "integer"
							}
						}
					},
					"contentType": {
						"description": "ContentType holds the content-type middleware configuration.\nThis middleware exists to enable the correct behavior until at least the default one can be changed in a future version.",
						"type": "object",
						"properties": {
							"autoDetect": {
							"description": "AutoDetect specifies whether to let the `Content-Type` header, if it has not been set by the backend,\nbe automatically set to a value derived from the contents of the response.\nDeprecated: AutoDetect option is deprecated, Content-Type middleware is only meant to be used to enable the content-type detection, please remove any usage of this option.",
							"type": "boolean"
							}
						}
					},
					"digestAuth": {
						"description": "DigestAuth holds the digest auth middleware configuration.\nThis middleware restricts access to your services to known users.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/digestauth/",
						"type": "object",
						"properties": {
							"headerField": {
							"description": "HeaderField defines a header field to store the authenticated user.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/basicauth/#headerfield",
							"type": "string"
							},
							"realm": {
							"description": "Realm allows the protected resources on a server to be partitioned into a set of protection spaces, each with its own authentication scheme.\nDefault: traefik.",
							"type": "string"
							},
							"removeHeader": {
							"description": "RemoveHeader defines whether to remove the authorization header before forwarding the request to the backend.",
							"type": "boolean"
							},
							"secret": {
							"description": "Secret is the name of the referenced Kubernetes Secret containing user credentials.",
							"type": "string"
							}
						}
					},
					"errors": {
						"description": "ErrorPage holds the custom error middleware configuration.\nThis middleware returns a custom page in lieu of the default, according to configured ranges of HTTP Status codes.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/errorpages/",
						"type": "object",
						"properties": {
							"query": {
							"description": "Query defines the URL for the error page (hosted by service).\nThe {status} variable can be used in order to insert the status code in the URL.",
							"type": "string"
							},
							"service": {
							"description": "Service defines the reference to a Kubernetes Service that will serve the error page.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/errorpages/#service",
							"type": "object",
							"required": [
								"name"
							],
							"properties": {
								"healthCheck": {
									"description": "Healthcheck defines health checks for ExternalName services.",
									"type": "object",
									"properties": {
									"followRedirects": {
										"description": "FollowRedirects defines whether redirects should be followed during the health check calls.\nDefault: true",
										"type": "boolean"
									},
									"headers": {
										"description": "Headers defines custom headers to be sent to the health check endpoint.",
										"type": "object",
										"additionalProperties": {
											"type": "string"
										}
									},
									"hostname": {
										"description": "Hostname defines the value of hostname in the Host header of the health check request.",
										"type": "string"
									},
									"interval": {
										"description": "Interval defines the frequency of the health check calls.\nDefault: 30s",
										"anyOf": [
											{
											"type": "integer"
											},
											{
											"type": "string"
											}
										],
										"x-kubernetes-int-or-string": true
									},
									"method": {
										"description": "Method defines the healthcheck method.",
										"type": "string"
									},
									"mode": {
										"description": "Mode defines the health check mode.\nIf defined to grpc, will use the gRPC health check protocol to probe the server.\nDefault: http",
										"type": "string"
									},
									"path": {
										"description": "Path defines the server URL path for the health check endpoint.",
										"type": "string"
									},
									"port": {
										"description": "Port defines the server URL port for the health check endpoint.",
										"type": "integer"
									},
									"scheme": {
										"description": "Scheme replaces the server URL scheme for the health check endpoint.",
										"type": "string"
									},
									"status": {
										"description": "Status defines the expected HTTP status code of the response to the health check request.",
										"type": "integer"
									},
									"timeout": {
										"description": "Timeout defines the maximum duration Traefik will wait for a health check request before considering the server unhealthy.\nDefault: 5s",
										"anyOf": [
											{
											"type": "integer"
											},
											{
											"type": "string"
											}
										],
										"x-kubernetes-int-or-string": true
									}
									}
								},
								"kind": {
									"description": "Kind defines the kind of the Service.",
									"type": "string",
									"enum": [
									"Service",
									"TraefikService"
									]
								},
								"name": {
									"description": "Name defines the name of the referenced Kubernetes Service or TraefikService.\nThe differentiation between the two is specified in the Kind field.",
									"type": "string"
								},
								"namespace": {
									"description": "Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.",
									"type": "string"
								},
								"nativeLB": {
									"description": "NativeLB controls, when creating the load-balancer,\nwhether the LB's children are directly the pods IPs or if the only child is the Kubernetes Service clusterIP.\nThe Kubernetes Service itself does load-balance to the pods.\nBy default, NativeLB is false.",
									"type": "boolean"
								},
								"nodePortLB": {
									"description": "NodePortLB controls, when creating the load-balancer,\nwhether the LB's children are directly the nodes internal IPs using the nodePort when the service type is NodePort.\nIt allows services to be reachable when Traefik runs externally from the Kubernetes cluster but within the same network of the nodes.\nBy default, NodePortLB is false.",
									"type": "boolean"
								},
								"passHostHeader": {
									"description": "PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service.\nBy default, passHostHeader is true.",
									"type": "boolean"
								},
								"port": {
									"description": "Port defines the port of a Kubernetes Service.\nThis can be a reference to a named port.",
									"anyOf": [
									{
										"type": "integer"
									},
									{
										"type": "string"
									}
									],
									"x-kubernetes-int-or-string": true
								},
								"responseForwarding": {
									"description": "ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.",
									"type": "object",
									"properties": {
									"flushInterval": {
										"description": "FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body.\nA negative value means to flush immediately after each write to the client.\nThis configuration is ignored when ReverseProxy recognizes a response as a streaming response;\nfor such responses, writes are flushed to the client immediately.\nDefault: 100ms",
										"type": "string"
									}
									}
								},
								"scheme": {
									"description": "Scheme defines the scheme to use for the request to the upstream Kubernetes Service.\nIt defaults to https when Kubernetes Service port is 443, http otherwise.",
									"type": "string"
								},
								"serversTransport": {
									"description": "ServersTransport defines the name of ServersTransport resource to use.\nIt allows to configure the transport between Traefik and your servers.\nCan only be used on a Kubernetes Service.",
									"type": "string"
								},
								"sticky": {
									"description": "Sticky defines the sticky sessions configuration.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/services/#sticky-sessions",
									"type": "object",
									"properties": {
									"cookie": {
										"description": "Cookie defines the sticky cookie configuration.",
										"type": "object",
										"properties": {
											"httpOnly": {
											"description": "HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.",
											"type": "boolean"
											},
											"maxAge": {
											"description": "MaxAge indicates the number of seconds until the cookie expires.\nWhen set to a negative number, the cookie expires immediately.\nWhen set to zero, the cookie never expires.",
											"type": "integer"
											},
											"name": {
											"description": "Name defines the Cookie name.",
											"type": "string"
											},
											"sameSite": {
											"description": "SameSite defines the same site policy.\nMore info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite",
											"type": "string"
											},
											"secure": {
											"description": "Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).",
											"type": "boolean"
											}
										}
									}
									}
								},
								"strategy": {
									"description": "Strategy defines the load balancing strategy between the servers.\nRoundRobin is the only supported value at the moment.",
									"type": "string"
								},
								"weight": {
									"description": "Weight defines the weight and should only be specified when Name references a TraefikService object\n(and to be precise, one that embeds a Weighted Round Robin).",
									"type": "integer"
								}
							}
							},
							"status": {
							"description": "Status defines which status or range of statuses should result in an error page.\nIt can be either a status code as a number (500),\nas multiple comma-separated numbers (500,502),\nas ranges by separating two codes with a dash (500-599),\nor a combination of the two (404,418,500-599).",
							"type": "array",
							"items": {
								"type": "string"
							}
							}
						}
					},
					"forwardAuth": {
						"description": "ForwardAuth holds the forward auth middleware configuration.\nThis middleware delegates the request authentication to a Service.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/forwardauth/",
						"type": "object",
						"properties": {
							"addAuthCookiesToResponse": {
							"description": "AddAuthCookiesToResponse defines the list of cookies to copy from the authentication server response to the response.",
							"type": "array",
							"items": {
								"type": "string"
							}
							},
							"address": {
							"description": "Address defines the authentication server address.",
							"type": "string"
							},
							"authRequestHeaders": {
							"description": "AuthRequestHeaders defines the list of the headers to copy from the request to the authentication server.\nIf not set or empty then all request headers are passed.",
							"type": "array",
							"items": {
								"type": "string"
							}
							},
							"authResponseHeaders": {
							"description": "AuthResponseHeaders defines the list of headers to copy from the authentication server response and set on forwarded request, replacing any existing conflicting headers.",
							"type": "array",
							"items": {
								"type": "string"
							}
							},
							"authResponseHeadersRegex": {
							"description": "AuthResponseHeadersRegex defines the regex to match headers to copy from the authentication server response and set on forwarded request, after stripping all headers that match the regex.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/forwardauth/#authresponseheadersregex",
							"type": "string"
							},
							"tls": {
							"description": "TLS defines the configuration used to secure the connection to the authentication server.",
							"type": "object",
							"properties": {
								"caOptional": {
									"description": "Deprecated: TLS client authentication is a server side option (see https://github.com/golang/go/blob/740a490f71d026bb7d2d13cb8fa2d6d6e0572b70/src/crypto/tls/common.go#L634).",
									"type": "boolean"
								},
								"caSecret": {
									"description": "CASecret is the name of the referenced Kubernetes Secret containing the CA to validate the server certificate.\nThe CA certificate is extracted from key `tls.ca` or `ca.crt`.",
									"type": "string"
								},
								"certSecret": {
									"description": "CertSecret is the name of the referenced Kubernetes Secret containing the client certificate.\nThe client certificate is extracted from the keys `tls.crt` and `tls.key`.",
									"type": "string"
								},
								"insecureSkipVerify": {
									"description": "InsecureSkipVerify defines whether the server certificates should be validated.",
									"type": "boolean"
								}
							}
							},
							"trustForwardHeader": {
							"description": "TrustForwardHeader defines whether to trust (ie: forward) all X-Forwarded-* headers.",
							"type": "boolean"
							}
						}
					},
					"grpcWeb": {
						"description": "GrpcWeb holds the gRPC web middleware configuration.\nThis middleware converts a gRPC web request to an HTTP/2 gRPC request.",
						"type": "object",
						"properties": {
							"allowOrigins": {
							"description": "AllowOrigins is a list of allowable origins.\nCan also be a wildcard origin \"*\".",
							"type": "array",
							"items": {
								"type": "string"
							}
							}
						}
					},
					"headers": {
						"description": "Headers holds the headers middleware configuration.\nThis middleware manages the requests and responses headers.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/headers/#customrequestheaders",
						"type": "object",
						"properties": {
							"accessControlAllowCredentials": {
							"description": "AccessControlAllowCredentials defines whether the request can include user credentials.",
							"type": "boolean"
							},
							"accessControlAllowHeaders": {
							"description": "AccessControlAllowHeaders defines the Access-Control-Request-Headers values sent in preflight response.",
							"type": "array",
							"items": {
								"type": "string"
							}
							},
							"accessControlAllowMethods": {
							"description": "AccessControlAllowMethods defines the Access-Control-Request-Method values sent in preflight response.",
							"type": "array",
							"items": {
								"type": "string"
							}
							},
							"accessControlAllowOriginList": {
							"description": "AccessControlAllowOriginList is a list of allowable origins. Can also be a wildcard origin \"*\".",
							"type": "array",
							"items": {
								"type": "string"
							}
							},
							"accessControlAllowOriginListRegex": {
							"description": "AccessControlAllowOriginListRegex is a list of allowable origins written following the Regular Expression syntax (https://golang.org/pkg/regexp/).",
							"type": "array",
							"items": {
								"type": "string"
							}
							},
							"accessControlExposeHeaders": {
							"description": "AccessControlExposeHeaders defines the Access-Control-Expose-Headers values sent in preflight response.",
							"type": "array",
							"items": {
								"type": "string"
							}
							},
							"accessControlMaxAge": {
							"description": "AccessControlMaxAge defines the time that a preflight request may be cached.",
							"type": "integer",
							"format": "int64"
							},
							"addVaryHeader": {
							"description": "AddVaryHeader defines whether the Vary header is automatically added/updated when the AccessControlAllowOriginList is set.",
							"type": "boolean"
							},
							"allowedHosts": {
							"description": "AllowedHosts defines the fully qualified list of allowed domain names.",
							"type": "array",
							"items": {
								"type": "string"
							}
							},
							"browserXssFilter": {
							"description": "BrowserXSSFilter defines whether to add the X-XSS-Protection header with the value 1; mode=block.",
							"type": "boolean"
							},
							"contentSecurityPolicy": {
							"description": "ContentSecurityPolicy defines the Content-Security-Policy header value.",
							"type": "string"
							},
							"contentSecurityPolicyReportOnly": {
							"description": "ContentSecurityPolicyReportOnly defines the Content-Security-Policy-Report-Only header value.",
							"type": "string"
							},
							"contentTypeNosniff": {
							"description": "ContentTypeNosniff defines whether to add the X-Content-Type-Options header with the nosniff value.",
							"type": "boolean"
							},
							"customBrowserXSSValue": {
							"description": "CustomBrowserXSSValue defines the X-XSS-Protection header value.\nThis overrides the BrowserXssFilter option.",
							"type": "string"
							},
							"customFrameOptionsValue": {
							"description": "CustomFrameOptionsValue defines the X-Frame-Options header value.\nThis overrides the FrameDeny option.",
							"type": "string"
							},
							"customRequestHeaders": {
							"description": "CustomRequestHeaders defines the header names and values to apply to the request.",
							"type": "object",
							"additionalProperties": {
								"type": "string"
							}
							},
							"customResponseHeaders": {
							"description": "CustomResponseHeaders defines the header names and values to apply to the response.",
							"type": "object",
							"additionalProperties": {
								"type": "string"
							}
							},
							"featurePolicy": {
							"description": "Deprecated: FeaturePolicy option is deprecated, please use PermissionsPolicy instead.",
							"type": "string"
							},
							"forceSTSHeader": {
							"description": "ForceSTSHeader defines whether to add the STS header even when the connection is HTTP.",
							"type": "boolean"
							},
							"frameDeny": {
							"description": "FrameDeny defines whether to add the X-Frame-Options header with the DENY value.",
							"type": "boolean"
							},
							"hostsProxyHeaders": {
							"description": "HostsProxyHeaders defines the header keys that may hold a proxied hostname value for the request.",
							"type": "array",
							"items": {
								"type": "string"
							}
							},
							"isDevelopment": {
							"description": "IsDevelopment defines whether to mitigate the unwanted effects of the AllowedHosts, SSL, and STS options when developing.\nUsually testing takes place using HTTP, not HTTPS, and on localhost, not your production domain.\nIf you would like your development environment to mimic production with complete Host blocking, SSL redirects,\nand STS headers, leave this as false.",
							"type": "boolean"
							},
							"permissionsPolicy": {
							"description": "PermissionsPolicy defines the Permissions-Policy header value.\nThis allows sites to control browser features.",
							"type": "string"
							},
							"publicKey": {
							"description": "PublicKey is the public key that implements HPKP to prevent MITM attacks with forged certificates.",
							"type": "string"
							},
							"referrerPolicy": {
							"description": "ReferrerPolicy defines the Referrer-Policy header value.\nThis allows sites to control whether browsers forward the Referer header to other sites.",
							"type": "string"
							},
							"sslForceHost": {
							"description": "Deprecated: SSLForceHost option is deprecated, please use RedirectRegex instead.",
							"type": "boolean"
							},
							"sslHost": {
							"description": "Deprecated: SSLHost option is deprecated, please use RedirectRegex instead.",
							"type": "string"
							},
							"sslProxyHeaders": {
							"description": "SSLProxyHeaders defines the header keys with associated values that would indicate a valid HTTPS request.\nIt can be useful when using other proxies (example: \"X-Forwarded-Proto\": \"https\").",
							"type": "object",
							"additionalProperties": {
								"type": "string"
							}
							},
							"sslRedirect": {
							"description": "Deprecated: SSLRedirect option is deprecated, please use EntryPoint redirection or RedirectScheme instead.",
							"type": "boolean"
							},
							"sslTemporaryRedirect": {
							"description": "Deprecated: SSLTemporaryRedirect option is deprecated, please use EntryPoint redirection or RedirectScheme instead.",
							"type": "boolean"
							},
							"stsIncludeSubdomains": {
							"description": "STSIncludeSubdomains defines whether the includeSubDomains directive is appended to the Strict-Transport-Security header.",
							"type": "boolean"
							},
							"stsPreload": {
							"description": "STSPreload defines whether the preload flag is appended to the Strict-Transport-Security header.",
							"type": "boolean"
							},
							"stsSeconds": {
							"description": "STSSeconds defines the max-age of the Strict-Transport-Security header.\nIf set to 0, the header is not set.",
							"type": "integer",
							"format": "int64"
							}
						}
					},
					"inFlightReq": {
						"description": "InFlightReq holds the in-flight request middleware configuration.\nThis middleware limits the number of requests being processed and served concurrently.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/inflightreq/",
						"type": "object",
						"properties": {
							"amount": {
							"description": "Amount defines the maximum amount of allowed simultaneous in-flight request.\nThe middleware responds with HTTP 429 Too Many Requests if there are already amount requests in progress (based on the same sourceCriterion strategy).",
							"type": "integer",
							"format": "int64"
							},
							"sourceCriterion": {
							"description": "SourceCriterion defines what criterion is used to group requests as originating from a common source.\nIf several strategies are defined at the same time, an error will be raised.\nIf none are set, the default is to use the requestHost.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/inflightreq/#sourcecriterion",
							"type": "object",
							"properties": {
								"ipStrategy": {
									"description": "IPStrategy holds the IP strategy configuration used by Traefik to determine the client IP.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/ipallowlist/#ipstrategy",
									"type": "object",
									"properties": {
									"depth": {
										"description": "Depth tells Traefik to use the X-Forwarded-For header and take the IP located at the depth position (starting from the right).",
										"type": "integer"
									},
									"excludedIPs": {
										"description": "ExcludedIPs configures Traefik to scan the X-Forwarded-For header and select the first IP not in the list.",
										"type": "array",
										"items": {
											"type": "string"
										}
									}
									}
								},
								"requestHeaderName": {
									"description": "RequestHeaderName defines the name of the header used to group incoming requests.",
									"type": "string"
								},
								"requestHost": {
									"description": "RequestHost defines whether to consider the request Host as the source.",
									"type": "boolean"
								}
							}
							}
						}
					},
					"ipAllowList": {
						"description": "IPAllowList holds the IP allowlist middleware configuration.\nThis middleware limits allowed requests based on the client IP.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/ipallowlist/",
						"type": "object",
						"properties": {
							"ipStrategy": {
							"description": "IPStrategy holds the IP strategy configuration used by Traefik to determine the client IP.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/ipallowlist/#ipstrategy",
							"type": "object",
							"properties": {
								"depth": {
									"description": "Depth tells Traefik to use the X-Forwarded-For header and take the IP located at the depth position (starting from the right).",
									"type": "integer"
								},
								"excludedIPs": {
									"description": "ExcludedIPs configures Traefik to scan the X-Forwarded-For header and select the first IP not in the list.",
									"type": "array",
									"items": {
									"type": "string"
									}
								}
							}
							},
							"rejectStatusCode": {
							"description": "RejectStatusCode defines the HTTP status code used for refused requests.\nIf not set, the default is 403 (Forbidden).",
							"type": "integer"
							},
							"sourceRange": {
							"description": "SourceRange defines the set of allowed IPs (or ranges of allowed IPs by using CIDR notation).",
							"type": "array",
							"items": {
								"type": "string"
							}
							}
						}
					},
					"ipWhiteList": {
						"description": "Deprecated: please use IPAllowList instead.",
						"type": "object",
						"properties": {
							"ipStrategy": {
							"description": "IPStrategy holds the IP strategy configuration used by Traefik to determine the client IP.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/ipallowlist/#ipstrategy",
							"type": "object",
							"properties": {
								"depth": {
									"description": "Depth tells Traefik to use the X-Forwarded-For header and take the IP located at the depth position (starting from the right).",
									"type": "integer"
								},
								"excludedIPs": {
									"description": "ExcludedIPs configures Traefik to scan the X-Forwarded-For header and select the first IP not in the list.",
									"type": "array",
									"items": {
									"type": "string"
									}
								}
							}
							},
							"sourceRange": {
							"description": "SourceRange defines the set of allowed IPs (or ranges of allowed IPs by using CIDR notation). Required.",
							"type": "array",
							"items": {
								"type": "string"
							}
							}
						}
					},
					"passTLSClientCert": {
						"description": "PassTLSClientCert holds the pass TLS client cert middleware configuration.\nThis middleware adds the selected data from the passed client TLS certificate to a header.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/passtlsclientcert/",
						"type": "object",
						"properties": {
							"info": {
							"description": "Info selects the specific client certificate details you want to add to the X-Forwarded-Tls-Client-Cert-Info header.",
							"type": "object",
							"properties": {
								"issuer": {
									"description": "Issuer defines the client certificate issuer details to add to the X-Forwarded-Tls-Client-Cert-Info header.",
									"type": "object",
									"properties": {
									"commonName": {
										"description": "CommonName defines whether to add the organizationalUnit information into the issuer.",
										"type": "boolean"
									},
									"country": {
										"description": "Country defines whether to add the country information into the issuer.",
										"type": "boolean"
									},
									"domainComponent": {
										"description": "DomainComponent defines whether to add the domainComponent information into the issuer.",
										"type": "boolean"
									},
									"locality": {
										"description": "Locality defines whether to add the locality information into the issuer.",
										"type": "boolean"
									},
									"organization": {
										"description": "Organization defines whether to add the organization information into the issuer.",
										"type": "boolean"
									},
									"province": {
										"description": "Province defines whether to add the province information into the issuer.",
										"type": "boolean"
									},
									"serialNumber": {
										"description": "SerialNumber defines whether to add the serialNumber information into the issuer.",
										"type": "boolean"
									}
									}
								},
								"notAfter": {
									"description": "NotAfter defines whether to add the Not After information from the Validity part.",
									"type": "boolean"
								},
								"notBefore": {
									"description": "NotBefore defines whether to add the Not Before information from the Validity part.",
									"type": "boolean"
								},
								"sans": {
									"description": "Sans defines whether to add the Subject Alternative Name information from the Subject Alternative Name part.",
									"type": "boolean"
								},
								"serialNumber": {
									"description": "SerialNumber defines whether to add the client serialNumber information.",
									"type": "boolean"
								},
								"subject": {
									"description": "Subject defines the client certificate subject details to add to the X-Forwarded-Tls-Client-Cert-Info header.",
									"type": "object",
									"properties": {
									"commonName": {
										"description": "CommonName defines whether to add the organizationalUnit information into the subject.",
										"type": "boolean"
									},
									"country": {
										"description": "Country defines whether to add the country information into the subject.",
										"type": "boolean"
									},
									"domainComponent": {
										"description": "DomainComponent defines whether to add the domainComponent information into the subject.",
										"type": "boolean"
									},
									"locality": {
										"description": "Locality defines whether to add the locality information into the subject.",
										"type": "boolean"
									},
									"organization": {
										"description": "Organization defines whether to add the organization information into the subject.",
										"type": "boolean"
									},
									"organizationalUnit": {
										"description": "OrganizationalUnit defines whether to add the organizationalUnit information into the subject.",
										"type": "boolean"
									},
									"province": {
										"description": "Province defines whether to add the province information into the subject.",
										"type": "boolean"
									},
									"serialNumber": {
										"description": "SerialNumber defines whether to add the serialNumber information into the subject.",
										"type": "boolean"
									}
									}
								}
							}
							},
							"pem": {
							"description": "PEM sets the X-Forwarded-Tls-Client-Cert header with the certificate.",
							"type": "boolean"
							}
						}
					},
					"plugin": {
						"description": "Plugin defines the middleware plugin configuration.\nMore info: https://doc.traefik.io/traefik/plugins/",
						"type": "object",
						"additionalProperties": {
							"x-kubernetes-preserve-unknown-fields": true
						}
					},
					"rateLimit": {
						"description": "RateLimit holds the rate limit configuration.\nThis middleware ensures that services will receive a fair amount of requests, and allows one to define what fair is.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/ratelimit/",
						"type": "object",
						"properties": {
							"average": {
							"description": "Average is the maximum rate, by default in requests/s, allowed for the given source.\nIt defaults to 0, which means no rate limiting.\nThe rate is actually defined by dividing Average by Period. So for a rate below 1req/s,\none needs to define a Period larger than a second.",
							"type": "integer",
							"format": "int64"
							},
							"burst": {
							"description": "Burst is the maximum number of requests allowed to arrive in the same arbitrarily small period of time.\nIt defaults to 1.",
							"type": "integer",
							"format": "int64"
							},
							"period": {
							"description": "Period, in combination with Average, defines the actual maximum rate, such as:\nr = Average / Period. It defaults to a second.",
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"x-kubernetes-int-or-string": true
							},
							"sourceCriterion": {
							"description": "SourceCriterion defines what criterion is used to group requests as originating from a common source.\nIf several strategies are defined at the same time, an error will be raised.\nIf none are set, the default is to use the request's remote address field (as an ipStrategy).",
							"type": "object",
							"properties": {
								"ipStrategy": {
									"description": "IPStrategy holds the IP strategy configuration used by Traefik to determine the client IP.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/ipallowlist/#ipstrategy",
									"type": "object",
									"properties": {
									"depth": {
										"description": "Depth tells Traefik to use the X-Forwarded-For header and take the IP located at the depth position (starting from the right).",
										"type": "integer"
									},
									"excludedIPs": {
										"description": "ExcludedIPs configures Traefik to scan the X-Forwarded-For header and select the first IP not in the list.",
										"type": "array",
										"items": {
											"type": "string"
										}
									}
									}
								},
								"requestHeaderName": {
									"description": "RequestHeaderName defines the name of the header used to group incoming requests.",
									"type": "string"
								},
								"requestHost": {
									"description": "RequestHost defines whether to consider the request Host as the source.",
									"type": "boolean"
								}
							}
							}
						}
					},
					"redirectRegex": {
						"description": "RedirectRegex holds the redirect regex middleware configuration.\nThis middleware redirects a request using regex matching and replacement.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/redirectregex/#regex",
						"type": "object",
						"properties": {
							"permanent": {
							"description": "Permanent defines whether the redirection is permanent (301).",
							"type": "boolean"
							},
							"regex": {
							"description": "Regex defines the regex used to match and capture elements from the request URL.",
							"type": "string"
							},
							"replacement": {
							"description": "Replacement defines how to modify the URL to have the new target URL.",
							"type": "string"
							}
						}
					},
					"redirectScheme": {
						"description": "RedirectScheme holds the redirect scheme middleware configuration.\nThis middleware redirects requests from a scheme/port to another.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/redirectscheme/",
						"type": "object",
						"properties": {
							"permanent": {
							"description": "Permanent defines whether the redirection is permanent (301).",
							"type": "boolean"
							},
							"port": {
							"description": "Port defines the port of the new URL.",
							"type": "string"
							},
							"scheme": {
							"description": "Scheme defines the scheme of the new URL.",
							"type": "string"
							}
						}
					},
					"replacePath": {
						"description": "ReplacePath holds the replace path middleware configuration.\nThis middleware replaces the path of the request URL and store the original path in an X-Replaced-Path header.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/replacepath/",
						"type": "object",
						"properties": {
							"path": {
							"description": "Path defines the path to use as replacement in the request URL.",
							"type": "string"
							}
						}
					},
					"replacePathRegex": {
						"description": "ReplacePathRegex holds the replace path regex middleware configuration.\nThis middleware replaces the path of a URL using regex matching and replacement.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/replacepathregex/",
						"type": "object",
						"properties": {
							"regex": {
							"description": "Regex defines the regular expression used to match and capture the path from the request URL.",
							"type": "string"
							},
							"replacement": {
							"description": "Replacement defines the replacement path format, which can include captured variables.",
							"type": "string"
							}
						}
					},
					"retry": {
						"description": "Retry holds the retry middleware configuration.\nThis middleware reissues requests a given number of times to a backend server if that server does not reply.\nAs soon as the server answers, the middleware stops retrying, regardless of the response status.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/retry/",
						"type": "object",
						"properties": {
							"attempts": {
							"description": "Attempts defines how many times the request should be retried.",
							"type": "integer"
							},
							"initialInterval": {
							"description": "InitialInterval defines the first wait time in the exponential backoff series.\nThe maximum interval is calculated as twice the initialInterval.\nIf unspecified, requests will be retried immediately.\nThe value of initialInterval should be provided in seconds or as a valid duration format,\nsee https://pkg.go.dev/time#ParseDuration.",
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"x-kubernetes-int-or-string": true
							}
						}
					},
					"stripPrefix": {
						"description": "StripPrefix holds the strip prefix middleware configuration.\nThis middleware removes the specified prefixes from the URL path.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/stripprefix/",
						"type": "object",
						"properties": {
							"forceSlash": {
							"description": "Deprecated: ForceSlash option is deprecated, please remove any usage of this option.\nForceSlash ensures that the resulting stripped path is not the empty string, by replacing it with / when necessary.\nDefault: true.",
							"type": "boolean"
							},
							"prefixes": {
							"description": "Prefixes defines the prefixes to strip from the request URL.",
							"type": "array",
							"items": {
								"type": "string"
							}
							}
						}
					},
					"stripPrefixRegex": {
						"description": "StripPrefixRegex holds the strip prefix regex middleware configuration.\nThis middleware removes the matching prefixes from the URL path.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/http/stripprefixregex/",
						"type": "object",
						"properties": {
							"regex": {
							"description": "Regex defines the regular expression to match the path prefix from the request URL.",
							"type": "array",
							"items": {
								"type": "string"
							}
							}
						}
					}
					}
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "Middleware",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.MiddlewareList": {
			"description": "MiddlewareList is a list of Middleware",
			"type": "object",
			"required": [
				"items"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"items": {
					"description": "List of middlewares. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
					"type": "array",
					"items": {
					"$ref": "#/components/schemas/io.traefik.v1alpha1.Middleware"
					}
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
					}
					]
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "MiddlewareList",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.MiddlewareTCP": {
			"description": "MiddlewareTCP is the CRD implementation of a Traefik TCP middleware.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/overview/",
			"type": "object",
			"required": [
				"metadata",
				"spec"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
					}
					]
				},
				"spec": {
					"description": "MiddlewareTCPSpec defines the desired state of a MiddlewareTCP.",
					"type": "object",
					"properties": {
					"inFlightConn": {
						"description": "InFlightConn defines the InFlightConn middleware configuration.",
						"type": "object",
						"properties": {
							"amount": {
							"description": "Amount defines the maximum amount of allowed simultaneous connections.\nThe middleware closes the connection if there are already amount connections opened.",
							"type": "integer",
							"format": "int64"
							}
						}
					},
					"ipAllowList": {
						"description": "IPAllowList defines the IPAllowList middleware configuration.\nThis middleware accepts/refuses connections based on the client IP.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/tcp/ipallowlist/",
						"type": "object",
						"properties": {
							"sourceRange": {
							"description": "SourceRange defines the allowed IPs (or ranges of allowed IPs by using CIDR notation).",
							"type": "array",
							"items": {
								"type": "string"
							}
							}
						}
					},
					"ipWhiteList": {
						"description": "IPWhiteList defines the IPWhiteList middleware configuration.\nThis middleware accepts/refuses connections based on the client IP.\nDeprecated: please use IPAllowList instead.\nMore info: https://doc.traefik.io/traefik/v3.1/middlewares/tcp/ipwhitelist/",
						"type": "object",
						"properties": {
							"sourceRange": {
							"description": "SourceRange defines the allowed IPs (or ranges of allowed IPs by using CIDR notation).",
							"type": "array",
							"items": {
								"type": "string"
							}
							}
						}
					}
					}
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "MiddlewareTCP",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.MiddlewareTCPList": {
			"description": "MiddlewareTCPList is a list of MiddlewareTCP",
			"type": "object",
			"required": [
				"items"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"items": {
					"description": "List of middlewaretcps. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
					"type": "array",
					"items": {
					"$ref": "#/components/schemas/io.traefik.v1alpha1.MiddlewareTCP"
					}
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
					}
					]
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "MiddlewareTCPList",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.ServersTransport": {
			"description": "ServersTransport is the CRD implementation of a ServersTransport.\nIf no serversTransport is specified, the default@internal will be used.\nThe default@internal serversTransport is created from the static configuration.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/services/#serverstransport_1",
			"type": "object",
			"required": [
				"metadata",
				"spec"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
					}
					]
				},
				"spec": {
					"description": "ServersTransportSpec defines the desired state of a ServersTransport.",
					"type": "object",
					"properties": {
					"certificatesSecrets": {
						"description": "CertificatesSecrets defines a list of secret storing client certificates for mTLS.",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"disableHTTP2": {
						"description": "DisableHTTP2 disables HTTP/2 for connections with backend servers.",
						"type": "boolean"
					},
					"forwardingTimeouts": {
						"description": "ForwardingTimeouts defines the timeouts for requests forwarded to the backend servers.",
						"type": "object",
						"properties": {
							"dialTimeout": {
							"description": "DialTimeout is the amount of time to wait until a connection to a backend server can be established.",
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"x-kubernetes-int-or-string": true
							},
							"idleConnTimeout": {
							"description": "IdleConnTimeout is the maximum period for which an idle HTTP keep-alive connection will remain open before closing itself.",
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"x-kubernetes-int-or-string": true
							},
							"pingTimeout": {
							"description": "PingTimeout is the timeout after which the HTTP/2 connection will be closed if a response to ping is not received.",
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"x-kubernetes-int-or-string": true
							},
							"readIdleTimeout": {
							"description": "ReadIdleTimeout is the timeout after which a health check using ping frame will be carried out if no frame is received on the HTTP/2 connection.",
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"x-kubernetes-int-or-string": true
							},
							"responseHeaderTimeout": {
							"description": "ResponseHeaderTimeout is the amount of time to wait for a server's response headers after fully writing the request (including its body, if any).",
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"x-kubernetes-int-or-string": true
							}
						}
					},
					"insecureSkipVerify": {
						"description": "InsecureSkipVerify disables SSL certificate verification.",
						"type": "boolean"
					},
					"maxIdleConnsPerHost": {
						"description": "MaxIdleConnsPerHost controls the maximum idle (keep-alive) to keep per-host.",
						"type": "integer"
					},
					"peerCertURI": {
						"description": "PeerCertURI defines the peer cert URI used to match against SAN URI during the peer certificate verification.",
						"type": "string"
					},
					"rootCAsSecrets": {
						"description": "RootCAsSecrets defines a list of CA secret used to validate self-signed certificate.",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"serverName": {
						"description": "ServerName defines the server name used to contact the server.",
						"type": "string"
					},
					"spiffe": {
						"description": "Spiffe defines the SPIFFE configuration.",
						"type": "object",
						"properties": {
							"ids": {
							"description": "IDs defines the allowed SPIFFE IDs (takes precedence over the SPIFFE TrustDomain).",
							"type": "array",
							"items": {
								"type": "string"
							}
							},
							"trustDomain": {
							"description": "TrustDomain defines the allowed SPIFFE trust domain.",
							"type": "string"
							}
						}
					}
					}
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "ServersTransport",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.ServersTransportList": {
			"description": "ServersTransportList is a list of ServersTransport",
			"type": "object",
			"required": [
				"items"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"items": {
					"description": "List of serverstransports. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
					"type": "array",
					"items": {
					"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransport"
					}
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
					}
					]
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "ServersTransportList",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.ServersTransportTCP": {
			"description": "ServersTransportTCP is the CRD implementation of a TCPServersTransport.\nIf no tcpServersTransport is specified, a default one named default@internal will be used.\nThe default@internal tcpServersTransport can be configured in the static configuration.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/services/#serverstransport_3",
			"type": "object",
			"required": [
				"metadata",
				"spec"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
					}
					]
				},
				"spec": {
					"description": "ServersTransportTCPSpec defines the desired state of a ServersTransportTCP.",
					"type": "object",
					"properties": {
					"dialKeepAlive": {
						"description": "DialKeepAlive is the interval between keep-alive probes for an active network connection. If zero, keep-alive probes are sent with a default value (currently 15 seconds), if supported by the protocol and operating system. Network protocols or operating systems that do not support keep-alives ignore this field. If negative, keep-alive probes are disabled.",
						"anyOf": [
							{
							"type": "integer"
							},
							{
							"type": "string"
							}
						],
						"x-kubernetes-int-or-string": true
					},
					"dialTimeout": {
						"description": "DialTimeout is the amount of time to wait until a connection to a backend server can be established.",
						"anyOf": [
							{
							"type": "integer"
							},
							{
							"type": "string"
							}
						],
						"x-kubernetes-int-or-string": true
					},
					"terminationDelay": {
						"description": "TerminationDelay defines the delay to wait before fully terminating the connection, after one connected peer has closed its writing capability.",
						"anyOf": [
							{
							"type": "integer"
							},
							{
							"type": "string"
							}
						],
						"x-kubernetes-int-or-string": true
					},
					"tls": {
						"description": "TLS defines the TLS configuration",
						"type": "object",
						"properties": {
							"certificatesSecrets": {
							"description": "CertificatesSecrets defines a list of secret storing client certificates for mTLS.",
							"type": "array",
							"items": {
								"type": "string"
							}
							},
							"insecureSkipVerify": {
							"description": "InsecureSkipVerify disables TLS certificate verification.",
							"type": "boolean"
							},
							"peerCertURI": {
							"description": "MaxIdleConnsPerHost controls the maximum idle (keep-alive) to keep per-host.\nPeerCertURI defines the peer cert URI used to match against SAN URI during the peer certificate verification.",
							"type": "string"
							},
							"rootCAsSecrets": {
							"description": "RootCAsSecrets defines a list of CA secret used to validate self-signed certificates.",
							"type": "array",
							"items": {
								"type": "string"
							}
							},
							"serverName": {
							"description": "ServerName defines the server name used to contact the server.",
							"type": "string"
							},
							"spiffe": {
							"description": "Spiffe defines the SPIFFE configuration.",
							"type": "object",
							"properties": {
								"ids": {
									"description": "IDs defines the allowed SPIFFE IDs (takes precedence over the SPIFFE TrustDomain).",
									"type": "array",
									"items": {
									"type": "string"
									}
								},
								"trustDomain": {
									"description": "TrustDomain defines the allowed SPIFFE trust domain.",
									"type": "string"
								}
							}
							}
						}
					}
					}
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "ServersTransportTCP",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.ServersTransportTCPList": {
			"description": "ServersTransportTCPList is a list of ServersTransportTCP",
			"type": "object",
			"required": [
				"items"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"items": {
					"description": "List of serverstransporttcps. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
					"type": "array",
					"items": {
					"$ref": "#/components/schemas/io.traefik.v1alpha1.ServersTransportTCP"
					}
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
					}
					]
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "ServersTransportTCPList",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.TLSOption": {
			"description": "TLSOption is the CRD implementation of a Traefik TLS Option, allowing to configure some parameters of the TLS connection.\nMore info: https://doc.traefik.io/traefik/v3.1/https/tls/#tls-options",
			"type": "object",
			"required": [
				"metadata",
				"spec"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
					}
					]
				},
				"spec": {
					"description": "TLSOptionSpec defines the desired state of a TLSOption.",
					"type": "object",
					"properties": {
					"alpnProtocols": {
						"description": "ALPNProtocols defines the list of supported application level protocols for the TLS handshake, in order of preference.\nMore info: https://doc.traefik.io/traefik/v3.1/https/tls/#alpn-protocols",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"cipherSuites": {
						"description": "CipherSuites defines the list of supported cipher suites for TLS versions up to TLS 1.2.\nMore info: https://doc.traefik.io/traefik/v3.1/https/tls/#cipher-suites",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"clientAuth": {
						"description": "ClientAuth defines the server's policy for TLS Client Authentication.",
						"type": "object",
						"properties": {
							"clientAuthType": {
							"description": "ClientAuthType defines the client authentication type to apply.",
							"type": "string",
							"enum": [
								"NoClientCert",
								"RequestClientCert",
								"RequireAnyClientCert",
								"VerifyClientCertIfGiven",
								"RequireAndVerifyClientCert"
							]
							},
							"secretNames": {
							"description": "SecretNames defines the names of the referenced Kubernetes Secret storing certificate details.",
							"type": "array",
							"items": {
								"type": "string"
							}
							}
						}
					},
					"curvePreferences": {
						"description": "CurvePreferences defines the preferred elliptic curves in a specific order.\nMore info: https://doc.traefik.io/traefik/v3.1/https/tls/#curve-preferences",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"maxVersion": {
						"description": "MaxVersion defines the maximum TLS version that Traefik will accept.\nPossible values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.\nDefault: None.",
						"type": "string"
					},
					"minVersion": {
						"description": "MinVersion defines the minimum TLS version that Traefik will accept.\nPossible values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.\nDefault: VersionTLS10.",
						"type": "string"
					},
					"preferServerCipherSuites": {
						"description": "PreferServerCipherSuites defines whether the server chooses a cipher suite among his own instead of among the client's.\nIt is enabled automatically when minVersion or maxVersion is set.\nDeprecated: https://github.com/golang/go/issues/45430",
						"type": "boolean"
					},
					"sniStrict": {
						"description": "SniStrict defines whether Traefik allows connections from clients connections that do not specify a server_name extension.",
						"type": "boolean"
					}
					}
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "TLSOption",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.TLSOptionList": {
			"description": "TLSOptionList is a list of TLSOption",
			"type": "object",
			"required": [
				"items"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"items": {
					"description": "List of tlsoptions. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
					"type": "array",
					"items": {
					"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSOption"
					}
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
					}
					]
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "TLSOptionList",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.TLSStore": {
			"description": "TLSStore is the CRD implementation of a Traefik TLS Store.\nFor the time being, only the TLSStore named default is supported.\nThis means that you cannot have two stores that are named default in different Kubernetes namespaces.\nMore info: https://doc.traefik.io/traefik/v3.1/https/tls/#certificates-stores",
			"type": "object",
			"required": [
				"metadata",
				"spec"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
					}
					]
				},
				"spec": {
					"description": "TLSStoreSpec defines the desired state of a TLSStore.",
					"type": "object",
					"properties": {
					"certificates": {
						"description": "Certificates is a list of secret names, each secret holding a key/certificate pair to add to the store.",
						"type": "array",
						"items": {
							"description": "Certificate holds a secret name for the TLSStore resource.",
							"type": "object",
							"required": [
							"secretName"
							],
							"properties": {
							"secretName": {
								"description": "SecretName is the name of the referenced Kubernetes Secret to specify the certificate details.",
								"type": "string"
							}
							}
						}
					},
					"defaultCertificate": {
						"description": "DefaultCertificate defines the default certificate configuration.",
						"type": "object",
						"required": [
							"secretName"
						],
						"properties": {
							"secretName": {
							"description": "SecretName is the name of the referenced Kubernetes Secret to specify the certificate details.",
							"type": "string"
							}
						}
					},
					"defaultGeneratedCert": {
						"description": "DefaultGeneratedCert defines the default generated certificate configuration.",
						"type": "object",
						"properties": {
							"domain": {
							"description": "Domain is the domain definition for the DefaultCertificate.",
							"type": "object",
							"properties": {
								"main": {
									"description": "Main defines the main domain name.",
									"type": "string"
								},
								"sans": {
									"description": "SANs defines the subject alternative domain names.",
									"type": "array",
									"items": {
									"type": "string"
									}
								}
							}
							},
							"resolver": {
							"description": "Resolver is the name of the resolver that will be used to issue the DefaultCertificate.",
							"type": "string"
							}
						}
					}
					}
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "TLSStore",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.TLSStoreList": {
			"description": "TLSStoreList is a list of TLSStore",
			"type": "object",
			"required": [
				"items"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"items": {
					"description": "List of tlsstores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
					"type": "array",
					"items": {
					"$ref": "#/components/schemas/io.traefik.v1alpha1.TLSStore"
					}
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
					}
					]
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "TLSStoreList",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.TraefikService": {
			"description": "TraefikService is the CRD implementation of a Traefik Service.\nTraefikService object allows to:\n- Apply weight to Services on load-balancing\n- Mirror traffic on services\nMore info: https://doc.traefik.io/traefik/v3.1/routing/providers/kubernetes-crd/#kind-traefikservice",
			"type": "object",
			"required": [
				"metadata",
				"spec"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
					}
					]
				},
				"spec": {
					"description": "TraefikServiceSpec defines the desired state of a TraefikService.",
					"type": "object",
					"properties": {
					"mirroring": {
						"description": "Mirroring defines the Mirroring service configuration.",
						"type": "object",
						"required": [
							"name"
						],
						"properties": {
							"healthCheck": {
							"description": "Healthcheck defines health checks for ExternalName services.",
							"type": "object",
							"properties": {
								"followRedirects": {
									"description": "FollowRedirects defines whether redirects should be followed during the health check calls.\nDefault: true",
									"type": "boolean"
								},
								"headers": {
									"description": "Headers defines custom headers to be sent to the health check endpoint.",
									"type": "object",
									"additionalProperties": {
									"type": "string"
									}
								},
								"hostname": {
									"description": "Hostname defines the value of hostname in the Host header of the health check request.",
									"type": "string"
								},
								"interval": {
									"description": "Interval defines the frequency of the health check calls.\nDefault: 30s",
									"anyOf": [
									{
										"type": "integer"
									},
									{
										"type": "string"
									}
									],
									"x-kubernetes-int-or-string": true
								},
								"method": {
									"description": "Method defines the healthcheck method.",
									"type": "string"
								},
								"mode": {
									"description": "Mode defines the health check mode.\nIf defined to grpc, will use the gRPC health check protocol to probe the server.\nDefault: http",
									"type": "string"
								},
								"path": {
									"description": "Path defines the server URL path for the health check endpoint.",
									"type": "string"
								},
								"port": {
									"description": "Port defines the server URL port for the health check endpoint.",
									"type": "integer"
								},
								"scheme": {
									"description": "Scheme replaces the server URL scheme for the health check endpoint.",
									"type": "string"
								},
								"status": {
									"description": "Status defines the expected HTTP status code of the response to the health check request.",
									"type": "integer"
								},
								"timeout": {
									"description": "Timeout defines the maximum duration Traefik will wait for a health check request before considering the server unhealthy.\nDefault: 5s",
									"anyOf": [
									{
										"type": "integer"
									},
									{
										"type": "string"
									}
									],
									"x-kubernetes-int-or-string": true
								}
							}
							},
							"kind": {
							"description": "Kind defines the kind of the Service.",
							"type": "string",
							"enum": [
								"Service",
								"TraefikService"
							]
							},
							"maxBodySize": {
							"description": "MaxBodySize defines the maximum size allowed for the body of the request.\nIf the body is larger, the request is not mirrored.\nDefault value is -1, which means unlimited size.",
							"type": "integer",
							"format": "int64"
							},
							"mirrors": {
							"description": "Mirrors defines the list of mirrors where Traefik will duplicate the traffic.",
							"type": "array",
							"items": {
								"description": "MirrorService holds the mirror configuration.",
								"type": "object",
								"required": [
									"name"
								],
								"properties": {
									"healthCheck": {
									"description": "Healthcheck defines health checks for ExternalName services.",
									"type": "object",
									"properties": {
										"followRedirects": {
											"description": "FollowRedirects defines whether redirects should be followed during the health check calls.\nDefault: true",
											"type": "boolean"
										},
										"headers": {
											"description": "Headers defines custom headers to be sent to the health check endpoint.",
											"type": "object",
											"additionalProperties": {
											"type": "string"
											}
										},
										"hostname": {
											"description": "Hostname defines the value of hostname in the Host header of the health check request.",
											"type": "string"
										},
										"interval": {
											"description": "Interval defines the frequency of the health check calls.\nDefault: 30s",
											"anyOf": [
											{
												"type": "integer"
											},
											{
												"type": "string"
											}
											],
											"x-kubernetes-int-or-string": true
										},
										"method": {
											"description": "Method defines the healthcheck method.",
											"type": "string"
										},
										"mode": {
											"description": "Mode defines the health check mode.\nIf defined to grpc, will use the gRPC health check protocol to probe the server.\nDefault: http",
											"type": "string"
										},
										"path": {
											"description": "Path defines the server URL path for the health check endpoint.",
											"type": "string"
										},
										"port": {
											"description": "Port defines the server URL port for the health check endpoint.",
											"type": "integer"
										},
										"scheme": {
											"description": "Scheme replaces the server URL scheme for the health check endpoint.",
											"type": "string"
										},
										"status": {
											"description": "Status defines the expected HTTP status code of the response to the health check request.",
											"type": "integer"
										},
										"timeout": {
											"description": "Timeout defines the maximum duration Traefik will wait for a health check request before considering the server unhealthy.\nDefault: 5s",
											"anyOf": [
											{
												"type": "integer"
											},
											{
												"type": "string"
											}
											],
											"x-kubernetes-int-or-string": true
										}
									}
									},
									"kind": {
									"description": "Kind defines the kind of the Service.",
									"type": "string",
									"enum": [
										"Service",
										"TraefikService"
									]
									},
									"name": {
									"description": "Name defines the name of the referenced Kubernetes Service or TraefikService.\nThe differentiation between the two is specified in the Kind field.",
									"type": "string"
									},
									"namespace": {
									"description": "Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.",
									"type": "string"
									},
									"nativeLB": {
									"description": "NativeLB controls, when creating the load-balancer,\nwhether the LB's children are directly the pods IPs or if the only child is the Kubernetes Service clusterIP.\nThe Kubernetes Service itself does load-balance to the pods.\nBy default, NativeLB is false.",
									"type": "boolean"
									},
									"nodePortLB": {
									"description": "NodePortLB controls, when creating the load-balancer,\nwhether the LB's children are directly the nodes internal IPs using the nodePort when the service type is NodePort.\nIt allows services to be reachable when Traefik runs externally from the Kubernetes cluster but within the same network of the nodes.\nBy default, NodePortLB is false.",
									"type": "boolean"
									},
									"passHostHeader": {
									"description": "PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service.\nBy default, passHostHeader is true.",
									"type": "boolean"
									},
									"percent": {
									"description": "Percent defines the part of the traffic to mirror.\nSupported values: 0 to 100.",
									"type": "integer"
									},
									"port": {
									"description": "Port defines the port of a Kubernetes Service.\nThis can be a reference to a named port.",
									"anyOf": [
										{
											"type": "integer"
										},
										{
											"type": "string"
										}
									],
									"x-kubernetes-int-or-string": true
									},
									"responseForwarding": {
									"description": "ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.",
									"type": "object",
									"properties": {
										"flushInterval": {
											"description": "FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body.\nA negative value means to flush immediately after each write to the client.\nThis configuration is ignored when ReverseProxy recognizes a response as a streaming response;\nfor such responses, writes are flushed to the client immediately.\nDefault: 100ms",
											"type": "string"
										}
									}
									},
									"scheme": {
									"description": "Scheme defines the scheme to use for the request to the upstream Kubernetes Service.\nIt defaults to https when Kubernetes Service port is 443, http otherwise.",
									"type": "string"
									},
									"serversTransport": {
									"description": "ServersTransport defines the name of ServersTransport resource to use.\nIt allows to configure the transport between Traefik and your servers.\nCan only be used on a Kubernetes Service.",
									"type": "string"
									},
									"sticky": {
									"description": "Sticky defines the sticky sessions configuration.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/services/#sticky-sessions",
									"type": "object",
									"properties": {
										"cookie": {
											"description": "Cookie defines the sticky cookie configuration.",
											"type": "object",
											"properties": {
											"httpOnly": {
												"description": "HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.",
												"type": "boolean"
											},
											"maxAge": {
												"description": "MaxAge indicates the number of seconds until the cookie expires.\nWhen set to a negative number, the cookie expires immediately.\nWhen set to zero, the cookie never expires.",
												"type": "integer"
											},
											"name": {
												"description": "Name defines the Cookie name.",
												"type": "string"
											},
											"sameSite": {
												"description": "SameSite defines the same site policy.\nMore info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite",
												"type": "string"
											},
											"secure": {
												"description": "Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).",
												"type": "boolean"
											}
											}
										}
									}
									},
									"strategy": {
									"description": "Strategy defines the load balancing strategy between the servers.\nRoundRobin is the only supported value at the moment.",
									"type": "string"
									},
									"weight": {
									"description": "Weight defines the weight and should only be specified when Name references a TraefikService object\n(and to be precise, one that embeds a Weighted Round Robin).",
									"type": "integer"
									}
								}
							}
							},
							"name": {
							"description": "Name defines the name of the referenced Kubernetes Service or TraefikService.\nThe differentiation between the two is specified in the Kind field.",
							"type": "string"
							},
							"namespace": {
							"description": "Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.",
							"type": "string"
							},
							"nativeLB": {
							"description": "NativeLB controls, when creating the load-balancer,\nwhether the LB's children are directly the pods IPs or if the only child is the Kubernetes Service clusterIP.\nThe Kubernetes Service itself does load-balance to the pods.\nBy default, NativeLB is false.",
							"type": "boolean"
							},
							"nodePortLB": {
							"description": "NodePortLB controls, when creating the load-balancer,\nwhether the LB's children are directly the nodes internal IPs using the nodePort when the service type is NodePort.\nIt allows services to be reachable when Traefik runs externally from the Kubernetes cluster but within the same network of the nodes.\nBy default, NodePortLB is false.",
							"type": "boolean"
							},
							"passHostHeader": {
							"description": "PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service.\nBy default, passHostHeader is true.",
							"type": "boolean"
							},
							"port": {
							"description": "Port defines the port of a Kubernetes Service.\nThis can be a reference to a named port.",
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "string"
								}
							],
							"x-kubernetes-int-or-string": true
							},
							"responseForwarding": {
							"description": "ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.",
							"type": "object",
							"properties": {
								"flushInterval": {
									"description": "FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body.\nA negative value means to flush immediately after each write to the client.\nThis configuration is ignored when ReverseProxy recognizes a response as a streaming response;\nfor such responses, writes are flushed to the client immediately.\nDefault: 100ms",
									"type": "string"
								}
							}
							},
							"scheme": {
							"description": "Scheme defines the scheme to use for the request to the upstream Kubernetes Service.\nIt defaults to https when Kubernetes Service port is 443, http otherwise.",
							"type": "string"
							},
							"serversTransport": {
							"description": "ServersTransport defines the name of ServersTransport resource to use.\nIt allows to configure the transport between Traefik and your servers.\nCan only be used on a Kubernetes Service.",
							"type": "string"
							},
							"sticky": {
							"description": "Sticky defines the sticky sessions configuration.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/services/#sticky-sessions",
							"type": "object",
							"properties": {
								"cookie": {
									"description": "Cookie defines the sticky cookie configuration.",
									"type": "object",
									"properties": {
									"httpOnly": {
										"description": "HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.",
										"type": "boolean"
									},
									"maxAge": {
										"description": "MaxAge indicates the number of seconds until the cookie expires.\nWhen set to a negative number, the cookie expires immediately.\nWhen set to zero, the cookie never expires.",
										"type": "integer"
									},
									"name": {
										"description": "Name defines the Cookie name.",
										"type": "string"
									},
									"sameSite": {
										"description": "SameSite defines the same site policy.\nMore info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite",
										"type": "string"
									},
									"secure": {
										"description": "Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).",
										"type": "boolean"
									}
									}
								}
							}
							},
							"strategy": {
							"description": "Strategy defines the load balancing strategy between the servers.\nRoundRobin is the only supported value at the moment.",
							"type": "string"
							},
							"weight": {
							"description": "Weight defines the weight and should only be specified when Name references a TraefikService object\n(and to be precise, one that embeds a Weighted Round Robin).",
							"type": "integer"
							}
						}
					},
					"weighted": {
						"description": "Weighted defines the Weighted Round Robin configuration.",
						"type": "object",
						"properties": {
							"services": {
							"description": "Services defines the list of Kubernetes Service and/or TraefikService to load-balance, with weight.",
							"type": "array",
							"items": {
								"description": "Service defines an upstream HTTP service to proxy traffic to.",
								"type": "object",
								"required": [
									"name"
								],
								"properties": {
									"healthCheck": {
									"description": "Healthcheck defines health checks for ExternalName services.",
									"type": "object",
									"properties": {
										"followRedirects": {
											"description": "FollowRedirects defines whether redirects should be followed during the health check calls.\nDefault: true",
											"type": "boolean"
										},
										"headers": {
											"description": "Headers defines custom headers to be sent to the health check endpoint.",
											"type": "object",
											"additionalProperties": {
											"type": "string"
											}
										},
										"hostname": {
											"description": "Hostname defines the value of hostname in the Host header of the health check request.",
											"type": "string"
										},
										"interval": {
											"description": "Interval defines the frequency of the health check calls.\nDefault: 30s",
											"anyOf": [
											{
												"type": "integer"
											},
											{
												"type": "string"
											}
											],
											"x-kubernetes-int-or-string": true
										},
										"method": {
											"description": "Method defines the healthcheck method.",
											"type": "string"
										},
										"mode": {
											"description": "Mode defines the health check mode.\nIf defined to grpc, will use the gRPC health check protocol to probe the server.\nDefault: http",
											"type": "string"
										},
										"path": {
											"description": "Path defines the server URL path for the health check endpoint.",
											"type": "string"
										},
										"port": {
											"description": "Port defines the server URL port for the health check endpoint.",
											"type": "integer"
										},
										"scheme": {
											"description": "Scheme replaces the server URL scheme for the health check endpoint.",
											"type": "string"
										},
										"status": {
											"description": "Status defines the expected HTTP status code of the response to the health check request.",
											"type": "integer"
										},
										"timeout": {
											"description": "Timeout defines the maximum duration Traefik will wait for a health check request before considering the server unhealthy.\nDefault: 5s",
											"anyOf": [
											{
												"type": "integer"
											},
											{
												"type": "string"
											}
											],
											"x-kubernetes-int-or-string": true
										}
									}
									},
									"kind": {
									"description": "Kind defines the kind of the Service.",
									"type": "string",
									"enum": [
										"Service",
										"TraefikService"
									]
									},
									"name": {
									"description": "Name defines the name of the referenced Kubernetes Service or TraefikService.\nThe differentiation between the two is specified in the Kind field.",
									"type": "string"
									},
									"namespace": {
									"description": "Namespace defines the namespace of the referenced Kubernetes Service or TraefikService.",
									"type": "string"
									},
									"nativeLB": {
									"description": "NativeLB controls, when creating the load-balancer,\nwhether the LB's children are directly the pods IPs or if the only child is the Kubernetes Service clusterIP.\nThe Kubernetes Service itself does load-balance to the pods.\nBy default, NativeLB is false.",
									"type": "boolean"
									},
									"nodePortLB": {
									"description": "NodePortLB controls, when creating the load-balancer,\nwhether the LB's children are directly the nodes internal IPs using the nodePort when the service type is NodePort.\nIt allows services to be reachable when Traefik runs externally from the Kubernetes cluster but within the same network of the nodes.\nBy default, NodePortLB is false.",
									"type": "boolean"
									},
									"passHostHeader": {
									"description": "PassHostHeader defines whether the client Host header is forwarded to the upstream Kubernetes Service.\nBy default, passHostHeader is true.",
									"type": "boolean"
									},
									"port": {
									"description": "Port defines the port of a Kubernetes Service.\nThis can be a reference to a named port.",
									"anyOf": [
										{
											"type": "integer"
										},
										{
											"type": "string"
										}
									],
									"x-kubernetes-int-or-string": true
									},
									"responseForwarding": {
									"description": "ResponseForwarding defines how Traefik forwards the response from the upstream Kubernetes Service to the client.",
									"type": "object",
									"properties": {
										"flushInterval": {
											"description": "FlushInterval defines the interval, in milliseconds, in between flushes to the client while copying the response body.\nA negative value means to flush immediately after each write to the client.\nThis configuration is ignored when ReverseProxy recognizes a response as a streaming response;\nfor such responses, writes are flushed to the client immediately.\nDefault: 100ms",
											"type": "string"
										}
									}
									},
									"scheme": {
									"description": "Scheme defines the scheme to use for the request to the upstream Kubernetes Service.\nIt defaults to https when Kubernetes Service port is 443, http otherwise.",
									"type": "string"
									},
									"serversTransport": {
									"description": "ServersTransport defines the name of ServersTransport resource to use.\nIt allows to configure the transport between Traefik and your servers.\nCan only be used on a Kubernetes Service.",
									"type": "string"
									},
									"sticky": {
									"description": "Sticky defines the sticky sessions configuration.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/services/#sticky-sessions",
									"type": "object",
									"properties": {
										"cookie": {
											"description": "Cookie defines the sticky cookie configuration.",
											"type": "object",
											"properties": {
											"httpOnly": {
												"description": "HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.",
												"type": "boolean"
											},
											"maxAge": {
												"description": "MaxAge indicates the number of seconds until the cookie expires.\nWhen set to a negative number, the cookie expires immediately.\nWhen set to zero, the cookie never expires.",
												"type": "integer"
											},
											"name": {
												"description": "Name defines the Cookie name.",
												"type": "string"
											},
											"sameSite": {
												"description": "SameSite defines the same site policy.\nMore info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite",
												"type": "string"
											},
											"secure": {
												"description": "Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).",
												"type": "boolean"
											}
											}
										}
									}
									},
									"strategy": {
									"description": "Strategy defines the load balancing strategy between the servers.\nRoundRobin is the only supported value at the moment.",
									"type": "string"
									},
									"weight": {
									"description": "Weight defines the weight and should only be specified when Name references a TraefikService object\n(and to be precise, one that embeds a Weighted Round Robin).",
									"type": "integer"
									}
								}
							}
							},
							"sticky": {
							"description": "Sticky defines whether sticky sessions are enabled.\nMore info: https://doc.traefik.io/traefik/v3.1/routing/providers/kubernetes-crd/#stickiness-and-load-balancing",
							"type": "object",
							"properties": {
								"cookie": {
									"description": "Cookie defines the sticky cookie configuration.",
									"type": "object",
									"properties": {
									"httpOnly": {
										"description": "HTTPOnly defines whether the cookie can be accessed by client-side APIs, such as JavaScript.",
										"type": "boolean"
									},
									"maxAge": {
										"description": "MaxAge indicates the number of seconds until the cookie expires.\nWhen set to a negative number, the cookie expires immediately.\nWhen set to zero, the cookie never expires.",
										"type": "integer"
									},
									"name": {
										"description": "Name defines the Cookie name.",
										"type": "string"
									},
									"sameSite": {
										"description": "SameSite defines the same site policy.\nMore info: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite",
										"type": "string"
									},
									"secure": {
										"description": "Secure defines whether the cookie can only be transmitted over an encrypted connection (i.e. HTTPS).",
										"type": "boolean"
									}
									}
								}
							}
							}
						}
					}
					}
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "TraefikService",
					"version": "v1alpha1"
				}
			]
			},
			"io.traefik.v1alpha1.TraefikServiceList": {
			"description": "TraefikServiceList is a list of TraefikService",
			"type": "object",
			"required": [
				"items"
			],
			"properties": {
				"apiVersion": {
					"description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
					"type": "string"
				},
				"items": {
					"description": "List of traefikservices. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
					"type": "array",
					"items": {
					"$ref": "#/components/schemas/io.traefik.v1alpha1.TraefikService"
					}
				},
				"kind": {
					"description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"type": "string"
				},
				"metadata": {
					"description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
					"allOf": [
					{
						"$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
					}
					]
				}
			},
			"x-kubernetes-group-version-kind": [
				{
					"group": "traefik.io",
					"kind": "TraefikServiceList",
					"version": "v1alpha1"
				}
			]
			}
		}
	}
}

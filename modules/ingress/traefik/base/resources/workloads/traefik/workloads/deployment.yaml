apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
spec:
  revisionHistoryLimit: 5
  selector:
    matchLabels: {}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
  minReadySeconds: 0
  template:
    spec:
      serviceAccountName: traefik
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 60
      hostNetwork: false
      hostPID: false
      hostIPC: false
      containers:
      - name: traefik
        image: docker.io/library/traefik:latest
        resources: {}
        args:
        - --global.checknewversion=false
        - --global.sendanonymoususage=false
        - --api.dashboard=true
        - --api.disabledashboardad=true
        - --ping=true
        - --log.format=json
        - --log.level=$(LOG_LEVEL)
        - --accesslog.format=json
        - --metrics.prometheus.entrypoint=traefik
        - --entryPoints.traefik.address=:$(METRICS_PORT)/tcp
        - --entryPoints.traefik.transport.lifecycle.gracetimeout=1
        - --entrypoints.traefik.transport.lifecycle.requestacceptgracetimeout=0
        - --entryPoints.web.address=:$(HTTP_PORT)/tcp
        - --entryPoints.web.transport.lifecycle.gracetimeout=30
        - --entrypoints.web.transport.lifecycle.requestacceptgracetimeout=29
        - --entrypoints.web.http.redirections.entryPoint.to=:443
        - --entrypoints.web.http.redirections.entryPoint.scheme=https
        - --entrypoints.web.http.redirections.entrypoint.priority=0
        - --entryPoints.websecure.address=:$(HTTPS_PORT)/tcp
        - --entryPoints.websecure.transport.lifecycle.gracetimeout=30
        - --entrypoints.websecure.transport.lifecycle.requestacceptgracetimeout=29
        - --entrypoints.websecure.http.tls=true
        - --providers.providersthrottleduration=60s
        - --providers.kubernetesingress.ingressclass=traefik
        - --providers.kubernetesingress.allowexternalnameservices=false
        - --providers.kubernetescrd.allowcrossnamespace=true
        - --providers.kubernetescrd.allowexternalnameservices=false
        env:
        - name: LOG_LEVEL
          value: WARN
        - name: HTTP_PORT
          value: "0"
        - name: HTTPS_PORT
          value: "0"
        - name: METRICS_PORT
          value: "0"
        ports:
        - name: web
          containerPort: 11240
          protocol: TCP
        - name: websecure
          containerPort: 11241
          protocol: TCP
        - name: traefik
          containerPort: 11242
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ping
            port: traefik
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /ping
            port: traefik
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          privileged: false
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: serviceaccount-token
          readOnly: true
      volumes:
      - name: tmp
        emptyDir:
          medium: Memory
      - name: serviceaccount-token
        projected:
          defaultMode: 0444
          sources:
          - serviceAccountToken:
              expirationSeconds: 3600
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        runAsUser: 48040
        runAsGroup: 48040
        fsGroup: 48040

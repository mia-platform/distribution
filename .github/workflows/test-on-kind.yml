name: Test Modules

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test-modules:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kind_version: [1.24.0, 1.23.0]
        module: [ modules/ingress/traefik-base, modules/ingress/cert-manager-base, modules/cni/cilium-base ]
        include:
          - kind_config: .github/workflows/kind-configs/default.yaml
          - module: modules/cni/cilium-base
            kind_config: .github/workflows/kind-configs/no-ci.yaml

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.3.0
        with:
          version: v0.14.0
          node_image: kindest/node:v${{ matrix.kind_version }}
          config: ${{ matrix.kind_config }}

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.9.2

      - name: Install yq
        id: yq
        uses: mikefarah/yq@master

      - name: Kustomize Build
        uses: karancode/kustomize-github-action@master
        with:
          kustomize_version: '4.5.7'
          kustomize_build_dir: '${{ matrix.module }}'
          kustomize_comment: false # Whether or not to comment on GitHub pull requests.
          kustomize_output_file: "ci/rendered.yaml"
          kustomize_build_options: "--enable-helm --helm-command /opt/hostedtoolcache/helm/3.9.2/x64/linux-amd64/helm"

      - name: Install module
        run: |
          kubectl cluster-info
          CRDS=$(yq ea 'select(.kind == "CustomResourceDefinition")' ci/rendered.yaml)
          NON_CRDS=$(yq ea 'select(.kind != "CustomResourceDefinition")' ci/rendered.yaml)
          if [ -n "$CRDS" ] ; then
            echo "Apply CRDs.."
            kubectl apply -f - <<< $CRDS
            echo "Wait until all CRDs are available.."
            kubectl wait --for condition=established crd $(yq ea 'select(.kind == "CustomResourceDefinition") | [ .metadata.name ] | join(" ")' ci/rendered.yaml )
          fi
          echo "Apply other resources.."
          kubectl apply -f - <<< $NON_CRDS

      - name: Test - Rollout success
        run: |
          AWAITABLES="Deployment StatefulSet DaemonSet"
          for KIND in $AWAITABLES ; do
            NAMES=$(yq ea "select(.kind == \"$KIND\") | [ .metadata.name ] | join(\" \")" ci/rendered.yaml)
            for NAME in $NAMES ; do
              kubectl -n $(yq ea "select(.kind == \"$KIND\" and .metadata.name == \"$NAME\") | .metadata.namespace" ci/rendered.yaml ) rollout status $KIND --timeout 120s $NAME
            done
          done
